add:
pop rbx
pop rax
pop rcx
push rbx
add rax, rcx
ret
sysc:
pop rcx
pop rax
pop rdi
pop rsi
pop rdx
pop r10
pop r8
pop r9
push rcx
syscall
ret
deref:
pop rdx
pop rax
push rdx
mov rax, [rax]
ret
deref_byte:
pop rdx
pop rax
push rdx
mov al, [rax]
and rax, 0xFF
ret
return:
pop rcx
pop rax
push rcx
ret
mul:
pop rcx
pop rax
pop rdx
mul rdx
jmp rcx
div:
pop rcx
pop rax
mov rdx, 0
pop rdi
idiv rdi
jmp rcx
mod:
pop rcx
pop rax
mov rdx, 0
pop rdi
idiv rdi
mov rax, rdx
jmp rcx
is_digit:
pop rax
pop rdi
push rax
cmp rdi, 48
jl not_digit
cmp rdi, 57
jg not_digit
yes_digit:
mov rax, 1
ret
not_digit:
mov rax, 0
ret
section .rwx progbits alloc exec write align=16
global _start
_start:
jmp start

compare: 
  pop rax
  pop rcx
  pop rdi
  pop rsi
  cmp rax, rcx
  jne compare_fail
  push rdi
  jmp runtime_call

  compare_fail:
    push rsi
    jmp runtime_call

jmp callcc_end
callccret: dq 0
callcccont: dq 0
callcc:
pop qword [callccret]
pop qword [callcccont]
jmp f21_end
callccf21: dq 0
f21_end:
jmp f6_end
f6ret: dq 0
f6cont: dq 0
f6res: dq 0
f6:
pop qword [f6ret]
pop qword [f6cont]
pop qword [f6res]
jmp f31_end
f6f31: dq 0
f31_end:
push qword [f6res]
pop qword [f6f31]
push qword [f6f31]
jmp f41_end
f6f41: dq 0
f41_end:
push qword [f6ret]
pop qword [f6f41]
push qword [f6f41]
jmp return
f6_end:
mov rdi, 32
call malloc
mov qword [rax+8], f6
mov rcx, [callccret]
mov qword [rax+16], rcx
mov rcx, [callcccont]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [callccf21]
push qword [callccf21]
push qword [callcccont]
jmp runtime_call
callcc_end:
jmp or_end
orret: dq 0
orcont1: dq 0
orcont2: dq 0
or:
pop qword [orret]
pop qword [orcont1]
pop qword [orcont2]
jmp f62_end
orf62: dq 0
f62_end:
jmp f22_end
f22ret: dq 0
f22cont1: dq 0
f22cont2: dq 0
f22:
pop qword [f22ret]
pop qword [f22cont1]
pop qword [f22cont2]
jmp f72_end
f22f72: dq 0
f72_end:
push qword [f22cont2]
pop qword [f22f72]
push qword [f22f72]
jmp f03_end
f22f03: dq 0
f03_end:
push qword [f22ret]
pop qword [f22f03]
push qword [f22f03]
jmp return
f22_end:
mov rdi, 40
call malloc
mov qword [rax+8], f22
mov rcx, [orret]
mov qword [rax+16], rcx
mov rcx, [orcont1]
mov qword [rax+24], rcx
mov rcx, [orcont2]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [orf62]
push qword [orf62]
jmp f13_end
orf13: dq 0
f13_end:
jmp f71_end
f71ret: dq 0
f71cont1: dq 0
f71cont2: dq 0
f71:
pop qword [f71ret]
pop qword [f71cont1]
pop qword [f71cont2]
jmp f23_end
f71f23: dq 0
f23_end:
push qword [f71cont1]
pop qword [f71f23]
push qword [f71f23]
jmp f33_end
f71f33: dq 0
f33_end:
push qword [f71ret]
pop qword [f71f33]
push qword [f71f33]
jmp return
f71_end:
mov rdi, 40
call malloc
mov qword [rax+8], f71
mov rcx, [orret]
mov qword [rax+16], rcx
mov rcx, [orcont1]
mov qword [rax+24], rcx
mov rcx, [orcont2]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [orf13]
push qword [orf13]
push qword [orcont1]
jmp runtime_call
or_end:
jmp if_end
ifret: dq 0
ifv: dq 0
ifcont: dq 0
ifbreak: dq 0
if:
pop qword [ifret]
pop qword [ifv]
pop qword [ifcont]
jmp f53_end
f53ret: dq 0
f53v: dq 0
f53cont: dq 0
f53:
pop qword [f53ret]
pop qword [f53v]
pop qword [f53cont]
jmp f54_end
f53f54: dq 0
f54_end:
push 0
pop qword [f53f54]
push qword [f53f54]
jmp f64_end
f53f64: dq 0
f64_end:
push qword [f53ret]
pop qword [f53f64]
push qword [f53f64]
jmp return
f53_end:
mov rdi, 40
call malloc
mov qword [rax+8], f53
mov rcx, [ifret]
mov qword [rax+16], rcx
mov rcx, [ifv]
mov qword [rax+24], rcx
mov rcx, [ifcont]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [ifbreak]
jmp f74_end
iff74: dq 0
f74_end:
push qword [ifbreak]
pop qword [iff74]
push qword [iff74]
jmp f05_end
iff05: dq 0
f05_end:
jmp f14_end
f14ret: dq 0
f14v: dq 0
f14cont: dq 0
f14break: dq 0
f14:
pop qword [f14ret]
pop qword [f14v]
pop qword [f14cont]
pop qword [f14break]
jmp f15_end
f14f15: dq 0
f15_end:
push qword [f14break]
pop qword [f14f15]
push qword [f14f15]
push qword [f14cont]
jmp runtime_call
f14_end:
mov rdi, 48
call malloc
mov qword [rax+8], f14
mov rcx, [ifret]
mov qword [rax+16], rcx
mov rcx, [ifv]
mov qword [rax+24], rcx
mov rcx, [ifcont]
mov qword [rax+32], rcx
mov rcx, [ifbreak]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [iff05]
push qword [iff05]
push qword [ifv]
jmp runtime_call
if_end:
jmp if_else_end
if_elseret: dq 0
if_elsev: dq 0
if_elsecont1: dq 0
if_elsecont2: dq 0
if_elsebreak: dq 0
if_else:
pop qword [if_elseret]
pop qword [if_elsev]
pop qword [if_elsecont1]
pop qword [if_elsecont2]
jmp f35_end
f35ret: dq 0
f35v: dq 0
f35cont1: dq 0
f35cont2: dq 0
f35:
pop qword [f35ret]
pop qword [f35v]
pop qword [f35cont1]
pop qword [f35cont2]
jmp f66_end
f35f66: dq 0
f66_end:
push 0
pop qword [f35f66]
push qword [f35f66]
jmp f76_end
f35f76: dq 0
f76_end:
push qword [f35ret]
pop qword [f35f76]
push qword [f35f76]
jmp return
f35_end:
mov rdi, 48
call malloc
mov qword [rax+8], f35
mov rcx, [if_elseret]
mov qword [rax+16], rcx
mov rcx, [if_elsev]
mov qword [rax+24], rcx
mov rcx, [if_elsecont1]
mov qword [rax+32], rcx
mov rcx, [if_elsecont2]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [if_elsebreak]
jmp f07_end
if_elsef07: dq 0
f07_end:
jmp f26_end
f26ret: dq 0
f26v: dq 0
f26cont1: dq 0
f26cont2: dq 0
f26break: dq 0
f26:
pop qword [f26ret]
pop qword [f26v]
pop qword [f26cont1]
pop qword [f26cont2]
pop qword [f26break]
jmp f17_end
f26f17: dq 0
f17_end:
push qword [f26break]
pop qword [f26f17]
push qword [f26f17]
push qword [f26cont2]
jmp runtime_call
f26_end:
mov rdi, 56
call malloc
mov qword [rax+8], f26
mov rcx, [if_elseret]
mov qword [rax+16], rcx
mov rcx, [if_elsev]
mov qword [rax+24], rcx
mov rcx, [if_elsecont1]
mov qword [rax+32], rcx
mov rcx, [if_elsecont2]
mov qword [rax+40], rcx
mov rcx, [if_elsebreak]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [if_elsef07]
push qword [if_elsef07]
jmp f27_end
if_elsef27: dq 0
f27_end:
jmp f75_end
f75ret: dq 0
f75v: dq 0
f75cont1: dq 0
f75cont2: dq 0
f75break: dq 0
f75:
pop qword [f75ret]
pop qword [f75v]
pop qword [f75cont1]
pop qword [f75cont2]
pop qword [f75break]
jmp f37_end
f75f37: dq 0
f37_end:
push qword [f75break]
pop qword [f75f37]
push qword [f75f37]
push qword [f75cont1]
jmp runtime_call
f75_end:
mov rdi, 56
call malloc
mov qword [rax+8], f75
mov rcx, [if_elseret]
mov qword [rax+16], rcx
mov rcx, [if_elsev]
mov qword [rax+24], rcx
mov rcx, [if_elsecont1]
mov qword [rax+32], rcx
mov rcx, [if_elsecont2]
mov qword [rax+40], rcx
mov rcx, [if_elsebreak]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [if_elsef27]
push qword [if_elsef27]
push qword [if_elsev]
jmp runtime_call
if_else_end:
jmp if_ret_end
if_retret: dq 0
if_retv: dq 0
if_retcont: dq 0
if_retbreak: dq 0
if_ret:
pop qword [if_retret]
pop qword [if_retv]
pop qword [if_retcont]
jmp f57_end
f57ret: dq 0
f57v: dq 0
f57cont: dq 0
f57:
pop qword [f57ret]
pop qword [f57v]
pop qword [f57cont]
jmp f601_end
f57f601: dq 0
f601_end:
push 0
pop qword [f57f601]
push qword [f57f601]
jmp f701_end
f57f701: dq 0
f701_end:
push qword [f57ret]
pop qword [f57f701]
push qword [f57f701]
jmp return
f57_end:
mov rdi, 40
call malloc
mov qword [rax+8], f57
mov rcx, [if_retret]
mov qword [rax+16], rcx
mov rcx, [if_retv]
mov qword [rax+24], rcx
mov rcx, [if_retcont]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [if_retbreak]
jmp f011_end
if_retf011: dq 0
f011_end:
push qword [if_retbreak]
pop qword [if_retf011]
push qword [if_retf011]
jmp f111_end
if_retf111: dq 0
f111_end:
jmp f101_end
f101ret: dq 0
f101v: dq 0
f101cont: dq 0
f101break: dq 0
f101f201: dq 0
f101:
pop qword [f101ret]
pop qword [f101v]
pop qword [f101cont]
pop qword [f101break]
push qword [f101ret]
push qword [f101v]
push qword [f101cont]
push qword [f101break]
push qword [f101cont]
call runtime_call_ret
push rax
pop qword [f101f201]
pop qword [f101break]
pop qword [f101cont]
pop qword [f101v]
pop qword [f101ret]
push qword [f101break]
jmp runtime_call
f101_end:
mov rdi, 48
call malloc
mov qword [rax+8], f101
mov rcx, [if_retret]
mov qword [rax+16], rcx
mov rcx, [if_retv]
mov qword [rax+24], rcx
mov rcx, [if_retcont]
mov qword [rax+32], rcx
mov rcx, [if_retbreak]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [if_retf111]
push qword [if_retf111]
push qword [if_retv]
jmp runtime_call
if_ret_end:
jmp if_else_ret_end
if_else_retret: dq 0
if_else_retv: dq 0
if_else_retcont1: dq 0
if_else_retcont2: dq 0
if_else_ret:
pop qword [if_else_retret]
pop qword [if_else_retv]
pop qword [if_else_retcont1]
pop qword [if_else_retcont2]
jmp f721_end
if_else_retf721: dq 0
f721_end:
jmp f121_end
f121ret: dq 0
f121v: dq 0
f121cont1: dq 0
f121cont2: dq 0
f121:
pop qword [f121ret]
pop qword [f121v]
pop qword [f121cont1]
pop qword [f121cont2]
jmp f031_end
f121f031: dq 0
f031_end:
push qword [f121cont2]
call runtime_call_ret
push rax
pop qword [f121f031]
push qword [f121f031]
jmp f131_end
f121f131: dq 0
f131_end:
push qword [f121ret]
pop qword [f121f131]
push qword [f121f131]
jmp return
f121_end:
mov rdi, 48
call malloc
mov qword [rax+8], f121
mov rcx, [if_else_retret]
mov qword [rax+16], rcx
mov rcx, [if_else_retv]
mov qword [rax+24], rcx
mov rcx, [if_else_retcont1]
mov qword [rax+32], rcx
mov rcx, [if_else_retcont2]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [if_else_retf721]
push qword [if_else_retf721]
jmp f231_end
if_else_retf231: dq 0
f231_end:
jmp f411_end
f411ret: dq 0
f411v: dq 0
f411cont1: dq 0
f411cont2: dq 0
f411:
pop qword [f411ret]
pop qword [f411v]
pop qword [f411cont1]
pop qword [f411cont2]
jmp f331_end
f411f331: dq 0
f331_end:
push qword [f411cont1]
call runtime_call_ret
push rax
pop qword [f411f331]
push qword [f411f331]
jmp f431_end
f411f431: dq 0
f431_end:
push qword [f411ret]
pop qword [f411f431]
push qword [f411f431]
jmp return
f411_end:
mov rdi, 48
call malloc
mov qword [rax+8], f411
mov rcx, [if_else_retret]
mov qword [rax+16], rcx
mov rcx, [if_else_retv]
mov qword [rax+24], rcx
mov rcx, [if_else_retcont1]
mov qword [rax+32], rcx
mov rcx, [if_else_retcont2]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [if_else_retf231]
push qword [if_else_retf231]
push qword [if_else_retv]
jmp runtime_call
if_else_ret_end:
jmp ne_end
neret: dq 0
nea: dq 0
neb: dq 0
ne:
pop qword [neret]
pop qword [nea]
pop qword [neb]
jmp f071_end
nef071: dq 0
f071_end:
jmp f161_end
f161ret: dq 0
f161a: dq 0
f161b: dq 0
f161:
pop qword [f161ret]
pop qword [f161a]
pop qword [f161b]
jmp f171_end
f161f171: dq 0
f171_end:
jmp f361_end
f361ret: dq 0
f361a: dq 0
f361b: dq 0
f361x: dq 0
f361y: dq 0
f361:
pop qword [f361ret]
pop qword [f361a]
pop qword [f361b]
pop qword [f361x]
pop qword [f361y]
push qword [f361x]
jmp runtime_call
f361_end:
mov rdi, 40
call malloc
mov qword [rax+8], f361
mov rcx, [f161ret]
mov qword [rax+16], rcx
mov rcx, [f161a]
mov qword [rax+24], rcx
mov rcx, [f161b]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [f161f171]
push qword [f161f171]
jmp f271_end
f161f271: dq 0
f271_end:
push qword [f161ret]
pop qword [f161f271]
push qword [f161f271]
jmp return
f161_end:
mov rdi, 40
call malloc
mov qword [rax+8], f161
mov rcx, [neret]
mov qword [rax+16], rcx
mov rcx, [nea]
mov qword [rax+24], rcx
mov rcx, [neb]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [nef071]
push qword [nef071]
jmp f371_end
nef371: dq 0
f371_end:
jmp f351_end
f351ret: dq 0
f351a: dq 0
f351b: dq 0
f351:
pop qword [f351ret]
pop qword [f351a]
pop qword [f351b]
jmp f471_end
f351f471: dq 0
f471_end:
jmp f551_end
f551ret: dq 0
f551a: dq 0
f551b: dq 0
f551x: dq 0
f551y: dq 0
f551:
pop qword [f551ret]
pop qword [f551a]
pop qword [f551b]
pop qword [f551x]
pop qword [f551y]
push qword [f551y]
jmp runtime_call
f551_end:
mov rdi, 40
call malloc
mov qword [rax+8], f551
mov rcx, [f351ret]
mov qword [rax+16], rcx
mov rcx, [f351a]
mov qword [rax+24], rcx
mov rcx, [f351b]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [f351f471]
push qword [f351f471]
jmp f571_end
f351f571: dq 0
f571_end:
push qword [f351ret]
pop qword [f351f571]
push qword [f351f571]
jmp return
f351_end:
mov rdi, 40
call malloc
mov qword [rax+8], f351
mov rcx, [neret]
mov qword [rax+16], rcx
mov rcx, [nea]
mov qword [rax+24], rcx
mov rcx, [neb]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [nef371]
push qword [nef371]
jmp f671_end
nef671: dq 0
f671_end:
push qword [neb]
pop qword [nef671]
push qword [nef671]
jmp f771_end
nef771: dq 0
f771_end:
push qword [nea]
pop qword [nef771]
push qword [nef771]
jmp compare
ne_end:
jmp not_end
notret: dq 0
notx: dq 0
not:
pop qword [notret]
pop qword [notx]
jmp f332_end
notf332: dq 0
f332_end:
jmp f422_end
f422ret: dq 0
f422x: dq 0
f422:
pop qword [f422ret]
pop qword [f422x]
jmp f432_end
f422f432: dq 0
f432_end:
jmp f622_end
f622ret: dq 0
f622x: dq 0
f622a: dq 0
f622b: dq 0
f622:
pop qword [f622ret]
pop qword [f622x]
pop qword [f622a]
pop qword [f622b]
push qword [f622a]
jmp runtime_call
f622_end:
mov rdi, 32
call malloc
mov qword [rax+8], f622
mov rcx, [f422ret]
mov qword [rax+16], rcx
mov rcx, [f422x]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [f422f432]
push qword [f422f432]
jmp f532_end
f422f532: dq 0
f532_end:
push qword [f422ret]
pop qword [f422f532]
push qword [f422f532]
jmp return
f422_end:
mov rdi, 32
call malloc
mov qword [rax+8], f422
mov rcx, [notret]
mov qword [rax+16], rcx
mov rcx, [notx]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [notf332]
push qword [notf332]
jmp f632_end
notf632: dq 0
f632_end:
jmp f612_end
f612ret: dq 0
f612x: dq 0
f612:
pop qword [f612ret]
pop qword [f612x]
jmp f732_end
f612f732: dq 0
f732_end:
jmp f022_end
f022ret: dq 0
f022x: dq 0
f022a: dq 0
f022b: dq 0
f022:
pop qword [f022ret]
pop qword [f022x]
pop qword [f022a]
pop qword [f022b]
push qword [f022b]
jmp runtime_call
f022_end:
mov rdi, 32
call malloc
mov qword [rax+8], f022
mov rcx, [f612ret]
mov qword [rax+16], rcx
mov rcx, [f612x]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [f612f732]
push qword [f612f732]
jmp f042_end
f612f042: dq 0
f042_end:
push qword [f612ret]
pop qword [f612f042]
push qword [f612f042]
jmp return
f612_end:
mov rdi, 32
call malloc
mov qword [rax+8], f612
mov rcx, [notret]
mov qword [rax+16], rcx
mov rcx, [notx]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [notf632]
push qword [notf632]
push qword [notx]
jmp runtime_call
not_end:
jmp eq_end
eqret: dq 0
eqa: dq 0
eqb: dq 0
eq:
pop qword [eqret]
pop qword [eqa]
pop qword [eqb]
jmp f472_end
eqf472: dq 0
f472_end:
jmp f562_end
f562ret: dq 0
f562a: dq 0
f562b: dq 0
f562:
pop qword [f562ret]
pop qword [f562a]
pop qword [f562b]
jmp f572_end
f562f572: dq 0
f572_end:
jmp f762_end
f762ret: dq 0
f762a: dq 0
f762b: dq 0
f762x: dq 0
f762y: dq 0
f762:
pop qword [f762ret]
pop qword [f762a]
pop qword [f762b]
pop qword [f762x]
pop qword [f762y]
push qword [f762y]
jmp runtime_call
f762_end:
mov rdi, 40
call malloc
mov qword [rax+8], f762
mov rcx, [f562ret]
mov qword [rax+16], rcx
mov rcx, [f562a]
mov qword [rax+24], rcx
mov rcx, [f562b]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [f562f572]
push qword [f562f572]
jmp f672_end
f562f672: dq 0
f672_end:
push qword [f562ret]
pop qword [f562f672]
push qword [f562f672]
jmp return
f562_end:
mov rdi, 40
call malloc
mov qword [rax+8], f562
mov rcx, [eqret]
mov qword [rax+16], rcx
mov rcx, [eqa]
mov qword [rax+24], rcx
mov rcx, [eqb]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [eqf472]
push qword [eqf472]
jmp f772_end
eqf772: dq 0
f772_end:
jmp f752_end
f752ret: dq 0
f752a: dq 0
f752b: dq 0
f752:
pop qword [f752ret]
pop qword [f752a]
pop qword [f752b]
jmp f003_end
f752f003: dq 0
f003_end:
jmp f162_end
f162ret: dq 0
f162a: dq 0
f162b: dq 0
f162x: dq 0
f162y: dq 0
f162:
pop qword [f162ret]
pop qword [f162a]
pop qword [f162b]
pop qword [f162x]
pop qword [f162y]
push qword [f162x]
jmp runtime_call
f162_end:
mov rdi, 40
call malloc
mov qword [rax+8], f162
mov rcx, [f752ret]
mov qword [rax+16], rcx
mov rcx, [f752a]
mov qword [rax+24], rcx
mov rcx, [f752b]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [f752f003]
push qword [f752f003]
jmp f103_end
f752f103: dq 0
f103_end:
push qword [f752ret]
pop qword [f752f103]
push qword [f752f103]
jmp return
f752_end:
mov rdi, 40
call malloc
mov qword [rax+8], f752
mov rcx, [eqret]
mov qword [rax+16], rcx
mov rcx, [eqa]
mov qword [rax+24], rcx
mov rcx, [eqb]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [eqf772]
push qword [eqf772]
jmp f203_end
eqf203: dq 0
f203_end:
push qword [eqb]
pop qword [eqf203]
push qword [eqf203]
jmp f303_end
eqf303: dq 0
f303_end:
push qword [eqa]
pop qword [eqf303]
push qword [eqf303]
jmp compare
eq_end:
exit:
  call flush_buffer
  mov rax, 60
  mov rdi, 0
  syscall
error:
  mov qword [outf], 2
  jmp error_help
jmp error_help_end
error_helpnum: dq 0
error_helpf503: dq 0
error_helpf213: dq 0
error_help:
pop qword [error_helpnum]
jmp f713_end
error_helpf713: dq 0
f713_end:
jmp f023_end
error_helpf023: dq 0
f023_end:
push 10
pop qword [error_helpf023]
push qword [error_helpf023]
jmp f123_end
error_helpf123: dq 0
f123_end:
push qword [error_helpnum]
pop qword [error_helpf123]
push qword [error_helpf123]
call add
push rax
pop qword [error_helpf713]
push qword [error_helpf713]
jmp f223_end
error_helpf223: dq 0
f223_end:
push qword [error_helpnum]
pop qword [error_helpf223]
push qword [error_helpf223]
jmp f323_end
error_helpf323: dq 0
f323_end:
jmp f423_end
f423: db `error {}\n`
db 0
f423_end: push f423
pop qword [error_helpf323]
push qword [error_helpf323]
call printf
push rax
pop qword [error_helpf503]
jmp f523_end
error_helpf523: dq 0
f523_end:
push 0
pop qword [error_helpf523]
push qword [error_helpf523]
jmp f623_end
error_helpf623: dq 0
f623_end:
push 0
pop qword [error_helpf623]
push qword [error_helpf623]
jmp f723_end
error_helpf723: dq 0
f723_end:
push 0
pop qword [error_helpf723]
push qword [error_helpf723]
jmp f033_end
error_helpf033: dq 0
f033_end:
push 0
pop qword [error_helpf033]
push qword [error_helpf033]
jmp f133_end
error_helpf133: dq 0
f133_end:
push 0
pop qword [error_helpf133]
push qword [error_helpf133]
jmp f233_end
error_helpf233: dq 0
f233_end:
push 1
pop qword [error_helpf233]
push qword [error_helpf233]
jmp f333_end
error_helpf333: dq 0
f333_end:
push 60
pop qword [error_helpf333]
push qword [error_helpf333]
call sysc
push rax
pop qword [error_helpf213]
jmp exit
error_help_end:
runtime_call:
  
  mov rdx, [rsp]
  mov rcx, [rdx]
  shl rcx, 3
  add rdx, 8
  add rsp, 8
  sub rsp, rcx

  runtime_call_loop:
  sub rcx, 8
  mov rax, [rdx+rcx]
  mov [rsp+rcx], rax
  cmp rcx, 0
  jne runtime_call_loop
  
  pop rax
  jmp rax

runtime_call_ret:
  
  pop rbp
  mov rdx, [rsp]
  mov rcx, [rdx]
  shl rcx, 3
  add rdx, 8
  add rsp, 8
  sub rsp, rcx

  runtime_call_ret_loop:
  sub rcx, 8
  mov rax, [rdx+rcx]
  mov [rsp+rcx], rax
  cmp rcx, 0
  jne runtime_call_ret_loop
  
  pop rax
  push rbp
  jmp rax

page_pointer:
dq 0
memory_left:
dq 0
malloc:
  push rcx
  push rdx
  push rsi
  push rdi
  push r8
  push r9
  push r10
  push r11

  cmp [memory_left], rdi
  jl new_page
  jmp malloc_ret
  
  new_page:
  push rdi
  mov rsi, 4096
  mov rdi, 0               
  mov rdx, 3               
  mov r10, 0x22           
  mov r8, -1              
  mov r9, 0               
  mov rax, 9               
  syscall
  pop rdi
  mov [page_pointer], rax
  mov qword [memory_left], 4096

  malloc_ret:
  mov rax, [page_pointer]
  add [page_pointer], rdi
  sub [memory_left], rdi

  pop r11
  pop r10
  pop r9
  pop r8
  pop rdi
  pop rsi
  pop rdx
  pop rcx
  ret
malloc_func:
  pop rax
  pop rdi
  push rax
  jmp malloc

jmp make_nil_end
make_nilf143: dq 0
make_nil:
pop rax
push rax
mov [make_nilf143], rsp
mov rsp, [make_nilf143]
jmp f243_end
make_nilf243: dq 0
f243_end:
jmp f533_end
f533f143: dq 0
f533cont_nil: dq 0
f533cont_leaf: dq 0
f533cont_internal: dq 0
f533:
pop qword [f533f143]
pop qword [f533cont_nil]
pop qword [f533cont_leaf]
pop qword [f533cont_internal]
push qword [f533cont_nil]
jmp runtime_call
f533_end:
mov rdi, 24
call malloc
mov qword [rax+8], f533
mov rcx, [make_nilf143]
mov qword [rax+16], rcx
mov qword [rax], 2
push rax
pop qword [make_nilf243]
pop rax
push qword [make_nilf243]
push rax
pop rcx
pop rax
jmp rcx
ret
make_nil_end:
jmp make_leaf_end
make_leafl: dq 0
make_leafr: dq 0
make_leaff053: dq 0
make_leaf:
pop rax
pop qword [make_leafl]
pop qword [make_leafr]
push rax
mov [make_leaff053], rsp
mov rsp, [make_leaff053]
jmp f153_end
make_leaff153: dq 0
f153_end:
jmp f443_end
f443l: dq 0
f443r: dq 0
f443f053: dq 0
f443cont_nil: dq 0
f443cont_leaf: dq 0
f443cont_internal: dq 0
f443:
pop qword [f443l]
pop qword [f443r]
pop qword [f443f053]
pop qword [f443cont_nil]
pop qword [f443cont_leaf]
pop qword [f443cont_internal]
jmp f253_end
f443f253: dq 0
f253_end:
push qword [f443r]
pop qword [f443f253]
push qword [f443f253]
jmp f353_end
f443f353: dq 0
f353_end:
push qword [f443l]
pop qword [f443f353]
push qword [f443f353]
push qword [f443cont_leaf]
jmp runtime_call
f443_end:
mov rdi, 40
call malloc
mov qword [rax+8], f443
mov rcx, [make_leafl]
mov qword [rax+16], rcx
mov rcx, [make_leafr]
mov qword [rax+24], rcx
mov rcx, [make_leaff053]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [make_leaff153]
pop rax
push qword [make_leaff153]
push rax
pop rcx
pop rax
jmp rcx
ret
make_leaf_end:
jmp make_internal_end
make_internala: dq 0
make_internalb: dq 0
make_internalf163: dq 0
make_internal:
pop rax
pop qword [make_internala]
pop qword [make_internalb]
push rax
mov [make_internalf163], rsp
mov rsp, [make_internalf163]
jmp f263_end
make_internalf263: dq 0
f263_end:
jmp f553_end
f553a: dq 0
f553b: dq 0
f553f163: dq 0
f553cont_nil: dq 0
f553cont_leaf: dq 0
f553cont_internal: dq 0
f553:
pop qword [f553a]
pop qword [f553b]
pop qword [f553f163]
pop qword [f553cont_nil]
pop qword [f553cont_leaf]
pop qword [f553cont_internal]
jmp f363_end
f553f363: dq 0
f363_end:
push qword [f553b]
pop qword [f553f363]
push qword [f553f363]
jmp f463_end
f553f463: dq 0
f463_end:
push qword [f553a]
pop qword [f553f463]
push qword [f553f463]
push qword [f553cont_internal]
jmp runtime_call
f553_end:
mov rdi, 40
call malloc
mov qword [rax+8], f553
mov rcx, [make_internala]
mov qword [rax+16], rcx
mov rcx, [make_internalb]
mov qword [rax+24], rcx
mov rcx, [make_internalf163]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [make_internalf263]
pop rax
push qword [make_internalf263]
push rax
pop rcx
pop rax
jmp rcx
ret
make_internal_end:
scmp:
  cmp rdi, rsi
  je end_of_string
  cmp rdx, rcx
  je end_of_string

  sub rax, rax
  mov al, [rdi]
  push rbx
  sub rbx, rbx
  mov bl, [rdx]
  sub rax, rbx
  pop rbx
  add rdi, 1
  add rdx, 1
  cmp rax, 0
  je scmp
  jl less
  mov rax, 1
  ret
  less:
  mov rax, -1
  ret

  end_of_string:
  mov rax, 0
  cmp rdi, rsi
  jne not_first_shorter
  add rax, -1
  not_first_shorter:
  cmp rdx, rcx
  jne not_second_shorter
  add rax, 1
  not_second_shorter:
  ret

cur_label:
  dq 1
gen_label:
  mov rdi, 8
  call malloc
  mov rdx, rax
  mov rcx, [cur_label]
  add qword [cur_label], 1
  mov qword [rdx], "f"
  add rdx, 1
  gen_label_loop:
  mov rbx, rcx
  and rbx, 7
  add rbx, "0"
  mov [rdx], bl
  add rdx, 1
  shr rcx, 3
  cmp rcx, 0
  jne gen_label_loop
  pop rcx
  push rdx
  jmp rcx


str_cmp_func:
  pop rax
  pop rdi
  pop rsi
  pop rdx
  pop rcx
  push rax
  call scmp
  ret

jmp str_equal_func_end
str_equal_funcret: dq 0
str_equal_funca: dq 0
str_equal_funcb: dq 0
str_equal_funcl: dq 0
str_equal_funcr: dq 0
str_equal_funcres: dq 0
str_equal_func:
pop qword [str_equal_funcret]
pop qword [str_equal_funca]
pop qword [str_equal_funcb]
pop qword [str_equal_funcl]
pop qword [str_equal_funcr]
push qword [str_equal_funcret]
push qword [str_equal_funca]
push qword [str_equal_funcb]
push qword [str_equal_funcl]
push qword [str_equal_funcr]
jmp f273_end
str_equal_funcf273: dq 0
f273_end:
push qword [str_equal_funcr]
pop qword [str_equal_funcf273]
push qword [str_equal_funcf273]
jmp f373_end
str_equal_funcf373: dq 0
f373_end:
push qword [str_equal_funcl]
pop qword [str_equal_funcf373]
push qword [str_equal_funcf373]
jmp f473_end
str_equal_funcf473: dq 0
f473_end:
push qword [str_equal_funcb]
pop qword [str_equal_funcf473]
push qword [str_equal_funcf473]
jmp f573_end
str_equal_funcf573: dq 0
f573_end:
push qword [str_equal_funca]
pop qword [str_equal_funcf573]
push qword [str_equal_funcf573]
call str_cmp_func
push rax
pop qword [str_equal_funcres]
pop qword [str_equal_funcr]
pop qword [str_equal_funcl]
pop qword [str_equal_funcb]
pop qword [str_equal_funca]
pop qword [str_equal_funcret]
jmp f673_end
str_equal_funcf673: dq 0
f673_end:
jmp f773_end
str_equal_funcf773: dq 0
f773_end:
push qword [str_equal_funcres]
pop qword [str_equal_funcf773]
push qword [str_equal_funcf773]
jmp f004_end
str_equal_funcf004: dq 0
f004_end:
push 0
pop qword [str_equal_funcf004]
push qword [str_equal_funcf004]
call eq
push rax
pop qword [str_equal_funcf673]
push qword [str_equal_funcf673]
jmp f104_end
str_equal_funcf104: dq 0
f104_end:
push qword [str_equal_funcret]
pop qword [str_equal_funcf104]
push qword [str_equal_funcf104]
jmp return
str_equal_func_end:
jmp print_range_end
print_rangeret: dq 0
print_rangea: dq 0
print_rangeb: dq 0
print_rangef304: dq 0
print_rangef314: dq 0
print_range:
pop qword [print_rangeret]
pop qword [print_rangea]
pop qword [print_rangeb]
jmp f424_end
print_rangef424: dq 0
f424_end:
jmp f704_end
f704ret: dq 0
f704a: dq 0
f704b: dq 0
f704break: dq 0
f704:
pop qword [f704ret]
pop qword [f704a]
pop qword [f704b]
pop qword [f704break]
jmp f524_end
f704f524: dq 0
f524_end:
push 0
pop qword [f704f524]
push qword [f704f524]
jmp f624_end
f704f624: dq 0
f624_end:
push qword [f704ret]
pop qword [f704f624]
push qword [f704f624]
jmp return
f704_end:
mov rdi, 40
call malloc
mov qword [rax+8], f704
mov rcx, [print_rangeret]
mov qword [rax+16], rcx
mov rcx, [print_rangea]
mov qword [rax+24], rcx
mov rcx, [print_rangeb]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [print_rangef424]
push qword [print_rangef424]
jmp f724_end
print_rangef724: dq 0
f724_end:
jmp f034_end
print_rangef034: dq 0
f034_end:
push qword [print_rangeb]
pop qword [print_rangef034]
push qword [print_rangef034]
jmp f134_end
print_rangef134: dq 0
f134_end:
push qword [print_rangea]
pop qword [print_rangef134]
push qword [print_rangef134]
call eq
push rax
pop qword [print_rangef724]
push qword [print_rangef724]
call if
push rax
pop qword [print_rangef304]
jmp f234_end
print_rangef234: dq 0
f234_end:
jmp f334_end
print_rangef334: dq 0
f334_end:
push qword [print_rangea]
pop qword [print_rangef334]
push qword [print_rangef334]
call deref_byte
push rax
pop qword [print_rangef234]
push qword [print_rangef234]
call print_char
push rax
pop qword [print_rangef314]
jmp f434_end
print_rangef434: dq 0
f434_end:
push qword [print_rangeb]
pop qword [print_rangef434]
push qword [print_rangef434]
jmp f534_end
print_rangef534: dq 0
f534_end:
jmp f634_end
print_rangef634: dq 0
f634_end:
push 1
pop qword [print_rangef634]
push qword [print_rangef634]
jmp f734_end
print_rangef734: dq 0
f734_end:
push qword [print_rangea]
pop qword [print_rangef734]
push qword [print_rangef734]
call add
push rax
pop qword [print_rangef534]
push qword [print_rangef534]
jmp f044_end
print_rangef044: dq 0
f044_end:
push qword [print_rangeret]
pop qword [print_rangef044]
push qword [print_rangef044]
jmp print_range
print_range_end:
buff_curr: dq 0
print_char:
  mov rax, [buffer]
  mov rdx, [buff_curr]
  mov rcx, [rsp+8]
  mov [rax+rdx], rcx
  add rdx, 1
  mov [buff_curr], rdx
  cmp rdx, 4096
  jne print_char_done
  call flush_buffer
  print_char_done:
  pop rax
  mov [rsp], rax
  ret
flush_buffer:
  mov rdx, [buff_curr]
  mov rsi, [buffer]
  mov rdi, [outf]
  mov rax, 1
  syscall
  mov qword [buff_curr], 0
  ret

jmp print_num_help_end
print_num_helpv: dq 0
print_num_helpcont: dq 0
print_num_helpf244: dq 0
print_num_help:
pop qword [print_num_helpv]
pop qword [print_num_helpcont]
jmp f274_end
print_num_helpf274: dq 0
f274_end:
jmp f644_end
f644v: dq 0
f644cont: dq 0
f644break: dq 0
f644:
pop qword [f644v]
pop qword [f644cont]
pop qword [f644break]
push qword [f644cont]
jmp runtime_call
f644_end:
mov rdi, 32
call malloc
mov qword [rax+8], f644
mov rcx, [print_num_helpv]
mov qword [rax+16], rcx
mov rcx, [print_num_helpcont]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [print_num_helpf274]
push qword [print_num_helpf274]
jmp f374_end
print_num_helpf374: dq 0
f374_end:
jmp f474_end
print_num_helpf474: dq 0
f474_end:
push 0
pop qword [print_num_helpf474]
push qword [print_num_helpf474]
jmp f574_end
print_num_helpf574: dq 0
f574_end:
push qword [print_num_helpv]
pop qword [print_num_helpf574]
push qword [print_num_helpf574]
call eq
push rax
pop qword [print_num_helpf374]
push qword [print_num_helpf374]
call if
push rax
pop qword [print_num_helpf244]
jmp f674_end
print_num_helpf674: dq 0
f674_end:
jmp f554_end
f554v: dq 0
f554cont: dq 0
f554f244: dq 0
f554f654: dq 0
f554:
pop qword [f554v]
pop qword [f554cont]
pop qword [f554f244]
jmp f774_end
f554f774: dq 0
f774_end:
jmp f005_end
f554f005: dq 0
f005_end:
jmp f105_end
f554f105: dq 0
f105_end:
push 10
pop qword [f554f105]
push qword [f554f105]
jmp f205_end
f554f205: dq 0
f205_end:
push qword [f554v]
pop qword [f554f205]
push qword [f554f205]
call mod
push rax
pop qword [f554f005]
push qword [f554f005]
jmp f305_end
f554f305: dq 0
f305_end:
jmp f405_end
f554f405: dq 0
f405_end:
jmp f505_end
f505: db `0`
db 0
f505_end: push f505
pop qword [f554f405]
push qword [f554f405]
call deref_byte
push rax
pop qword [f554f305]
push qword [f554f305]
call add
push rax
pop qword [f554f774]
push qword [f554f774]
call print_char
push rax
pop qword [f554f654]
push qword [f554cont]
jmp runtime_call
f554_end:
mov rdi, 40
call malloc
mov qword [rax+8], f554
mov rcx, [print_num_helpv]
mov qword [rax+16], rcx
mov rcx, [print_num_helpcont]
mov qword [rax+24], rcx
mov rcx, [print_num_helpf244]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [print_num_helpf674]
push qword [print_num_helpf674]
jmp f605_end
print_num_helpf605: dq 0
f605_end:
jmp f705_end
print_num_helpf705: dq 0
f705_end:
push 10
pop qword [print_num_helpf705]
push qword [print_num_helpf705]
jmp f015_end
print_num_helpf015: dq 0
f015_end:
push qword [print_num_helpv]
pop qword [print_num_helpf015]
push qword [print_num_helpf015]
call div
push rax
pop qword [print_num_helpf605]
push qword [print_num_helpf605]
jmp print_num_help
print_num_help_end:
jmp print_num_end
print_numret: dq 0
print_numv: dq 0
print_num:
pop qword [print_numret]
pop qword [print_numv]
jmp f225_end
print_numf225: dq 0
f225_end:
jmp f615_end
f615ret: dq 0
f615v: dq 0
f615:
pop qword [f615ret]
pop qword [f615v]
jmp f325_end
f615f325: dq 0
f325_end:
push 0
pop qword [f615f325]
push qword [f615f325]
jmp f425_end
f615f425: dq 0
f425_end:
push qword [f615ret]
pop qword [f615f425]
push qword [f615f425]
jmp return
f615_end:
mov rdi, 32
call malloc
mov qword [rax+8], f615
mov rcx, [print_numret]
mov qword [rax+16], rcx
mov rcx, [print_numv]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [print_numf225]
push qword [print_numf225]
jmp f525_end
print_numf525: dq 0
f525_end:
push qword [print_numv]
pop qword [print_numf525]
push qword [print_numf525]
jmp print_num_help
print_num_end:
jmp printf_end
printfret: dq 0
printfl: dq 0
printflb: dq 0
printff725: dq 0
printff735: dq 0
printff455: dq 0
printf:
pop qword [printfret]
pop qword [printfl]
push qword [printfret]
push qword [printfl]
jmp f365_end
printff365: dq 0
f365_end:
push qword [printfl]
pop qword [printff365]
push qword [printff365]
call deref_byte
push rax
pop qword [printflb]
pop qword [printfl]
pop qword [printfret]
jmp f465_end
printff465: dq 0
f465_end:
jmp f335_end
f335ret: dq 0
f335l: dq 0
f335lb: dq 0
f335break: dq 0
f335:
pop qword [f335ret]
pop qword [f335l]
pop qword [f335lb]
pop qword [f335break]
jmp f565_end
f335f565: dq 0
f565_end:
push 0
pop qword [f335f565]
push qword [f335f565]
jmp f665_end
f335f665: dq 0
f665_end:
push qword [f335ret]
pop qword [f335f665]
push qword [f335f665]
jmp return
f335_end:
mov rdi, 40
call malloc
mov qword [rax+8], f335
mov rcx, [printfret]
mov qword [rax+16], rcx
mov rcx, [printfl]
mov qword [rax+24], rcx
mov rcx, [printflb]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [printff465]
push qword [printff465]
jmp f765_end
printff765: dq 0
f765_end:
jmp f075_end
printff075: dq 0
f075_end:
push 0
pop qword [printff075]
push qword [printff075]
jmp f175_end
printff175: dq 0
f175_end:
push qword [printflb]
pop qword [printff175]
push qword [printff175]
call eq
push rax
pop qword [printff765]
push qword [printff765]
call if
push rax
pop qword [printff725]
jmp f275_end
printff275: dq 0
f275_end:
jmp f345_end
f345ret: dq 0
f345l: dq 0
f345lb: dq 0
f345f725: dq 0
f345break: dq 0
f345a: dq 0
f345b: dq 0
f345f445: dq 0
f345:
pop qword [f345ret]
pop qword [f345l]
pop qword [f345lb]
pop qword [f345f725]
pop qword [f345break]
pop qword [f345a]
pop qword [f345b]
jmp f375_end
f345f375: dq 0
f375_end:
push qword [f345b]
pop qword [f345f375]
push qword [f345f375]
jmp f475_end
f345f475: dq 0
f475_end:
push qword [f345a]
pop qword [f345f475]
push qword [f345f475]
call print_range
push rax
pop qword [f345f445]
jmp f575_end
f345f575: dq 0
f575_end:
jmp f675_end
f345f675: dq 0
f675_end:
push 2
pop qword [f345f675]
push qword [f345f675]
jmp f775_end
f345f775: dq 0
f775_end:
push qword [f345l]
pop qword [f345f775]
push qword [f345f775]
call add
push rax
pop qword [f345f575]
push qword [f345f575]
jmp f006_end
f345f006: dq 0
f006_end:
push qword [f345ret]
pop qword [f345f006]
push qword [f345f006]
jmp printf
f345_end:
mov rdi, 48
call malloc
mov qword [rax+8], f345
mov rcx, [printfret]
mov qword [rax+16], rcx
mov rcx, [printfl]
mov qword [rax+24], rcx
mov rcx, [printflb]
mov qword [rax+32], rcx
mov rcx, [printff725]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [printff275]
push qword [printff275]
jmp f106_end
printff106: dq 0
f106_end:
jmp f206_end
printff206: dq 0
f206_end:
push 123
pop qword [printff206]
push qword [printff206]
jmp f306_end
printff306: dq 0
f306_end:
push qword [printflb]
pop qword [printff306]
push qword [printff306]
call eq
push rax
pop qword [printff106]
push qword [printff106]
call if
push rax
pop qword [printff735]
jmp f406_end
printff406: dq 0
f406_end:
push qword [printfret]
push qword [printfl]
push qword [printflb]
push qword [printff725]
push qword [printff735]
jmp f506_end
printff506: dq 0
f506_end:
push qword [printfl]
pop qword [printff506]
push qword [printff506]
call deref_byte
push rax
pop qword [printff406]
pop qword [printff735]
pop qword [printff725]
pop qword [printflb]
pop qword [printfl]
pop qword [printfret]
push qword [printff406]
call print_char
push rax
pop qword [printff455]
jmp f606_end
printff606: dq 0
f606_end:
jmp f706_end
printff706: dq 0
f706_end:
push 1
pop qword [printff706]
push qword [printff706]
jmp f016_end
printff016: dq 0
f016_end:
push qword [printfl]
pop qword [printff016]
push qword [printff016]
call add
push rax
pop qword [printff606]
push qword [printff606]
jmp f116_end
printff116: dq 0
f116_end:
push qword [printfret]
pop qword [printff116]
push qword [printff116]
jmp printf
printf_end:
jmp tree_size_end
tree_sizeret: dq 0
tree_sizetree: dq 0
tree_size:
pop qword [tree_sizeret]
pop qword [tree_sizetree]
jmp f736_end
tree_sizef736: dq 0
f736_end:
jmp f336_end
f336ret: dq 0
f336tree: dq 0
f336a: dq 0
f336b: dq 0
f336:
pop qword [f336ret]
pop qword [f336tree]
pop qword [f336a]
pop qword [f336b]
push qword [f336ret]
push qword [f336tree]
push qword [f336b]
jmp f046_end
f336f046: dq 0
f046_end:
push qword [f336a]
pop qword [f336f046]
push qword [f336f046]
call tree_size
push rax
pop qword [f336a]
pop qword [f336b]
pop qword [f336tree]
pop qword [f336ret]
push qword [f336ret]
push qword [f336tree]
push qword [f336a]
jmp f146_end
f336f146: dq 0
f146_end:
push qword [f336b]
pop qword [f336f146]
push qword [f336f146]
call tree_size
push rax
pop qword [f336b]
pop qword [f336a]
pop qword [f336tree]
pop qword [f336ret]
jmp f246_end
f336f246: dq 0
f246_end:
push qword [f336ret]
push qword [f336tree]
push qword [f336a]
push qword [f336b]
jmp f346_end
f336f346: dq 0
f346_end:
push qword [f336b]
pop qword [f336f346]
push qword [f336f346]
jmp f446_end
f336f446: dq 0
f446_end:
push qword [f336a]
pop qword [f336f446]
push qword [f336f446]
call add
push rax
pop qword [f336f246]
pop qword [f336b]
pop qword [f336a]
pop qword [f336tree]
pop qword [f336ret]
push qword [f336f246]
jmp f546_end
f336f546: dq 0
f546_end:
push qword [f336ret]
pop qword [f336f546]
push qword [f336f546]
jmp return
f336_end:
mov rdi, 32
call malloc
mov qword [rax+8], f336
mov rcx, [tree_sizeret]
mov qword [rax+16], rcx
mov rcx, [tree_sizetree]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [tree_sizef736]
push qword [tree_sizef736]
jmp f646_end
tree_sizef646: dq 0
f646_end:
jmp f036_end
f036ret: dq 0
f036tree: dq 0
f036l: dq 0
f036r: dq 0
f036:
pop qword [f036ret]
pop qword [f036tree]
pop qword [f036l]
pop qword [f036r]
jmp f746_end
f036f746: dq 0
f746_end:
push 1
pop qword [f036f746]
push qword [f036f746]
jmp f056_end
f036f056: dq 0
f056_end:
push qword [f036ret]
pop qword [f036f056]
push qword [f036f056]
jmp return
f036_end:
mov rdi, 32
call malloc
mov qword [rax+8], f036
mov rcx, [tree_sizeret]
mov qword [rax+16], rcx
mov rcx, [tree_sizetree]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [tree_sizef646]
push qword [tree_sizef646]
jmp f156_end
tree_sizef156: dq 0
f156_end:
jmp f526_end
f526ret: dq 0
f526tree: dq 0
f526:
pop qword [f526ret]
pop qword [f526tree]
jmp f256_end
f526f256: dq 0
f256_end:
push 0
pop qword [f526f256]
push qword [f526f256]
jmp f356_end
f526f356: dq 0
f356_end:
push qword [f526ret]
pop qword [f526f356]
push qword [f526f356]
jmp return
f526_end:
mov rdi, 32
call malloc
mov qword [rax+8], f526
mov rcx, [tree_sizeret]
mov qword [rax+16], rcx
mov rcx, [tree_sizetree]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [tree_sizef156]
push qword [tree_sizef156]
push qword [tree_sizetree]
jmp runtime_call
tree_size_end:
jmp map_tree_end
map_treeret: dq 0
map_treetree: dq 0
map_treeaction: dq 0
map_tree:
pop qword [map_treeret]
pop qword [map_treetree]
pop qword [map_treeaction]
jmp f076_end
map_treef076: dq 0
f076_end:
jmp f466_end
f466ret: dq 0
f466tree: dq 0
f466action: dq 0
f466a: dq 0
f466b: dq 0
f466:
pop qword [f466ret]
pop qword [f466tree]
pop qword [f466action]
pop qword [f466a]
pop qword [f466b]
push qword [f466ret]
push qword [f466tree]
push qword [f466action]
push qword [f466b]
jmp f176_end
f466f176: dq 0
f176_end:
push qword [f466action]
pop qword [f466f176]
push qword [f466f176]
jmp f276_end
f466f276: dq 0
f276_end:
push qword [f466a]
pop qword [f466f276]
push qword [f466f276]
call map_tree
push rax
pop qword [f466a]
pop qword [f466b]
pop qword [f466action]
pop qword [f466tree]
pop qword [f466ret]
push qword [f466ret]
push qword [f466tree]
push qword [f466action]
push qword [f466a]
jmp f376_end
f466f376: dq 0
f376_end:
push qword [f466action]
pop qword [f466f376]
push qword [f466f376]
jmp f476_end
f466f476: dq 0
f476_end:
push qword [f466b]
pop qword [f466f476]
push qword [f466f476]
call map_tree
push rax
pop qword [f466b]
pop qword [f466a]
pop qword [f466action]
pop qword [f466tree]
pop qword [f466ret]
jmp f576_end
f466f576: dq 0
f576_end:
push qword [f466ret]
push qword [f466tree]
push qword [f466action]
push qword [f466a]
push qword [f466b]
jmp f676_end
f466f676: dq 0
f676_end:
push qword [f466b]
pop qword [f466f676]
push qword [f466f676]
jmp f776_end
f466f776: dq 0
f776_end:
push qword [f466a]
pop qword [f466f776]
push qword [f466f776]
call make_internal
push rax
pop qword [f466f576]
pop qword [f466b]
pop qword [f466a]
pop qword [f466action]
pop qword [f466tree]
pop qword [f466ret]
push qword [f466f576]
jmp f007_end
f466f007: dq 0
f007_end:
push qword [f466ret]
pop qword [f466f007]
push qword [f466f007]
jmp return
f466_end:
mov rdi, 40
call malloc
mov qword [rax+8], f466
mov rcx, [map_treeret]
mov qword [rax+16], rcx
mov rcx, [map_treetree]
mov qword [rax+24], rcx
mov rcx, [map_treeaction]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [map_treef076]
push qword [map_treef076]
jmp f107_end
map_treef107: dq 0
f107_end:
jmp f166_end
f166ret: dq 0
f166tree: dq 0
f166action: dq 0
f166l: dq 0
f166r: dq 0
f166:
pop qword [f166ret]
pop qword [f166tree]
pop qword [f166action]
pop qword [f166l]
pop qword [f166r]
jmp f207_end
f166f207: dq 0
f207_end:
push qword [f166ret]
push qword [f166tree]
push qword [f166action]
push qword [f166l]
push qword [f166r]
jmp f307_end
f166f307: dq 0
f307_end:
push qword [f166r]
pop qword [f166f307]
push qword [f166f307]
jmp f407_end
f166f407: dq 0
f407_end:
push qword [f166l]
pop qword [f166f407]
push qword [f166f407]
push qword [f166action]
call runtime_call_ret
push rax
pop qword [f166f207]
pop qword [f166r]
pop qword [f166l]
pop qword [f166action]
pop qword [f166tree]
pop qword [f166ret]
push qword [f166f207]
jmp f507_end
f166f507: dq 0
f507_end:
push qword [f166ret]
pop qword [f166f507]
push qword [f166f507]
jmp return
f166_end:
mov rdi, 40
call malloc
mov qword [rax+8], f166
mov rcx, [map_treeret]
mov qword [rax+16], rcx
mov rcx, [map_treetree]
mov qword [rax+24], rcx
mov rcx, [map_treeaction]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [map_treef107]
push qword [map_treef107]
jmp f607_end
map_treef607: dq 0
f607_end:
jmp f656_end
f656ret: dq 0
f656tree: dq 0
f656action: dq 0
f656:
pop qword [f656ret]
pop qword [f656tree]
pop qword [f656action]
jmp f707_end
f656f707: dq 0
f707_end:
push qword [f656ret]
push qword [f656tree]
push qword [f656action]
call make_nil
push rax
pop qword [f656f707]
pop qword [f656action]
pop qword [f656tree]
pop qword [f656ret]
push qword [f656f707]
jmp f017_end
f656f017: dq 0
f017_end:
push qword [f656ret]
pop qword [f656f017]
push qword [f656f017]
jmp return
f656_end:
mov rdi, 40
call malloc
mov qword [rax+8], f656
mov rcx, [map_treeret]
mov qword [rax+16], rcx
mov rcx, [map_treetree]
mov qword [rax+24], rcx
mov rcx, [map_treeaction]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [map_treef607]
push qword [map_treef607]
push qword [map_treetree]
jmp runtime_call
map_tree_end:
jmp first_leaf_end
first_leafret: dq 0
first_leaftree: dq 0
first_leaf:
pop qword [first_leafret]
pop qword [first_leaftree]
jmp f2001_end
first_leaff2001: dq 0
f2001_end:
jmp f457_end
f457ret: dq 0
f457tree: dq 0
f457a: dq 0
f457b: dq 0
f457a_leaf: dq 0
f457b_leaf: dq 0
f457:
pop qword [f457ret]
pop qword [f457tree]
pop qword [f457a]
pop qword [f457b]
push qword [f457ret]
push qword [f457tree]
push qword [f457a]
push qword [f457b]
jmp f3001_end
f457f3001: dq 0
f3001_end:
push qword [f457a]
pop qword [f457f3001]
push qword [f457f3001]
call first_leaf
push rax
pop qword [f457a_leaf]
pop qword [f457b]
pop qword [f457a]
pop qword [f457tree]
pop qword [f457ret]
push qword [f457ret]
push qword [f457tree]
push qword [f457a]
push qword [f457b]
push qword [f457a_leaf]
jmp f4001_end
f457f4001: dq 0
f4001_end:
push qword [f457b]
pop qword [f457f4001]
push qword [f457f4001]
call first_leaf
push rax
pop qword [f457b_leaf]
pop qword [f457a_leaf]
pop qword [f457b]
pop qword [f457a]
pop qword [f457tree]
pop qword [f457ret]
jmp f5001_end
f457f5001: dq 0
f5001_end:
jmp f577_end
f577ret: dq 0
f577tree: dq 0
f577a_leaf: dq 0
f577b_leaf: dq 0
f577a: dq 0
f577b: dq 0
f577:
pop qword [f577ret]
pop qword [f577tree]
pop qword [f577a_leaf]
pop qword [f577b_leaf]
pop qword [f577a]
pop qword [f577b]
jmp f6001_end
f577f6001: dq 0
f6001_end:
push qword [f577b_leaf]
pop qword [f577f6001]
push qword [f577f6001]
jmp f7001_end
f577f7001: dq 0
f7001_end:
push qword [f577ret]
pop qword [f577f7001]
push qword [f577f7001]
jmp return
f577_end:
mov rdi, 48
call malloc
mov qword [rax+8], f577
mov rcx, [f457ret]
mov qword [rax+16], rcx
mov rcx, [f457tree]
mov qword [rax+24], rcx
mov rcx, [f457a_leaf]
mov qword [rax+32], rcx
mov rcx, [f457b_leaf]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [f457f5001]
push qword [f457f5001]
jmp f0101_end
f457f0101: dq 0
f0101_end:
jmp f277_end
f277ret: dq 0
f277tree: dq 0
f277a: dq 0
f277b: dq 0
f277a_leaf: dq 0
f277b_leaf: dq 0
f277l: dq 0
f277r: dq 0
f277:
pop qword [f277ret]
pop qword [f277tree]
pop qword [f277a]
pop qword [f277b]
pop qword [f277a_leaf]
pop qword [f277b_leaf]
pop qword [f277l]
pop qword [f277r]
jmp f1101_end
f277f1101: dq 0
f1101_end:
push qword [f277a_leaf]
pop qword [f277f1101]
push qword [f277f1101]
jmp f2101_end
f277f2101: dq 0
f2101_end:
push qword [f277ret]
pop qword [f277f2101]
push qword [f277f2101]
jmp return
f277_end:
mov rdi, 64
call malloc
mov qword [rax+8], f277
mov rcx, [f457ret]
mov qword [rax+16], rcx
mov rcx, [f457tree]
mov qword [rax+24], rcx
mov rcx, [f457a]
mov qword [rax+32], rcx
mov rcx, [f457b]
mov qword [rax+40], rcx
mov rcx, [f457a_leaf]
mov qword [rax+48], rcx
mov rcx, [f457b_leaf]
mov qword [rax+56], rcx
mov qword [rax], 7
push rax
pop qword [f457f0101]
push qword [f457f0101]
jmp f3101_end
f457f3101: dq 0
f3101_end:
jmp f767_end
f767ret: dq 0
f767tree: dq 0
f767a: dq 0
f767b: dq 0
f767a_leaf: dq 0
f767b_leaf: dq 0
f767:
pop qword [f767ret]
pop qword [f767tree]
pop qword [f767a]
pop qword [f767b]
pop qword [f767a_leaf]
pop qword [f767b_leaf]
jmp f4101_end
f767f4101: dq 0
f4101_end:
push qword [f767b_leaf]
pop qword [f767f4101]
push qword [f767f4101]
jmp f5101_end
f767f5101: dq 0
f5101_end:
push qword [f767ret]
pop qword [f767f5101]
push qword [f767f5101]
jmp return
f767_end:
mov rdi, 64
call malloc
mov qword [rax+8], f767
mov rcx, [f457ret]
mov qword [rax+16], rcx
mov rcx, [f457tree]
mov qword [rax+24], rcx
mov rcx, [f457a]
mov qword [rax+32], rcx
mov rcx, [f457b]
mov qword [rax+40], rcx
mov rcx, [f457a_leaf]
mov qword [rax+48], rcx
mov rcx, [f457b_leaf]
mov qword [rax+56], rcx
mov qword [rax], 7
push rax
pop qword [f457f3101]
push qword [f457f3101]
push qword [f457a_leaf]
jmp runtime_call
f457_end:
mov rdi, 32
call malloc
mov qword [rax+8], f457
mov rcx, [first_leafret]
mov qword [rax+16], rcx
mov rcx, [first_leaftree]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [first_leaff2001]
push qword [first_leaff2001]
jmp f6101_end
first_leaff6101: dq 0
f6101_end:
jmp f157_end
f157ret: dq 0
f157tree: dq 0
f157l: dq 0
f157r: dq 0
f157:
pop qword [f157ret]
pop qword [f157tree]
pop qword [f157l]
pop qword [f157r]
jmp f7101_end
f157f7101: dq 0
f7101_end:
push qword [f157ret]
push qword [f157tree]
push qword [f157l]
push qword [f157r]
jmp f0201_end
f157f0201: dq 0
f0201_end:
push qword [f157r]
pop qword [f157f0201]
push qword [f157f0201]
jmp f1201_end
f157f1201: dq 0
f1201_end:
push qword [f157l]
pop qword [f157f1201]
push qword [f157f1201]
call make_leaf
push rax
pop qword [f157f7101]
pop qword [f157r]
pop qword [f157l]
pop qword [f157tree]
pop qword [f157ret]
push qword [f157f7101]
jmp f2201_end
f157f2201: dq 0
f2201_end:
push qword [f157ret]
pop qword [f157f2201]
push qword [f157f2201]
jmp return
f157_end:
mov rdi, 32
call malloc
mov qword [rax+8], f157
mov rcx, [first_leafret]
mov qword [rax+16], rcx
mov rcx, [first_leaftree]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [first_leaff6101]
push qword [first_leaff6101]
jmp f3201_end
first_leaff3201: dq 0
f3201_end:
jmp f647_end
f647ret: dq 0
f647tree: dq 0
f647:
pop qword [f647ret]
pop qword [f647tree]
jmp f4201_end
f647f4201: dq 0
f4201_end:
push qword [f647ret]
push qword [f647tree]
call make_nil
push rax
pop qword [f647f4201]
pop qword [f647tree]
pop qword [f647ret]
push qword [f647f4201]
jmp f5201_end
f647f5201: dq 0
f5201_end:
push qword [f647ret]
pop qword [f647f5201]
push qword [f647f5201]
jmp return
f647_end:
mov rdi, 32
call malloc
mov qword [rax+8], f647
mov rcx, [first_leafret]
mov qword [rax+16], rcx
mov rcx, [first_leaftree]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [first_leaff3201]
push qword [first_leaff3201]
push qword [first_leaftree]
jmp runtime_call
first_leaf_end:
jmp map_tree_iota_help_end
map_tree_iota_helpret: dq 0
map_tree_iota_helpn: dq 0
map_tree_iota_helptree: dq 0
map_tree_iota_helpaction: dq 0
map_tree_iota_help:
pop qword [map_tree_iota_helpret]
pop qword [map_tree_iota_helpn]
pop qword [map_tree_iota_helptree]
pop qword [map_tree_iota_helpaction]
jmp f2401_end
map_tree_iota_helpf2401: dq 0
f2401_end:
jmp f6301_end
f6301ret: dq 0
f6301n: dq 0
f6301tree: dq 0
f6301action: dq 0
f6301a: dq 0
f6301b: dq 0
f6301new_a: dq 0
f6301new_b: dq 0
f6301res: dq 0
f6301:
pop qword [f6301ret]
pop qword [f6301n]
pop qword [f6301tree]
pop qword [f6301action]
pop qword [f6301a]
pop qword [f6301b]
push qword [f6301ret]
push qword [f6301tree]
push qword [f6301action]
push qword [f6301a]
push qword [f6301b]
jmp f3401_end
f6301f3401: dq 0
f3401_end:
push qword [f6301action]
pop qword [f6301f3401]
push qword [f6301f3401]
jmp f4401_end
f6301f4401: dq 0
f4401_end:
push qword [f6301a]
pop qword [f6301f4401]
push qword [f6301f4401]
jmp f5401_end
f6301f5401: dq 0
f5401_end:
push qword [f6301n]
pop qword [f6301f5401]
push qword [f6301f5401]
call map_tree_iota_help
push rax
pop qword [f6301n]
pop qword [f6301new_a]
pop qword [f6301b]
pop qword [f6301a]
pop qword [f6301action]
pop qword [f6301tree]
pop qword [f6301ret]
push qword [f6301ret]
push qword [f6301tree]
push qword [f6301action]
push qword [f6301a]
push qword [f6301b]
push qword [f6301new_a]
jmp f6401_end
f6301f6401: dq 0
f6401_end:
push qword [f6301action]
pop qword [f6301f6401]
push qword [f6301f6401]
jmp f7401_end
f6301f7401: dq 0
f7401_end:
push qword [f6301b]
pop qword [f6301f7401]
push qword [f6301f7401]
jmp f0501_end
f6301f0501: dq 0
f0501_end:
push qword [f6301n]
pop qword [f6301f0501]
push qword [f6301f0501]
call map_tree_iota_help
push rax
pop qword [f6301n]
pop qword [f6301new_b]
pop qword [f6301new_a]
pop qword [f6301b]
pop qword [f6301a]
pop qword [f6301action]
pop qword [f6301tree]
pop qword [f6301ret]
push qword [f6301ret]
push qword [f6301tree]
push qword [f6301action]
push qword [f6301a]
push qword [f6301b]
push qword [f6301new_a]
push qword [f6301n]
push qword [f6301new_b]
jmp f1501_end
f6301f1501: dq 0
f1501_end:
push qword [f6301new_b]
pop qword [f6301f1501]
push qword [f6301f1501]
jmp f2501_end
f6301f2501: dq 0
f2501_end:
push qword [f6301new_a]
pop qword [f6301f2501]
push qword [f6301f2501]
call make_internal
push rax
pop qword [f6301res]
pop qword [f6301new_b]
pop qword [f6301n]
pop qword [f6301new_a]
pop qword [f6301b]
pop qword [f6301a]
pop qword [f6301action]
pop qword [f6301tree]
pop qword [f6301ret]
jmp f3501_end
f6301f3501: dq 0
f3501_end:
push qword [f6301res]
pop qword [f6301f3501]
push qword [f6301f3501]
jmp f4501_end
f6301f4501: dq 0
f4501_end:
push qword [f6301n]
pop qword [f6301f4501]
push qword [f6301f4501]
jmp f5501_end
f6301f5501: dq 0
f5501_end:
push qword [f6301ret]
pop qword [f6301f5501]
push qword [f6301f5501]
jmp return
f6301_end:
mov rdi, 48
call malloc
mov qword [rax+8], f6301
mov rcx, [map_tree_iota_helpret]
mov qword [rax+16], rcx
mov rcx, [map_tree_iota_helpn]
mov qword [rax+24], rcx
mov rcx, [map_tree_iota_helptree]
mov qword [rax+32], rcx
mov rcx, [map_tree_iota_helpaction]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [map_tree_iota_helpf2401]
push qword [map_tree_iota_helpf2401]
jmp f6501_end
map_tree_iota_helpf6501: dq 0
f6501_end:
jmp f3301_end
f3301ret: dq 0
f3301n: dq 0
f3301tree: dq 0
f3301action: dq 0
f3301l: dq 0
f3301r: dq 0
f3301:
pop qword [f3301ret]
pop qword [f3301n]
pop qword [f3301tree]
pop qword [f3301action]
pop qword [f3301l]
pop qword [f3301r]
jmp f7501_end
f3301f7501: dq 0
f7501_end:
push qword [f3301ret]
push qword [f3301n]
push qword [f3301tree]
push qword [f3301action]
push qword [f3301l]
push qword [f3301r]
jmp f0601_end
f3301f0601: dq 0
f0601_end:
push qword [f3301r]
pop qword [f3301f0601]
push qword [f3301f0601]
jmp f1601_end
f3301f1601: dq 0
f1601_end:
push qword [f3301l]
pop qword [f3301f1601]
push qword [f3301f1601]
jmp f2601_end
f3301f2601: dq 0
f2601_end:
push qword [f3301n]
pop qword [f3301f2601]
push qword [f3301f2601]
push qword [f3301action]
call runtime_call_ret
push rax
pop qword [f3301f7501]
pop qword [f3301r]
pop qword [f3301l]
pop qword [f3301action]
pop qword [f3301tree]
pop qword [f3301n]
pop qword [f3301ret]
push qword [f3301f7501]
jmp f3601_end
f3301f3601: dq 0
f3601_end:
push qword [f3301ret]
push qword [f3301n]
push qword [f3301tree]
push qword [f3301action]
push qword [f3301l]
push qword [f3301r]
jmp f4601_end
f3301f4601: dq 0
f4601_end:
push 1
pop qword [f3301f4601]
push qword [f3301f4601]
jmp f5601_end
f3301f5601: dq 0
f5601_end:
push qword [f3301n]
pop qword [f3301f5601]
push qword [f3301f5601]
call add
push rax
pop qword [f3301f3601]
pop qword [f3301r]
pop qword [f3301l]
pop qword [f3301action]
pop qword [f3301tree]
pop qword [f3301n]
pop qword [f3301ret]
push qword [f3301f3601]
jmp f6601_end
f3301f6601: dq 0
f6601_end:
push qword [f3301ret]
pop qword [f3301f6601]
push qword [f3301f6601]
jmp return
f3301_end:
mov rdi, 48
call malloc
mov qword [rax+8], f3301
mov rcx, [map_tree_iota_helpret]
mov qword [rax+16], rcx
mov rcx, [map_tree_iota_helpn]
mov qword [rax+24], rcx
mov rcx, [map_tree_iota_helptree]
mov qword [rax+32], rcx
mov rcx, [map_tree_iota_helpaction]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [map_tree_iota_helpf6501]
push qword [map_tree_iota_helpf6501]
jmp f7601_end
map_tree_iota_helpf7601: dq 0
f7601_end:
jmp f0301_end
f0301ret: dq 0
f0301n: dq 0
f0301tree: dq 0
f0301action: dq 0
f0301:
pop qword [f0301ret]
pop qword [f0301n]
pop qword [f0301tree]
pop qword [f0301action]
jmp f0701_end
f0301f0701: dq 0
f0701_end:
push qword [f0301ret]
push qword [f0301n]
push qword [f0301tree]
push qword [f0301action]
call make_nil
push rax
pop qword [f0301f0701]
pop qword [f0301action]
pop qword [f0301tree]
pop qword [f0301n]
pop qword [f0301ret]
push qword [f0301f0701]
jmp f1701_end
f0301f1701: dq 0
f1701_end:
push qword [f0301n]
pop qword [f0301f1701]
push qword [f0301f1701]
jmp f2701_end
f0301f2701: dq 0
f2701_end:
push qword [f0301ret]
pop qword [f0301f2701]
push qword [f0301f2701]
jmp return
f0301_end:
mov rdi, 48
call malloc
mov qword [rax+8], f0301
mov rcx, [map_tree_iota_helpret]
mov qword [rax+16], rcx
mov rcx, [map_tree_iota_helpn]
mov qword [rax+24], rcx
mov rcx, [map_tree_iota_helptree]
mov qword [rax+32], rcx
mov rcx, [map_tree_iota_helpaction]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [map_tree_iota_helpf7601]
push qword [map_tree_iota_helpf7601]
push qword [map_tree_iota_helptree]
jmp runtime_call
map_tree_iota_help_end:
jmp map_tree_iota_end
map_tree_iotaret: dq 0
map_tree_iotatree: dq 0
map_tree_iotaaction: dq 0
map_tree_iotan: dq 0
map_tree_iotat: dq 0
map_tree_iota:
pop qword [map_tree_iotaret]
pop qword [map_tree_iotatree]
pop qword [map_tree_iotaaction]
push qword [map_tree_iotaret]
push qword [map_tree_iotatree]
push qword [map_tree_iotaaction]
jmp f6701_end
map_tree_iotaf6701: dq 0
f6701_end:
push qword [map_tree_iotaaction]
pop qword [map_tree_iotaf6701]
push qword [map_tree_iotaf6701]
jmp f7701_end
map_tree_iotaf7701: dq 0
f7701_end:
push qword [map_tree_iotatree]
pop qword [map_tree_iotaf7701]
push qword [map_tree_iotaf7701]
jmp f0011_end
map_tree_iotaf0011: dq 0
f0011_end:
push 0
pop qword [map_tree_iotaf0011]
push qword [map_tree_iotaf0011]
call map_tree_iota_help
push rax
pop qword [map_tree_iotan]
pop qword [map_tree_iotat]
pop qword [map_tree_iotaaction]
pop qword [map_tree_iotatree]
pop qword [map_tree_iotaret]
jmp f1011_end
map_tree_iotaf1011: dq 0
f1011_end:
push qword [map_tree_iotat]
pop qword [map_tree_iotaf1011]
push qword [map_tree_iotaf1011]
jmp f2011_end
map_tree_iotaf2011: dq 0
f2011_end:
push qword [map_tree_iotaret]
pop qword [map_tree_iotaf2011]
push qword [map_tree_iotaf2011]
jmp return
map_tree_iota_end:
jmp reverse_tree_end
reverse_treeret: dq 0
reverse_treetree: dq 0
reverse_tree:
pop qword [reverse_treeret]
pop qword [reverse_treetree]
jmp f0311_end
reverse_treef0311: dq 0
f0311_end:
jmp f4211_end
f4211ret: dq 0
f4211tree: dq 0
f4211a: dq 0
f4211b: dq 0
f4211:
pop qword [f4211ret]
pop qword [f4211tree]
pop qword [f4211a]
pop qword [f4211b]
jmp f1311_end
f4211f1311: dq 0
f1311_end:
push qword [f4211ret]
push qword [f4211tree]
push qword [f4211a]
push qword [f4211b]
jmp f2311_end
f4211f2311: dq 0
f2311_end:
push qword [f4211ret]
push qword [f4211tree]
push qword [f4211a]
push qword [f4211b]
jmp f3311_end
f4211f3311: dq 0
f3311_end:
push qword [f4211a]
pop qword [f4211f3311]
push qword [f4211f3311]
call reverse_tree
push rax
pop qword [f4211f2311]
pop qword [f4211b]
pop qword [f4211a]
pop qword [f4211tree]
pop qword [f4211ret]
push qword [f4211f2311]
jmp f4311_end
f4211f4311: dq 0
f4311_end:
push qword [f4211ret]
push qword [f4211tree]
push qword [f4211a]
push qword [f4211b]
jmp f5311_end
f4211f5311: dq 0
f5311_end:
push qword [f4211b]
pop qword [f4211f5311]
push qword [f4211f5311]
call reverse_tree
push rax
pop qword [f4211f4311]
pop qword [f4211b]
pop qword [f4211a]
pop qword [f4211tree]
pop qword [f4211ret]
push qword [f4211f4311]
call make_internal
push rax
pop qword [f4211f1311]
pop qword [f4211b]
pop qword [f4211a]
pop qword [f4211tree]
pop qword [f4211ret]
push qword [f4211f1311]
jmp f6311_end
f4211f6311: dq 0
f6311_end:
push qword [f4211ret]
pop qword [f4211f6311]
push qword [f4211f6311]
jmp return
f4211_end:
mov rdi, 32
call malloc
mov qword [rax+8], f4211
mov rcx, [reverse_treeret]
mov qword [rax+16], rcx
mov rcx, [reverse_treetree]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [reverse_treef0311]
push qword [reverse_treef0311]
jmp f7311_end
reverse_treef7311: dq 0
f7311_end:
jmp f1211_end
f1211ret: dq 0
f1211tree: dq 0
f1211l: dq 0
f1211r: dq 0
f1211:
pop qword [f1211ret]
pop qword [f1211tree]
pop qword [f1211l]
pop qword [f1211r]
jmp f0411_end
f1211f0411: dq 0
f0411_end:
push qword [f1211ret]
push qword [f1211tree]
push qword [f1211l]
push qword [f1211r]
jmp f1411_end
f1211f1411: dq 0
f1411_end:
push qword [f1211r]
pop qword [f1211f1411]
push qword [f1211f1411]
jmp f2411_end
f1211f2411: dq 0
f2411_end:
push qword [f1211l]
pop qword [f1211f2411]
push qword [f1211f2411]
call make_leaf
push rax
pop qword [f1211f0411]
pop qword [f1211r]
pop qword [f1211l]
pop qword [f1211tree]
pop qword [f1211ret]
push qword [f1211f0411]
jmp f3411_end
f1211f3411: dq 0
f3411_end:
push qword [f1211ret]
pop qword [f1211f3411]
push qword [f1211f3411]
jmp return
f1211_end:
mov rdi, 32
call malloc
mov qword [rax+8], f1211
mov rcx, [reverse_treeret]
mov qword [rax+16], rcx
mov rcx, [reverse_treetree]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [reverse_treef7311]
push qword [reverse_treef7311]
jmp f4411_end
reverse_treef4411: dq 0
f4411_end:
jmp f6111_end
f6111ret: dq 0
f6111tree: dq 0
f6111:
pop qword [f6111ret]
pop qword [f6111tree]
jmp f5411_end
f6111f5411: dq 0
f5411_end:
push qword [f6111ret]
push qword [f6111tree]
call make_nil
push rax
pop qword [f6111f5411]
pop qword [f6111tree]
pop qword [f6111ret]
push qword [f6111f5411]
jmp f6411_end
f6111f6411: dq 0
f6411_end:
push qword [f6111ret]
pop qword [f6111f6411]
push qword [f6111f6411]
jmp return
f6111_end:
mov rdi, 32
call malloc
mov qword [rax+8], f6111
mov rcx, [reverse_treeret]
mov qword [rax+16], rcx
mov rcx, [reverse_treetree]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [reverse_treef4411]
push qword [reverse_treef4411]
push qword [reverse_treetree]
jmp runtime_call
reverse_tree_end:
jmp search_tree_end
search_treeret: dq 0
search_treetree: dq 0
search_treel: dq 0
search_treer: dq 0
search_tree:
pop qword [search_treeret]
pop qword [search_treetree]
pop qword [search_treel]
pop qword [search_treer]
jmp f6121_end
search_treef6121: dq 0
f6121_end:
jmp f4021_end
f4021ret: dq 0
f4021tree: dq 0
f4021l: dq 0
f4021r: dq 0
f4021a: dq 0
f4021b: dq 0
f4021search_a: dq 0
f4021f5021: dq 0
f4021search_b: dq 0
f4021:
pop qword [f4021ret]
pop qword [f4021tree]
pop qword [f4021l]
pop qword [f4021r]
pop qword [f4021a]
pop qword [f4021b]
push qword [f4021ret]
push qword [f4021tree]
push qword [f4021l]
push qword [f4021r]
push qword [f4021a]
push qword [f4021b]
jmp f7121_end
f4021f7121: dq 0
f7121_end:
push qword [f4021r]
pop qword [f4021f7121]
push qword [f4021f7121]
jmp f0221_end
f4021f0221: dq 0
f0221_end:
push qword [f4021l]
pop qword [f4021f0221]
push qword [f4021f0221]
jmp f1221_end
f4021f1221: dq 0
f1221_end:
push qword [f4021a]
pop qword [f4021f1221]
push qword [f4021f1221]
call search_tree
push rax
pop qword [f4021search_a]
pop qword [f4021b]
pop qword [f4021a]
pop qword [f4021r]
pop qword [f4021l]
pop qword [f4021tree]
pop qword [f4021ret]
jmp f2221_end
f4021f2221: dq 0
f2221_end:
jmp f7021_end
f7021ret: dq 0
f7021tree: dq 0
f7021l: dq 0
f7021r: dq 0
f7021a: dq 0
f7021b: dq 0
f7021search_a: dq 0
f7021break: dq 0
f7021:
pop qword [f7021ret]
pop qword [f7021tree]
pop qword [f7021l]
pop qword [f7021r]
pop qword [f7021a]
pop qword [f7021b]
pop qword [f7021search_a]
pop qword [f7021break]
jmp f3221_end
f7021f3221: dq 0
f3221_end:
push qword [f7021search_a]
pop qword [f7021f3221]
push qword [f7021f3221]
jmp f4221_end
f7021f4221: dq 0
f4221_end:
push qword [f7021ret]
pop qword [f7021f4221]
push qword [f7021f4221]
jmp return
f7021_end:
mov rdi, 72
call malloc
mov qword [rax+8], f7021
mov rcx, [f4021ret]
mov qword [rax+16], rcx
mov rcx, [f4021tree]
mov qword [rax+24], rcx
mov rcx, [f4021l]
mov qword [rax+32], rcx
mov rcx, [f4021r]
mov qword [rax+40], rcx
mov rcx, [f4021a]
mov qword [rax+48], rcx
mov rcx, [f4021b]
mov qword [rax+56], rcx
mov rcx, [f4021search_a]
mov qword [rax+64], rcx
mov qword [rax], 8
push rax
pop qword [f4021f2221]
push qword [f4021f2221]
jmp f5221_end
f4021f5221: dq 0
f5221_end:
push qword [f4021search_a]
pop qword [f4021f5221]
push qword [f4021f5221]
call if
push rax
pop qword [f4021f5021]
push qword [f4021ret]
push qword [f4021tree]
push qword [f4021l]
push qword [f4021r]
push qword [f4021a]
push qword [f4021b]
push qword [f4021search_a]
push qword [f4021f5021]
jmp f6221_end
f4021f6221: dq 0
f6221_end:
push qword [f4021r]
pop qword [f4021f6221]
push qword [f4021f6221]
jmp f7221_end
f4021f7221: dq 0
f7221_end:
push qword [f4021l]
pop qword [f4021f7221]
push qword [f4021f7221]
jmp f0321_end
f4021f0321: dq 0
f0321_end:
push qword [f4021b]
pop qword [f4021f0321]
push qword [f4021f0321]
call search_tree
push rax
pop qword [f4021search_b]
pop qword [f4021f5021]
pop qword [f4021search_a]
pop qword [f4021b]
pop qword [f4021a]
pop qword [f4021r]
pop qword [f4021l]
pop qword [f4021tree]
pop qword [f4021ret]
jmp f1321_end
f4021f1321: dq 0
f1321_end:
push qword [f4021search_b]
pop qword [f4021f1321]
push qword [f4021f1321]
jmp f2321_end
f4021f2321: dq 0
f2321_end:
push qword [f4021ret]
pop qword [f4021f2321]
push qword [f4021f2321]
jmp return
f4021_end:
mov rdi, 48
call malloc
mov qword [rax+8], f4021
mov rcx, [search_treeret]
mov qword [rax+16], rcx
mov rcx, [search_treetree]
mov qword [rax+24], rcx
mov rcx, [search_treel]
mov qword [rax+32], rcx
mov rcx, [search_treer]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [search_treef6121]
push qword [search_treef6121]
jmp f3321_end
search_treef3321: dq 0
f3321_end:
jmp f1021_end
f1021ret: dq 0
f1021tree: dq 0
f1021l: dq 0
f1021r: dq 0
f1021a: dq 0
f1021b: dq 0
f1021res: dq 0
f1021:
pop qword [f1021ret]
pop qword [f1021tree]
pop qword [f1021l]
pop qword [f1021r]
pop qword [f1021a]
pop qword [f1021b]
push qword [f1021ret]
push qword [f1021tree]
push qword [f1021l]
push qword [f1021r]
push qword [f1021a]
push qword [f1021b]
jmp f4321_end
f1021f4321: dq 0
f4321_end:
push qword [f1021b]
pop qword [f1021f4321]
push qword [f1021f4321]
jmp f5321_end
f1021f5321: dq 0
f5321_end:
push qword [f1021a]
pop qword [f1021f5321]
push qword [f1021f5321]
jmp f6321_end
f1021f6321: dq 0
f6321_end:
push qword [f1021r]
pop qword [f1021f6321]
push qword [f1021f6321]
jmp f7321_end
f1021f7321: dq 0
f7321_end:
push qword [f1021l]
pop qword [f1021f7321]
push qword [f1021f7321]
call str_equal_func
push rax
pop qword [f1021res]
pop qword [f1021b]
pop qword [f1021a]
pop qword [f1021r]
pop qword [f1021l]
pop qword [f1021tree]
pop qword [f1021ret]
jmp f0421_end
f1021f0421: dq 0
f0421_end:
push qword [f1021res]
pop qword [f1021f0421]
push qword [f1021f0421]
jmp f1421_end
f1021f1421: dq 0
f1421_end:
push qword [f1021ret]
pop qword [f1021f1421]
push qword [f1021f1421]
jmp return
f1021_end:
mov rdi, 48
call malloc
mov qword [rax+8], f1021
mov rcx, [search_treeret]
mov qword [rax+16], rcx
mov rcx, [search_treetree]
mov qword [rax+24], rcx
mov rcx, [search_treel]
mov qword [rax+32], rcx
mov rcx, [search_treer]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [search_treef3321]
push qword [search_treef3321]
jmp f2421_end
search_treef2421: dq 0
f2421_end:
jmp f3711_end
f3711ret: dq 0
f3711tree: dq 0
f3711l: dq 0
f3711r: dq 0
f3711:
pop qword [f3711ret]
pop qword [f3711tree]
pop qword [f3711l]
pop qword [f3711r]
jmp f3421_end
f3711f3421: dq 0
f3421_end:
jmp f5711_end
f5711ret: dq 0
f5711tree: dq 0
f5711l: dq 0
f5711r: dq 0
f5711a: dq 0
f5711b: dq 0
f5711:
pop qword [f5711ret]
pop qword [f5711tree]
pop qword [f5711l]
pop qword [f5711r]
pop qword [f5711a]
pop qword [f5711b]
push qword [f5711b]
jmp runtime_call
f5711_end:
mov rdi, 48
call malloc
mov qword [rax+8], f5711
mov rcx, [f3711ret]
mov qword [rax+16], rcx
mov rcx, [f3711tree]
mov qword [rax+24], rcx
mov rcx, [f3711l]
mov qword [rax+32], rcx
mov rcx, [f3711r]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [f3711f3421]
push qword [f3711f3421]
jmp f4421_end
f3711f4421: dq 0
f4421_end:
push qword [f3711ret]
pop qword [f3711f4421]
push qword [f3711f4421]
jmp return
f3711_end:
mov rdi, 48
call malloc
mov qword [rax+8], f3711
mov rcx, [search_treeret]
mov qword [rax+16], rcx
mov rcx, [search_treetree]
mov qword [rax+24], rcx
mov rcx, [search_treel]
mov qword [rax+32], rcx
mov rcx, [search_treer]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [search_treef2421]
push qword [search_treef2421]
push qword [search_treetree]
jmp runtime_call
search_tree_end:
is_alpha:           
  pop rax
  pop rdi
  push rax
  cmp rdi, "a"      
  jl nalp
  cmp rdi, "z"     
  jg nalp
  yalp:
  mov rax, 1
  ret
  nalp:
  mov rax, 0
  ret

start:  

jmp is_alpha_bool_end
is_alpha_booldig: dq 0
is_alpha_boolf7421: dq 0
is_alpha_bool:
pop rax
pop qword [is_alpha_booldig]
push rax
mov [is_alpha_boolf7421], rsp
mov rsp, [is_alpha_boolf7421]
jmp f0521_end
is_alpha_boolf0521: dq 0
f0521_end:
push qword [is_alpha_booldig]
push qword [is_alpha_boolf7421]
jmp f1521_end
is_alpha_boolf1521: dq 0
f1521_end:
push 1
pop qword [is_alpha_boolf1521]
push qword [is_alpha_boolf1521]
jmp f2521_end
is_alpha_boolf2521: dq 0
f2521_end:
push qword [is_alpha_booldig]
push qword [is_alpha_boolf7421]
jmp f3521_end
is_alpha_boolf3521: dq 0
f3521_end:
push qword [is_alpha_booldig]
pop qword [is_alpha_boolf3521]
push qword [is_alpha_boolf3521]
call is_alpha
push rax
pop qword [is_alpha_boolf2521]
pop qword [is_alpha_boolf7421]
pop qword [is_alpha_booldig]
push qword [is_alpha_boolf2521]
call eq
push rax
pop qword [is_alpha_boolf0521]
pop qword [is_alpha_boolf7421]
pop qword [is_alpha_booldig]
pop rax
push qword [is_alpha_boolf0521]
push rax
pop rcx
pop rax
jmp rcx
ret
is_alpha_bool_end:
jmp is_digit_bool_end
is_digit_booldig: dq 0
is_digit_boolf6521: dq 0
is_digit_bool:
pop rax
pop qword [is_digit_booldig]
push rax
mov [is_digit_boolf6521], rsp
mov rsp, [is_digit_boolf6521]
jmp f7521_end
is_digit_boolf7521: dq 0
f7521_end:
push qword [is_digit_booldig]
push qword [is_digit_boolf6521]
jmp f0621_end
is_digit_boolf0621: dq 0
f0621_end:
push 1
pop qword [is_digit_boolf0621]
push qword [is_digit_boolf0621]
jmp f1621_end
is_digit_boolf1621: dq 0
f1621_end:
push qword [is_digit_booldig]
push qword [is_digit_boolf6521]
jmp f2621_end
is_digit_boolf2621: dq 0
f2621_end:
push qword [is_digit_booldig]
pop qword [is_digit_boolf2621]
push qword [is_digit_boolf2621]
call is_digit
push rax
pop qword [is_digit_boolf1621]
pop qword [is_digit_boolf6521]
pop qword [is_digit_booldig]
push qword [is_digit_boolf1621]
call eq
push rax
pop qword [is_digit_boolf7521]
pop qword [is_digit_boolf6521]
pop qword [is_digit_booldig]
pop rax
push qword [is_digit_boolf7521]
push rax
pop rcx
pop rax
jmp rcx
ret
is_digit_bool_end:
jmp read_whitespace_end
read_whitespaceret: dq 0
read_whitespacel: dq 0
read_whitespacer: dq 0
read_whitespacelb: dq 0
read_whitespacef4621: dq 0
read_whitespacef2721: dq 0
read_whitespace:
pop qword [read_whitespaceret]
pop qword [read_whitespacel]
pop qword [read_whitespacer]
push qword [read_whitespaceret]
push qword [read_whitespacel]
push qword [read_whitespacer]
jmp f2031_end
read_whitespacef2031: dq 0
f2031_end:
push qword [read_whitespacel]
pop qword [read_whitespacef2031]
push qword [read_whitespacef2031]
call deref_byte
push rax
pop qword [read_whitespacelb]
pop qword [read_whitespacer]
pop qword [read_whitespacel]
pop qword [read_whitespaceret]
jmp f3031_end
read_whitespacef3031: dq 0
f3031_end:
jmp f6621_end
f6621ret: dq 0
f6621l: dq 0
f6621r: dq 0
f6621lb: dq 0
f6621break: dq 0
f6621:
pop qword [f6621ret]
pop qword [f6621l]
pop qword [f6621r]
pop qword [f6621lb]
pop qword [f6621break]
jmp f4031_end
f6621f4031: dq 0
f4031_end:
push qword [f6621r]
pop qword [f6621f4031]
push qword [f6621f4031]
jmp f5031_end
f6621f5031: dq 0
f5031_end:
push qword [f6621l]
pop qword [f6621f5031]
push qword [f6621f5031]
jmp f6031_end
f6621f6031: dq 0
f6031_end:
push qword [f6621ret]
pop qword [f6621f6031]
push qword [f6621f6031]
jmp return
f6621_end:
mov rdi, 48
call malloc
mov qword [rax+8], f6621
mov rcx, [read_whitespaceret]
mov qword [rax+16], rcx
mov rcx, [read_whitespacel]
mov qword [rax+24], rcx
mov rcx, [read_whitespacer]
mov qword [rax+32], rcx
mov rcx, [read_whitespacelb]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [read_whitespacef3031]
push qword [read_whitespacef3031]
jmp f7031_end
read_whitespacef7031: dq 0
f7031_end:
push qword [read_whitespaceret]
push qword [read_whitespacel]
push qword [read_whitespacer]
push qword [read_whitespacelb]
jmp f0131_end
read_whitespacef0131: dq 0
f0131_end:
push qword [read_whitespacer]
pop qword [read_whitespacef0131]
push qword [read_whitespacef0131]
jmp f1131_end
read_whitespacef1131: dq 0
f1131_end:
push qword [read_whitespacel]
pop qword [read_whitespacef1131]
push qword [read_whitespacef1131]
call eq
push rax
pop qword [read_whitespacef7031]
pop qword [read_whitespacelb]
pop qword [read_whitespacer]
pop qword [read_whitespacel]
pop qword [read_whitespaceret]
push qword [read_whitespacef7031]
call if
push rax
pop qword [read_whitespacef4621]
jmp f2131_end
read_whitespacef2131: dq 0
f2131_end:
jmp f4721_end
f4721ret: dq 0
f4721l: dq 0
f4721r: dq 0
f4721lb: dq 0
f4721f4621: dq 0
f4721break: dq 0
f4721:
pop qword [f4721ret]
pop qword [f4721l]
pop qword [f4721r]
pop qword [f4721lb]
pop qword [f4721f4621]
pop qword [f4721break]
jmp f3131_end
f4721f3131: dq 0
f3131_end:
push qword [f4721r]
pop qword [f4721f3131]
push qword [f4721f3131]
jmp f4131_end
f4721f4131: dq 0
f4131_end:
push qword [f4721ret]
push qword [f4721l]
push qword [f4721r]
push qword [f4721lb]
push qword [f4721f4621]
push qword [f4721break]
jmp f5131_end
f4721f5131: dq 0
f5131_end:
push 1
pop qword [f4721f5131]
push qword [f4721f5131]
jmp f6131_end
f4721f6131: dq 0
f6131_end:
push qword [f4721l]
pop qword [f4721f6131]
push qword [f4721f6131]
call add
push rax
pop qword [f4721f4131]
pop qword [f4721break]
pop qword [f4721f4621]
pop qword [f4721lb]
pop qword [f4721r]
pop qword [f4721l]
pop qword [f4721ret]
push qword [f4721f4131]
jmp f7131_end
f4721f7131: dq 0
f7131_end:
push qword [f4721ret]
pop qword [f4721f7131]
push qword [f4721f7131]
jmp read_whitespace
f4721_end:
mov rdi, 56
call malloc
mov qword [rax+8], f4721
mov rcx, [read_whitespaceret]
mov qword [rax+16], rcx
mov rcx, [read_whitespacel]
mov qword [rax+24], rcx
mov rcx, [read_whitespacer]
mov qword [rax+32], rcx
mov rcx, [read_whitespacelb]
mov qword [rax+40], rcx
mov rcx, [read_whitespacef4621]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [read_whitespacef2131]
push qword [read_whitespacef2131]
jmp f0231_end
read_whitespacef0231: dq 0
f0231_end:
push qword [read_whitespaceret]
push qword [read_whitespacel]
push qword [read_whitespacer]
push qword [read_whitespacelb]
push qword [read_whitespacef4621]
jmp f1231_end
read_whitespacef1231: dq 0
f1231_end:
push qword [read_whitespaceret]
push qword [read_whitespacel]
push qword [read_whitespacer]
push qword [read_whitespacelb]
push qword [read_whitespacef4621]
jmp f2231_end
read_whitespacef2231: dq 0
f2231_end:
push 32
pop qword [read_whitespacef2231]
push qword [read_whitespacef2231]
jmp f3231_end
read_whitespacef3231: dq 0
f3231_end:
push qword [read_whitespacelb]
pop qword [read_whitespacef3231]
push qword [read_whitespacef3231]
call eq
push rax
pop qword [read_whitespacef1231]
pop qword [read_whitespacef4621]
pop qword [read_whitespacelb]
pop qword [read_whitespacer]
pop qword [read_whitespacel]
pop qword [read_whitespaceret]
push qword [read_whitespacef1231]
jmp f4231_end
read_whitespacef4231: dq 0
f4231_end:
push qword [read_whitespaceret]
push qword [read_whitespacel]
push qword [read_whitespacer]
push qword [read_whitespacelb]
push qword [read_whitespacef4621]
jmp f5231_end
read_whitespacef5231: dq 0
f5231_end:
push 10
pop qword [read_whitespacef5231]
push qword [read_whitespacef5231]
jmp f6231_end
read_whitespacef6231: dq 0
f6231_end:
push qword [read_whitespacelb]
pop qword [read_whitespacef6231]
push qword [read_whitespacef6231]
call eq
push rax
pop qword [read_whitespacef4231]
pop qword [read_whitespacef4621]
pop qword [read_whitespacelb]
pop qword [read_whitespacer]
pop qword [read_whitespacel]
pop qword [read_whitespaceret]
push qword [read_whitespacef4231]
call or
push rax
pop qword [read_whitespacef0231]
pop qword [read_whitespacef4621]
pop qword [read_whitespacelb]
pop qword [read_whitespacer]
pop qword [read_whitespacel]
pop qword [read_whitespaceret]
push qword [read_whitespacef0231]
call if
push rax
pop qword [read_whitespacef2721]
jmp f7231_end
read_whitespacef7231: dq 0
f7231_end:
push qword [read_whitespacer]
pop qword [read_whitespacef7231]
push qword [read_whitespacef7231]
jmp f0331_end
read_whitespacef0331: dq 0
f0331_end:
push qword [read_whitespacel]
pop qword [read_whitespacef0331]
push qword [read_whitespacef0331]
jmp f1331_end
read_whitespacef1331: dq 0
f1331_end:
push qword [read_whitespaceret]
pop qword [read_whitespacef1331]
push qword [read_whitespacef1331]
jmp return
read_whitespace_end:
jmp read_id_helper_end
read_id_helperl: dq 0
read_id_helperr: dq 0
read_id_helperf3331: dq 0
read_id_helperlb: dq 0
read_id_helperf6331: dq 0
read_id_helperf2431: dq 0
read_id_helper:
pop rax
pop qword [read_id_helperl]
pop qword [read_id_helperr]
push rax
mov [read_id_helperf2431], rsp
push qword [read_id_helperl]
push qword [read_id_helperr]
push qword [read_id_helperf2431]
jmp f3431_end
read_id_helperf3431: dq 0
f3431_end:
jmp f4331_end
f4331l: dq 0
f4331r: dq 0
f4331f2431: dq 0
f4331break: dq 0
f4331:
pop qword [f4331l]
pop qword [f4331r]
pop qword [f4331f2431]
pop qword [f4331break]
mov rsp, [f4331f2431]
jmp f4431_end
f4331f4431: dq 0
f4431_end:
push qword [f4331l]
pop qword [f4331f4431]
pop rax
push qword [f4331f4431]
push rax
pop rcx
pop rax
jmp rcx
f4331_end:
mov rdi, 40
call malloc
mov qword [rax+8], f4331
mov rcx, [read_id_helperl]
mov qword [rax+16], rcx
mov rcx, [read_id_helperr]
mov qword [rax+24], rcx
mov rcx, [read_id_helperf2431]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [read_id_helperf3431]
push qword [read_id_helperf3431]
jmp f5431_end
read_id_helperf5431: dq 0
f5431_end:
push qword [read_id_helperl]
push qword [read_id_helperr]
push qword [read_id_helperf2431]
jmp f6431_end
read_id_helperf6431: dq 0
f6431_end:
push qword [read_id_helperr]
pop qword [read_id_helperf6431]
push qword [read_id_helperf6431]
jmp f7431_end
read_id_helperf7431: dq 0
f7431_end:
push qword [read_id_helperl]
pop qword [read_id_helperf7431]
push qword [read_id_helperf7431]
call eq
push rax
pop qword [read_id_helperf5431]
pop qword [read_id_helperf2431]
pop qword [read_id_helperr]
pop qword [read_id_helperl]
push qword [read_id_helperf5431]
call if
push rax
pop qword [read_id_helperf3331]
pop qword [read_id_helperf2431]
pop qword [read_id_helperr]
pop qword [read_id_helperl]
push qword [read_id_helperl]
push qword [read_id_helperr]
push qword [read_id_helperf2431]
push qword [read_id_helperf3331]
jmp f0531_end
read_id_helperf0531: dq 0
f0531_end:
push qword [read_id_helperl]
pop qword [read_id_helperf0531]
push qword [read_id_helperf0531]
call deref_byte
push rax
pop qword [read_id_helperlb]
pop qword [read_id_helperf3331]
pop qword [read_id_helperf2431]
pop qword [read_id_helperr]
pop qword [read_id_helperl]
push qword [read_id_helperl]
push qword [read_id_helperr]
push qword [read_id_helperf2431]
push qword [read_id_helperf3331]
push qword [read_id_helperlb]
jmp f1531_end
read_id_helperf1531: dq 0
f1531_end:
jmp f7331_end
f7331l: dq 0
f7331r: dq 0
f7331f2431: dq 0
f7331f3331: dq 0
f7331lb: dq 0
f7331break: dq 0
f7331:
pop qword [f7331l]
pop qword [f7331r]
pop qword [f7331f2431]
pop qword [f7331f3331]
pop qword [f7331lb]
pop qword [f7331break]
mov rsp, [f7331f2431]
jmp f2531_end
f7331f2531: dq 0
f2531_end:
push qword [f7331l]
push qword [f7331r]
push qword [f7331f2431]
push qword [f7331f3331]
push qword [f7331lb]
push qword [f7331break]
jmp f3531_end
f7331f3531: dq 0
f3531_end:
push qword [f7331r]
pop qword [f7331f3531]
push qword [f7331f3531]
jmp f4531_end
f7331f4531: dq 0
f4531_end:
push qword [f7331l]
push qword [f7331r]
push qword [f7331f2431]
push qword [f7331f3331]
push qword [f7331lb]
push qword [f7331break]
jmp f5531_end
f7331f5531: dq 0
f5531_end:
push 1
pop qword [f7331f5531]
push qword [f7331f5531]
jmp f6531_end
f7331f6531: dq 0
f6531_end:
push qword [f7331l]
pop qword [f7331f6531]
push qword [f7331f6531]
call add
push rax
pop qword [f7331f4531]
pop qword [f7331break]
pop qword [f7331lb]
pop qword [f7331f3331]
pop qword [f7331f2431]
pop qword [f7331r]
pop qword [f7331l]
push qword [f7331f4531]
call read_id_helper
push rax
pop qword [f7331f2531]
pop qword [f7331break]
pop qword [f7331lb]
pop qword [f7331f3331]
pop qword [f7331f2431]
pop qword [f7331r]
pop qword [f7331l]
pop rax
push qword [f7331f2531]
push rax
pop rcx
pop rax
jmp rcx
f7331_end:
mov rdi, 56
call malloc
mov qword [rax+8], f7331
mov rcx, [read_id_helperl]
mov qword [rax+16], rcx
mov rcx, [read_id_helperr]
mov qword [rax+24], rcx
mov rcx, [read_id_helperf2431]
mov qword [rax+32], rcx
mov rcx, [read_id_helperf3331]
mov qword [rax+40], rcx
mov rcx, [read_id_helperlb]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [read_id_helperf1531]
push qword [read_id_helperf1531]
jmp f7531_end
read_id_helperf7531: dq 0
f7531_end:
push qword [read_id_helperl]
push qword [read_id_helperr]
push qword [read_id_helperf2431]
push qword [read_id_helperf3331]
push qword [read_id_helperlb]
jmp f0631_end
read_id_helperf0631: dq 0
f0631_end:
push qword [read_id_helperl]
push qword [read_id_helperr]
push qword [read_id_helperf2431]
push qword [read_id_helperf3331]
push qword [read_id_helperlb]
jmp f1631_end
read_id_helperf1631: dq 0
f1631_end:
push qword [read_id_helperl]
push qword [read_id_helperr]
push qword [read_id_helperf2431]
push qword [read_id_helperf3331]
push qword [read_id_helperlb]
jmp f2631_end
read_id_helperf2631: dq 0
f2631_end:
push qword [read_id_helperlb]
pop qword [read_id_helperf2631]
push qword [read_id_helperf2631]
call is_alpha_bool
push rax
pop qword [read_id_helperf1631]
pop qword [read_id_helperlb]
pop qword [read_id_helperf3331]
pop qword [read_id_helperf2431]
pop qword [read_id_helperr]
pop qword [read_id_helperl]
push qword [read_id_helperf1631]
jmp f3631_end
read_id_helperf3631: dq 0
f3631_end:
push qword [read_id_helperl]
push qword [read_id_helperr]
push qword [read_id_helperf2431]
push qword [read_id_helperf3331]
push qword [read_id_helperlb]
jmp f4631_end
read_id_helperf4631: dq 0
f4631_end:
push qword [read_id_helperlb]
pop qword [read_id_helperf4631]
push qword [read_id_helperf4631]
call is_digit_bool
push rax
pop qword [read_id_helperf3631]
pop qword [read_id_helperlb]
pop qword [read_id_helperf3331]
pop qword [read_id_helperf2431]
pop qword [read_id_helperr]
pop qword [read_id_helperl]
push qword [read_id_helperf3631]
call or
push rax
pop qword [read_id_helperf0631]
pop qword [read_id_helperlb]
pop qword [read_id_helperf3331]
pop qword [read_id_helperf2431]
pop qword [read_id_helperr]
pop qword [read_id_helperl]
push qword [read_id_helperf0631]
jmp f5631_end
read_id_helperf5631: dq 0
f5631_end:
push qword [read_id_helperl]
push qword [read_id_helperr]
push qword [read_id_helperf2431]
push qword [read_id_helperf3331]
push qword [read_id_helperlb]
jmp f6631_end
read_id_helperf6631: dq 0
f6631_end:
push qword [read_id_helperl]
push qword [read_id_helperr]
push qword [read_id_helperf2431]
push qword [read_id_helperf3331]
push qword [read_id_helperlb]
jmp f7631_end
read_id_helperf7631: dq 0
f7631_end:
jmp f0731_end
f0731: db `_`
db 0
f0731_end: push f0731
pop qword [read_id_helperf7631]
push qword [read_id_helperf7631]
call deref_byte
push rax
pop qword [read_id_helperf6631]
pop qword [read_id_helperlb]
pop qword [read_id_helperf3331]
pop qword [read_id_helperf2431]
pop qword [read_id_helperr]
pop qword [read_id_helperl]
push qword [read_id_helperf6631]
jmp f1731_end
read_id_helperf1731: dq 0
f1731_end:
push qword [read_id_helperlb]
pop qword [read_id_helperf1731]
push qword [read_id_helperf1731]
call eq
push rax
pop qword [read_id_helperf5631]
pop qword [read_id_helperlb]
pop qword [read_id_helperf3331]
pop qword [read_id_helperf2431]
pop qword [read_id_helperr]
pop qword [read_id_helperl]
push qword [read_id_helperf5631]
call or
push rax
pop qword [read_id_helperf7531]
pop qword [read_id_helperlb]
pop qword [read_id_helperf3331]
pop qword [read_id_helperf2431]
pop qword [read_id_helperr]
pop qword [read_id_helperl]
push qword [read_id_helperf7531]
call if
push rax
pop qword [read_id_helperf6331]
pop qword [read_id_helperlb]
pop qword [read_id_helperf3331]
pop qword [read_id_helperf2431]
pop qword [read_id_helperr]
pop qword [read_id_helperl]
mov rsp, [read_id_helperf2431]
jmp f2731_end
read_id_helperf2731: dq 0
f2731_end:
push qword [read_id_helperl]
pop qword [read_id_helperf2731]
pop rax
push qword [read_id_helperf2731]
push rax
pop rcx
pop rax
jmp rcx
ret
read_id_helper_end:
jmp read_identifier_end
read_identifierl: dq 0
read_identifierr: dq 0
read_identifiermid: dq 0
read_identifierf5731: dq 0
read_identifier:
pop rax
pop qword [read_identifierl]
pop qword [read_identifierr]
push rax
mov [read_identifierf5731], rsp
push qword [read_identifierl]
push qword [read_identifierr]
push qword [read_identifierf5731]
jmp f6731_end
read_identifierf6731: dq 0
f6731_end:
push qword [read_identifierr]
pop qword [read_identifierf6731]
push qword [read_identifierf6731]
jmp f7731_end
read_identifierf7731: dq 0
f7731_end:
push qword [read_identifierl]
pop qword [read_identifierf7731]
push qword [read_identifierf7731]
call read_id_helper
push rax
pop qword [read_identifiermid]
pop qword [read_identifierf5731]
pop qword [read_identifierr]
pop qword [read_identifierl]
mov rsp, [read_identifierf5731]
jmp f0041_end
read_identifierf0041: dq 0
f0041_end:
push qword [read_identifiermid]
pop qword [read_identifierf0041]
pop rax
push qword [read_identifierf0041]
push rax
jmp f1041_end
read_identifierf1041: dq 0
f1041_end:
push qword [read_identifierl]
pop qword [read_identifierf1041]
pop rax
push qword [read_identifierf1041]
push rax
jmp f2041_end
read_identifierf2041: dq 0
f2041_end:
push qword [read_identifierr]
pop qword [read_identifierf2041]
pop rax
push qword [read_identifierf2041]
push rax
jmp f3041_end
read_identifierf3041: dq 0
f3041_end:
push qword [read_identifiermid]
pop qword [read_identifierf3041]
pop rax
push qword [read_identifierf3041]
push rax
pop rcx
pop rax
jmp rcx
ret
read_identifier_end:
jmp matches_end
matchesret: dq 0
matchesa: dq 0
matchesb: dq 0
matchesf5041: dq 0
matchesf2241: dq 0
matches:
pop qword [matchesret]
pop qword [matchesa]
pop qword [matchesb]
jmp f7441_end
matchesf7441: dq 0
f7441_end:
jmp f3141_end
f3141ret: dq 0
f3141a: dq 0
f3141b: dq 0
f3141break: dq 0
f3141:
pop qword [f3141ret]
pop qword [f3141a]
pop qword [f3141b]
pop qword [f3141break]
jmp f0541_end
f3141f0541: dq 0
f0541_end:
jmp f5141_end
f5141ret: dq 0
f5141break: dq 0
f5141a: dq 0
f5141b: dq 0
f5141:
pop qword [f5141ret]
pop qword [f5141break]
pop qword [f5141a]
pop qword [f5141b]
push qword [f5141a]
jmp runtime_call
f5141_end:
mov rdi, 32
call malloc
mov qword [rax+8], f5141
mov rcx, [f3141ret]
mov qword [rax+16], rcx
mov rcx, [f3141break]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [f3141f0541]
push qword [f3141f0541]
jmp f1541_end
f3141f1541: dq 0
f1541_end:
push qword [f3141ret]
pop qword [f3141f1541]
push qword [f3141f1541]
jmp return
f3141_end:
mov rdi, 40
call malloc
mov qword [rax+8], f3141
mov rcx, [matchesret]
mov qword [rax+16], rcx
mov rcx, [matchesa]
mov qword [rax+24], rcx
mov rcx, [matchesb]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [matchesf7441]
push qword [matchesf7441]
jmp f2541_end
matchesf2541: dq 0
f2541_end:
jmp f3541_end
matchesf3541: dq 0
f3541_end:
push 0
pop qword [matchesf3541]
push qword [matchesf3541]
jmp f4541_end
matchesf4541: dq 0
f4541_end:
jmp f5541_end
matchesf5541: dq 0
f5541_end:
push qword [matchesa]
pop qword [matchesf5541]
push qword [matchesf5541]
call deref_byte
push rax
pop qword [matchesf4541]
push qword [matchesf4541]
call eq
push rax
pop qword [matchesf2541]
push qword [matchesf2541]
call if
push rax
pop qword [matchesf5041]
jmp f6541_end
matchesf6541: dq 0
f6541_end:
jmp f2341_end
f2341ret: dq 0
f2341a: dq 0
f2341b: dq 0
f2341f5041: dq 0
f2341break: dq 0
f2341:
pop qword [f2341ret]
pop qword [f2341a]
pop qword [f2341b]
pop qword [f2341f5041]
pop qword [f2341break]
jmp f7541_end
f2341f7541: dq 0
f7541_end:
jmp f4341_end
f4341ret: dq 0
f4341f5041: dq 0
f4341break: dq 0
f4341a: dq 0
f4341b: dq 0
f4341:
pop qword [f4341ret]
pop qword [f4341f5041]
pop qword [f4341break]
pop qword [f4341a]
pop qword [f4341b]
push qword [f4341b]
jmp runtime_call
f4341_end:
mov rdi, 40
call malloc
mov qword [rax+8], f4341
mov rcx, [f2341ret]
mov qword [rax+16], rcx
mov rcx, [f2341f5041]
mov qword [rax+24], rcx
mov rcx, [f2341break]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [f2341f7541]
push qword [f2341f7541]
jmp f0641_end
f2341f0641: dq 0
f0641_end:
push qword [f2341ret]
pop qword [f2341f0641]
push qword [f2341f0641]
jmp return
f2341_end:
mov rdi, 48
call malloc
mov qword [rax+8], f2341
mov rcx, [matchesret]
mov qword [rax+16], rcx
mov rcx, [matchesa]
mov qword [rax+24], rcx
mov rcx, [matchesb]
mov qword [rax+32], rcx
mov rcx, [matchesf5041]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [matchesf6541]
push qword [matchesf6541]
jmp f1641_end
matchesf1641: dq 0
f1641_end:
jmp f2641_end
matchesf2641: dq 0
f2641_end:
jmp f3641_end
matchesf3641: dq 0
f3641_end:
push qword [matchesb]
pop qword [matchesf3641]
push qword [matchesf3641]
call deref_byte
push rax
pop qword [matchesf2641]
push qword [matchesf2641]
jmp f4641_end
matchesf4641: dq 0
f4641_end:
jmp f5641_end
matchesf5641: dq 0
f5641_end:
push qword [matchesa]
pop qword [matchesf5641]
push qword [matchesf5641]
call deref_byte
push rax
pop qword [matchesf4641]
push qword [matchesf4641]
call ne
push rax
pop qword [matchesf1641]
push qword [matchesf1641]
call if
push rax
pop qword [matchesf2241]
jmp f6641_end
matchesf6641: dq 0
f6641_end:
jmp f7641_end
matchesf7641: dq 0
f7641_end:
push 1
pop qword [matchesf7641]
push qword [matchesf7641]
jmp f0741_end
matchesf0741: dq 0
f0741_end:
push qword [matchesb]
pop qword [matchesf0741]
push qword [matchesf0741]
call add
push rax
pop qword [matchesf6641]
push qword [matchesf6641]
jmp f1741_end
matchesf1741: dq 0
f1741_end:
jmp f2741_end
matchesf2741: dq 0
f2741_end:
push 1
pop qword [matchesf2741]
push qword [matchesf2741]
jmp f3741_end
matchesf3741: dq 0
f3741_end:
push qword [matchesa]
pop qword [matchesf3741]
push qword [matchesf3741]
call add
push rax
pop qword [matchesf1741]
push qword [matchesf1741]
jmp f4741_end
matchesf4741: dq 0
f4741_end:
push qword [matchesret]
pop qword [matchesf4741]
push qword [matchesf4741]
jmp matches
matches_end:
jmp matches_strict_end
matches_strictpattern: dq 0
matches_strictl: dq 0
matches_strictr: dq 0
matches_strictf6741: dq 0
matches_strictf1051: dq 0
matches_strictf0151: dq 0
matches_strict:
pop rax
pop qword [matches_strictpattern]
pop qword [matches_strictl]
pop qword [matches_strictr]
push rax
mov [matches_strictf0151], rsp
push qword [matches_strictpattern]
push qword [matches_strictl]
push qword [matches_strictr]
push qword [matches_strictf0151]
jmp f1151_end
matches_strictf1151: dq 0
f1151_end:
jmp f7741_end
f7741pattern: dq 0
f7741l: dq 0
f7741r: dq 0
f7741f0151: dq 0
f7741break: dq 0
f7741:
pop qword [f7741pattern]
pop qword [f7741l]
pop qword [f7741r]
pop qword [f7741f0151]
pop qword [f7741break]
mov rsp, [f7741f0151]
jmp f2151_end
f7741f2151: dq 0
f2151_end:
push qword [f7741pattern]
push qword [f7741l]
push qword [f7741r]
push qword [f7741f0151]
push qword [f7741break]
jmp f3151_end
f7741f3151: dq 0
f3151_end:
push qword [f7741r]
pop qword [f7741f3151]
push qword [f7741f3151]
jmp f4151_end
f7741f4151: dq 0
f4151_end:
push qword [f7741l]
pop qword [f7741f4151]
push qword [f7741f4151]
call eq
push rax
pop qword [f7741f2151]
pop qword [f7741break]
pop qword [f7741f0151]
pop qword [f7741r]
pop qword [f7741l]
pop qword [f7741pattern]
pop rax
push qword [f7741f2151]
push rax
pop rcx
pop rax
jmp rcx
f7741_end:
mov rdi, 48
call malloc
mov qword [rax+8], f7741
mov rcx, [matches_strictpattern]
mov qword [rax+16], rcx
mov rcx, [matches_strictl]
mov qword [rax+24], rcx
mov rcx, [matches_strictr]
mov qword [rax+32], rcx
mov rcx, [matches_strictf0151]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [matches_strictf1151]
push qword [matches_strictf1151]
jmp f5151_end
matches_strictf5151: dq 0
f5151_end:
push qword [matches_strictpattern]
push qword [matches_strictl]
push qword [matches_strictr]
push qword [matches_strictf0151]
jmp f6151_end
matches_strictf6151: dq 0
f6151_end:
push 0
pop qword [matches_strictf6151]
push qword [matches_strictf6151]
jmp f7151_end
matches_strictf7151: dq 0
f7151_end:
push qword [matches_strictpattern]
push qword [matches_strictl]
push qword [matches_strictr]
push qword [matches_strictf0151]
jmp f0251_end
matches_strictf0251: dq 0
f0251_end:
push qword [matches_strictpattern]
pop qword [matches_strictf0251]
push qword [matches_strictf0251]
call deref_byte
push rax
pop qword [matches_strictf7151]
pop qword [matches_strictf0151]
pop qword [matches_strictr]
pop qword [matches_strictl]
pop qword [matches_strictpattern]
push qword [matches_strictf7151]
call eq
push rax
pop qword [matches_strictf5151]
pop qword [matches_strictf0151]
pop qword [matches_strictr]
pop qword [matches_strictl]
pop qword [matches_strictpattern]
push qword [matches_strictf5151]
call if
push rax
pop qword [matches_strictf6741]
pop qword [matches_strictf0151]
pop qword [matches_strictr]
pop qword [matches_strictl]
pop qword [matches_strictpattern]
push qword [matches_strictpattern]
push qword [matches_strictl]
push qword [matches_strictr]
push qword [matches_strictf0151]
push qword [matches_strictf6741]
jmp f1251_end
matches_strictf1251: dq 0
f1251_end:
jmp f2051_end
f2051pattern: dq 0
f2051l: dq 0
f2051r: dq 0
f2051f0151: dq 0
f2051f6741: dq 0
f2051break: dq 0
f2051:
pop qword [f2051pattern]
pop qword [f2051l]
pop qword [f2051r]
pop qword [f2051f0151]
pop qword [f2051f6741]
pop qword [f2051break]
mov rsp, [f2051f0151]
jmp f2251_end
f2051f2251: dq 0
f2251_end:
jmp f3051_end
f3051pattern: dq 0
f3051l: dq 0
f3051r: dq 0
f3051f0151: dq 0
f3051f6741: dq 0
f3051break: dq 0
f3051a: dq 0
f3051b: dq 0
f3051:
pop qword [f3051pattern]
pop qword [f3051l]
pop qword [f3051r]
pop qword [f3051f0151]
pop qword [f3051f6741]
pop qword [f3051break]
pop qword [f3051a]
pop qword [f3051b]
push qword [f3051b]
jmp runtime_call
f3051_end:
mov rdi, 64
call malloc
mov qword [rax+8], f3051
mov rcx, [f2051pattern]
mov qword [rax+16], rcx
mov rcx, [f2051l]
mov qword [rax+24], rcx
mov rcx, [f2051r]
mov qword [rax+32], rcx
mov rcx, [f2051f0151]
mov qword [rax+40], rcx
mov rcx, [f2051f6741]
mov qword [rax+48], rcx
mov rcx, [f2051break]
mov qword [rax+56], rcx
mov qword [rax], 7
push rax
pop qword [f2051f2251]
pop rax
push qword [f2051f2251]
push rax
pop rcx
pop rax
jmp rcx
f2051_end:
mov rdi, 56
call malloc
mov qword [rax+8], f2051
mov rcx, [matches_strictpattern]
mov qword [rax+16], rcx
mov rcx, [matches_strictl]
mov qword [rax+24], rcx
mov rcx, [matches_strictr]
mov qword [rax+32], rcx
mov rcx, [matches_strictf0151]
mov qword [rax+40], rcx
mov rcx, [matches_strictf6741]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [matches_strictf1251]
push qword [matches_strictf1251]
jmp f3251_end
matches_strictf3251: dq 0
f3251_end:
push qword [matches_strictpattern]
push qword [matches_strictl]
push qword [matches_strictr]
push qword [matches_strictf0151]
push qword [matches_strictf6741]
jmp f4251_end
matches_strictf4251: dq 0
f4251_end:
push qword [matches_strictpattern]
push qword [matches_strictl]
push qword [matches_strictr]
push qword [matches_strictf0151]
push qword [matches_strictf6741]
jmp f5251_end
matches_strictf5251: dq 0
f5251_end:
push qword [matches_strictl]
pop qword [matches_strictf5251]
push qword [matches_strictf5251]
call deref_byte
push rax
pop qword [matches_strictf4251]
pop qword [matches_strictf6741]
pop qword [matches_strictf0151]
pop qword [matches_strictr]
pop qword [matches_strictl]
pop qword [matches_strictpattern]
push qword [matches_strictf4251]
jmp f6251_end
matches_strictf6251: dq 0
f6251_end:
push qword [matches_strictpattern]
push qword [matches_strictl]
push qword [matches_strictr]
push qword [matches_strictf0151]
push qword [matches_strictf6741]
jmp f7251_end
matches_strictf7251: dq 0
f7251_end:
push qword [matches_strictpattern]
pop qword [matches_strictf7251]
push qword [matches_strictf7251]
call deref_byte
push rax
pop qword [matches_strictf6251]
pop qword [matches_strictf6741]
pop qword [matches_strictf0151]
pop qword [matches_strictr]
pop qword [matches_strictl]
pop qword [matches_strictpattern]
push qword [matches_strictf6251]
call ne
push rax
pop qword [matches_strictf3251]
pop qword [matches_strictf6741]
pop qword [matches_strictf0151]
pop qword [matches_strictr]
pop qword [matches_strictl]
pop qword [matches_strictpattern]
push qword [matches_strictf3251]
call if
push rax
pop qword [matches_strictf1051]
pop qword [matches_strictf6741]
pop qword [matches_strictf0151]
pop qword [matches_strictr]
pop qword [matches_strictl]
pop qword [matches_strictpattern]
mov rsp, [matches_strictf0151]
jmp f0351_end
matches_strictf0351: dq 0
f0351_end:
push qword [matches_strictpattern]
push qword [matches_strictl]
push qword [matches_strictr]
push qword [matches_strictf0151]
push qword [matches_strictf6741]
push qword [matches_strictf1051]
jmp f1351_end
matches_strictf1351: dq 0
f1351_end:
push qword [matches_strictr]
pop qword [matches_strictf1351]
push qword [matches_strictf1351]
jmp f2351_end
matches_strictf2351: dq 0
f2351_end:
push qword [matches_strictpattern]
push qword [matches_strictl]
push qword [matches_strictr]
push qword [matches_strictf0151]
push qword [matches_strictf6741]
push qword [matches_strictf1051]
jmp f3351_end
matches_strictf3351: dq 0
f3351_end:
push 1
pop qword [matches_strictf3351]
push qword [matches_strictf3351]
jmp f4351_end
matches_strictf4351: dq 0
f4351_end:
push qword [matches_strictl]
pop qword [matches_strictf4351]
push qword [matches_strictf4351]
call add
push rax
pop qword [matches_strictf2351]
pop qword [matches_strictf1051]
pop qword [matches_strictf6741]
pop qword [matches_strictf0151]
pop qword [matches_strictr]
pop qword [matches_strictl]
pop qword [matches_strictpattern]
push qword [matches_strictf2351]
jmp f5351_end
matches_strictf5351: dq 0
f5351_end:
push qword [matches_strictpattern]
push qword [matches_strictl]
push qword [matches_strictr]
push qword [matches_strictf0151]
push qword [matches_strictf6741]
push qword [matches_strictf1051]
jmp f6351_end
matches_strictf6351: dq 0
f6351_end:
push 1
pop qword [matches_strictf6351]
push qword [matches_strictf6351]
jmp f7351_end
matches_strictf7351: dq 0
f7351_end:
push qword [matches_strictpattern]
pop qword [matches_strictf7351]
push qword [matches_strictf7351]
call add
push rax
pop qword [matches_strictf5351]
pop qword [matches_strictf1051]
pop qword [matches_strictf6741]
pop qword [matches_strictf0151]
pop qword [matches_strictr]
pop qword [matches_strictl]
pop qword [matches_strictpattern]
push qword [matches_strictf5351]
call matches_strict
push rax
pop qword [matches_strictf0351]
pop qword [matches_strictf1051]
pop qword [matches_strictf6741]
pop qword [matches_strictf0151]
pop qword [matches_strictr]
pop qword [matches_strictl]
pop qword [matches_strictpattern]
pop rax
push qword [matches_strictf0351]
push rax
pop rcx
pop rax
jmp rcx
ret
matches_strict_end:
jmp token_matches_end
token_matchespattern: dq 0
token_matchestoken: dq 0
token_matchest: dq 0
token_matchesl: dq 0
token_matchesr: dq 0
token_matchesf2451: dq 0
token_matches:
pop rax
pop qword [token_matchespattern]
pop qword [token_matchestoken]
push rax
mov [token_matchesf2451], rsp
push qword [token_matchespattern]
push qword [token_matchestoken]
push qword [token_matchesf2451]
push qword [token_matchestoken]
call runtime_call_ret
push rax
pop qword [token_matchest]
pop qword [token_matchesl]
pop qword [token_matchesr]
pop qword [token_matchesf2451]
pop qword [token_matchestoken]
pop qword [token_matchespattern]
mov rsp, [token_matchesf2451]
jmp f3451_end
token_matchesf3451: dq 0
f3451_end:
push qword [token_matchespattern]
push qword [token_matchestoken]
push qword [token_matchesf2451]
push qword [token_matchest]
push qword [token_matchesl]
push qword [token_matchesr]
jmp f4451_end
token_matchesf4451: dq 0
f4451_end:
push qword [token_matchesr]
pop qword [token_matchesf4451]
push qword [token_matchesf4451]
jmp f5451_end
token_matchesf5451: dq 0
f5451_end:
push qword [token_matchesl]
pop qword [token_matchesf5451]
push qword [token_matchesf5451]
jmp f6451_end
token_matchesf6451: dq 0
f6451_end:
push qword [token_matchespattern]
pop qword [token_matchesf6451]
push qword [token_matchesf6451]
call matches_strict
push rax
pop qword [token_matchesf3451]
pop qword [token_matchesr]
pop qword [token_matchesl]
pop qword [token_matchest]
pop qword [token_matchesf2451]
pop qword [token_matchestoken]
pop qword [token_matchespattern]
pop rax
push qword [token_matchesf3451]
push rax
pop rcx
pop rax
jmp rcx
ret
token_matches_end:
jmp read_const_string_end
read_const_stringret: dq 0
read_const_stringorig_l: dq 0
read_const_stringr: dq 0
read_const_stringl: dq 0
read_const_stringlb: dq 0
read_const_stringf4551: dq 0
read_const_stringl_start: dq 0
read_const_stringl_end: dq 0
read_const_string:
pop qword [read_const_stringret]
pop qword [read_const_stringorig_l]
pop qword [read_const_stringr]
jmp f0751_end
read_const_stringf0751: dq 0
f0751_end:
push qword [read_const_stringr]
pop qword [read_const_stringf0751]
push qword [read_const_stringf0751]
jmp f1751_end
read_const_stringf1751: dq 0
f1751_end:
push qword [read_const_stringorig_l]
pop qword [read_const_stringf1751]
push qword [read_const_stringf1751]
call read_whitespace
push rax
pop qword [read_const_stringl]
pop qword [read_const_stringr]
jmp f2751_end
read_const_stringf2751: dq 0
f2751_end:
push qword [read_const_stringl]
pop qword [read_const_stringf2751]
push qword [read_const_stringf2751]
call deref_byte
push rax
pop qword [read_const_stringlb]
jmp f3751_end
read_const_stringf3751: dq 0
f3751_end:
jmp f0651_end
f0651ret: dq 0
f0651orig_l: dq 0
f0651l: dq 0
f0651r: dq 0
f0651lb: dq 0
f0651break: dq 0
f0651:
pop qword [f0651ret]
pop qword [f0651orig_l]
pop qword [f0651l]
pop qword [f0651r]
pop qword [f0651lb]
pop qword [f0651break]
jmp f4751_end
f0651f4751: dq 0
f4751_end:
push 0
pop qword [f0651f4751]
push qword [f0651f4751]
jmp f5751_end
f0651f5751: dq 0
f5751_end:
push qword [f0651r]
pop qword [f0651f5751]
push qword [f0651f5751]
jmp f6751_end
f0651f6751: dq 0
f6751_end:
push qword [f0651orig_l]
pop qword [f0651f6751]
push qword [f0651f6751]
jmp f7751_end
f0651f7751: dq 0
f7751_end:
push qword [f0651ret]
pop qword [f0651f7751]
push qword [f0651f7751]
jmp return
f0651_end:
mov rdi, 56
call malloc
mov qword [rax+8], f0651
mov rcx, [read_const_stringret]
mov qword [rax+16], rcx
mov rcx, [read_const_stringorig_l]
mov qword [rax+24], rcx
mov rcx, [read_const_stringl]
mov qword [rax+32], rcx
mov rcx, [read_const_stringr]
mov qword [rax+40], rcx
mov rcx, [read_const_stringlb]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [read_const_stringf3751]
push qword [read_const_stringf3751]
jmp f0061_end
read_const_stringf0061: dq 0
f0061_end:
jmp f1061_end
read_const_stringf1061: dq 0
f1061_end:
push 34
pop qword [read_const_stringf1061]
push qword [read_const_stringf1061]
jmp f2061_end
read_const_stringf2061: dq 0
f2061_end:
push qword [read_const_stringlb]
pop qword [read_const_stringf2061]
push qword [read_const_stringf2061]
call ne
push rax
pop qword [read_const_stringf0061]
push qword [read_const_stringf0061]
call if
push rax
pop qword [read_const_stringf4551]
push qword [read_const_stringret]
push qword [read_const_stringorig_l]
push qword [read_const_stringl]
push qword [read_const_stringr]
push qword [read_const_stringlb]
push qword [read_const_stringf4551]
jmp f3061_end
read_const_stringf3061: dq 0
f3061_end:
push 1
pop qword [read_const_stringf3061]
push qword [read_const_stringf3061]
jmp f4061_end
read_const_stringf4061: dq 0
f4061_end:
push qword [read_const_stringl]
pop qword [read_const_stringf4061]
push qword [read_const_stringf4061]
call add
push rax
pop qword [read_const_stringl_start]
pop qword [read_const_stringf4551]
pop qword [read_const_stringlb]
pop qword [read_const_stringr]
pop qword [read_const_stringl]
pop qword [read_const_stringorig_l]
pop qword [read_const_stringret]
push qword [read_const_stringret]
push qword [read_const_stringorig_l]
push qword [read_const_stringl]
push qword [read_const_stringlb]
push qword [read_const_stringf4551]
push qword [read_const_stringl_start]
jmp f5061_end
read_const_stringf5061: dq 0
f5061_end:
push qword [read_const_stringr]
pop qword [read_const_stringf5061]
push qword [read_const_stringf5061]
jmp f6061_end
read_const_stringf6061: dq 0
f6061_end:
push qword [read_const_stringl_start]
pop qword [read_const_stringf6061]
push qword [read_const_stringf6061]
jmp f7061_end
read_const_stringf7061: dq 0
f7061_end:
push 34
pop qword [read_const_stringf7061]
push qword [read_const_stringf7061]
call read_until
push rax
pop qword [read_const_stringl_end]
pop qword [read_const_stringr]
pop qword [read_const_stringl_start]
pop qword [read_const_stringf4551]
pop qword [read_const_stringlb]
pop qword [read_const_stringl]
pop qword [read_const_stringorig_l]
pop qword [read_const_stringret]
push qword [read_const_stringret]
push qword [read_const_stringorig_l]
push qword [read_const_stringlb]
push qword [read_const_stringf4551]
push qword [read_const_stringl_start]
push qword [read_const_stringl_end]
push qword [read_const_stringr]
jmp f0161_end
read_const_stringf0161: dq 0
f0161_end:
push 1
pop qword [read_const_stringf0161]
push qword [read_const_stringf0161]
jmp f1161_end
read_const_stringf1161: dq 0
f1161_end:
push qword [read_const_stringl_end]
pop qword [read_const_stringf1161]
push qword [read_const_stringf1161]
call add
push rax
pop qword [read_const_stringl]
pop qword [read_const_stringr]
pop qword [read_const_stringl_end]
pop qword [read_const_stringl_start]
pop qword [read_const_stringf4551]
pop qword [read_const_stringlb]
pop qword [read_const_stringorig_l]
pop qword [read_const_stringret]
jmp f2161_end
read_const_stringf2161: dq 0
f2161_end:
jmp f5651_end
f5651ret: dq 0
f5651orig_l: dq 0
f5651lb: dq 0
f5651f4551: dq 0
f5651l_start: dq 0
f5651l_end: dq 0
f5651r: dq 0
f5651l: dq 0
f5651f3161: dq 0
f5651:
pop rax
pop qword [f5651ret]
pop qword [f5651orig_l]
pop qword [f5651lb]
pop qword [f5651f4551]
pop qword [f5651l_start]
pop qword [f5651l_end]
pop qword [f5651r]
pop qword [f5651l]
push rax
mov [f5651f3161], rsp
mov rsp, [f5651f3161]
jmp f4161_end
f5651f4161: dq 0
f4161_end:
push qword [f5651l_end]
pop qword [f5651f4161]
pop rax
push qword [f5651f4161]
push rax
jmp f5161_end
f5651f5161: dq 0
f5161_end:
push qword [f5651l_start]
pop qword [f5651f5161]
pop rax
push qword [f5651f5161]
push rax
pop rcx
pop rax
jmp rcx
ret
f5651_end:
mov rdi, 80
call malloc
mov qword [rax+8], f5651
mov rcx, [read_const_stringret]
mov qword [rax+16], rcx
mov rcx, [read_const_stringorig_l]
mov qword [rax+24], rcx
mov rcx, [read_const_stringlb]
mov qword [rax+32], rcx
mov rcx, [read_const_stringf4551]
mov qword [rax+40], rcx
mov rcx, [read_const_stringl_start]
mov qword [rax+48], rcx
mov rcx, [read_const_stringl_end]
mov qword [rax+56], rcx
mov rcx, [read_const_stringr]
mov qword [rax+64], rcx
mov rcx, [read_const_stringl]
mov qword [rax+72], rcx
mov qword [rax], 9
push rax
pop qword [read_const_stringf2161]
push qword [read_const_stringf2161]
jmp f6161_end
read_const_stringf6161: dq 0
f6161_end:
push qword [read_const_stringr]
pop qword [read_const_stringf6161]
push qword [read_const_stringf6161]
jmp f7161_end
read_const_stringf7161: dq 0
f7161_end:
push qword [read_const_stringl]
pop qword [read_const_stringf7161]
push qword [read_const_stringf7161]
jmp f0261_end
read_const_stringf0261: dq 0
f0261_end:
push qword [read_const_stringret]
pop qword [read_const_stringf0261]
push qword [read_const_stringf0261]
jmp return
read_const_string_end:
jmp token_id_end
token_id: dq 0
token_id_end:
push 1
pop qword [token_id]
jmp token_string_end
token_string: dq 0
token_string_end:
push 3
pop qword [token_string]


jmp read_token_end
read_tokenret: dq 0
read_tokenl: dq 0
read_tokenr: dq 0
read_tokenf2261: dq 0
read_tokenf0461: dq 0
read_tokenf4561: dq 0
read_tokenf0761: dq 0
read_tokenf4071: dq 0
read_tokenf0271: dq 0
read_tokenf4371: dq 0
read_tokenf0571: dq 0
read_tokenf4671: dq 0
read_tokenf0002: dq 0
read_tokenf4102: dq 0
read_tokenil: dq 0
read_tokenir: dq 0
read_tokenf2302: dq 0
read_token:
pop qword [read_tokenret]
pop qword [read_tokenl]
pop qword [read_tokenr]
push qword [read_tokenret]
jmp f4402_end
read_tokenf4402: dq 0
f4402_end:
push qword [read_tokenr]
pop qword [read_tokenf4402]
push qword [read_tokenf4402]
jmp f5402_end
read_tokenf5402: dq 0
f5402_end:
push qword [read_tokenl]
pop qword [read_tokenf5402]
push qword [read_tokenf5402]
call read_whitespace
push rax
pop qword [read_tokenl]
pop qword [read_tokenr]
pop qword [read_tokenret]
jmp f6402_end
read_tokenf6402: dq 0
f6402_end:
jmp f0361_end
f0361ret: dq 0
f0361l: dq 0
f0361r: dq 0
f0361break: dq 0
f0361:
pop qword [f0361ret]
pop qword [f0361l]
pop qword [f0361r]
pop qword [f0361break]
jmp f7402_end
f0361f7402: dq 0
f7402_end:
jmp f0502_end
f0361f0502: dq 0
f0502_end:
push 1
pop qword [f0361f0502]
push qword [f0361f0502]
jmp f1502_end
f0361f1502: dq 0
f1502_end:
push qword [f0361l]
pop qword [f0361f1502]
push qword [f0361f1502]
call add
push rax
pop qword [f0361f7402]
push qword [f0361f7402]
jmp f2502_end
f0361f2502: dq 0
f2502_end:
push qword [f0361l]
pop qword [f0361f2502]
push qword [f0361f2502]
jmp f3502_end
f0361f3502: dq 0
f3502_end:
push 0
pop qword [f0361f3502]
push qword [f0361f3502]
jmp f4502_end
f0361f4502: dq 0
f4502_end:
push qword [f0361r]
pop qword [f0361f4502]
push qword [f0361f4502]
jmp f5502_end
f0361f5502: dq 0
f5502_end:
jmp f6502_end
f0361f6502: dq 0
f6502_end:
push 1
pop qword [f0361f6502]
push qword [f0361f6502]
jmp f7502_end
f0361f7502: dq 0
f7502_end:
push qword [f0361l]
pop qword [f0361f7502]
push qword [f0361f7502]
call add
push rax
pop qword [f0361f5502]
push qword [f0361f5502]
jmp f0602_end
f0361f0602: dq 0
f0602_end:
push qword [f0361ret]
pop qword [f0361f0602]
push qword [f0361f0602]
jmp return
f0361_end:
mov rdi, 40
call malloc
mov qword [rax+8], f0361
mov rcx, [read_tokenret]
mov qword [rax+16], rcx
mov rcx, [read_tokenl]
mov qword [rax+24], rcx
mov rcx, [read_tokenr]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [read_tokenf6402]
push qword [read_tokenf6402]
jmp f1602_end
read_tokenf1602: dq 0
f1602_end:
jmp f2602_end
read_tokenf2602: dq 0
f2602_end:
jmp f3602_end
read_tokenf3602: dq 0
f3602_end:
push qword [read_tokenl]
pop qword [read_tokenf3602]
push qword [read_tokenf3602]
call deref_byte
push rax
pop qword [read_tokenf2602]
push qword [read_tokenf2602]
jmp f4602_end
read_tokenf4602: dq 0
f4602_end:
push 34
pop qword [read_tokenf4602]
push qword [read_tokenf4602]
call eq
push rax
pop qword [read_tokenf1602]
push qword [read_tokenf1602]
call if
push rax
pop qword [read_tokenf2261]
jmp f5602_end
read_tokenf5602: dq 0
f5602_end:
jmp f4461_end
f4461ret: dq 0
f4461l: dq 0
f4461r: dq 0
f4461f2261: dq 0
f4461break: dq 0
f4461:
pop qword [f4461ret]
pop qword [f4461l]
pop qword [f4461r]
pop qword [f4461f2261]
pop qword [f4461break]
jmp f6602_end
f4461f6602: dq 0
f6602_end:
jmp f7602_end
f4461f7602: dq 0
f7602_end:
push 1
pop qword [f4461f7602]
push qword [f4461f7602]
jmp f0702_end
f4461f0702: dq 0
f0702_end:
push qword [f4461l]
pop qword [f4461f0702]
push qword [f4461f0702]
call add
push rax
pop qword [f4461f6602]
push qword [f4461f6602]
jmp f1702_end
f4461f1702: dq 0
f1702_end:
push qword [f4461l]
pop qword [f4461f1702]
push qword [f4461f1702]
jmp f2702_end
f4461f2702: dq 0
f2702_end:
push 0
pop qword [f4461f2702]
push qword [f4461f2702]
jmp f3702_end
f4461f3702: dq 0
f3702_end:
push qword [f4461r]
pop qword [f4461f3702]
push qword [f4461f3702]
jmp f4702_end
f4461f4702: dq 0
f4702_end:
jmp f5702_end
f4461f5702: dq 0
f5702_end:
push 1
pop qword [f4461f5702]
push qword [f4461f5702]
jmp f6702_end
f4461f6702: dq 0
f6702_end:
push qword [f4461l]
pop qword [f4461f6702]
push qword [f4461f6702]
call add
push rax
pop qword [f4461f4702]
push qword [f4461f4702]
jmp f7702_end
f4461f7702: dq 0
f7702_end:
push qword [f4461ret]
pop qword [f4461f7702]
push qword [f4461f7702]
jmp return
f4461_end:
mov rdi, 48
call malloc
mov qword [rax+8], f4461
mov rcx, [read_tokenret]
mov qword [rax+16], rcx
mov rcx, [read_tokenl]
mov qword [rax+24], rcx
mov rcx, [read_tokenr]
mov qword [rax+32], rcx
mov rcx, [read_tokenf2261]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [read_tokenf5602]
push qword [read_tokenf5602]
jmp f0012_end
read_tokenf0012: dq 0
f0012_end:
jmp f1012_end
read_tokenf1012: dq 0
f1012_end:
push qword [read_tokenl]
pop qword [read_tokenf1012]
push qword [read_tokenf1012]
jmp f2012_end
read_tokenf2012: dq 0
f2012_end:
jmp f3012_end
f3012: db `$`
db 0
f3012_end: push f3012
pop qword [read_tokenf2012]
push qword [read_tokenf2012]
call matches
push rax
pop qword [read_tokenf0012]
push qword [read_tokenf0012]
call if
push rax
pop qword [read_tokenf0461]
jmp f4012_end
read_tokenf4012: dq 0
f4012_end:
jmp f0661_end
f0661ret: dq 0
f0661l: dq 0
f0661r: dq 0
f0661f2261: dq 0
f0661f0461: dq 0
f0661break: dq 0
f0661:
pop qword [f0661ret]
pop qword [f0661l]
pop qword [f0661r]
pop qword [f0661f2261]
pop qword [f0661f0461]
pop qword [f0661break]
jmp f5012_end
f0661f5012: dq 0
f5012_end:
jmp f6012_end
f0661f6012: dq 0
f6012_end:
push 1
pop qword [f0661f6012]
push qword [f0661f6012]
jmp f7012_end
f0661f7012: dq 0
f7012_end:
push qword [f0661l]
pop qword [f0661f7012]
push qword [f0661f7012]
call add
push rax
pop qword [f0661f5012]
push qword [f0661f5012]
jmp f0112_end
f0661f0112: dq 0
f0112_end:
push qword [f0661l]
pop qword [f0661f0112]
push qword [f0661f0112]
jmp f1112_end
f0661f1112: dq 0
f1112_end:
push 0
pop qword [f0661f1112]
push qword [f0661f1112]
jmp f2112_end
f0661f2112: dq 0
f2112_end:
push qword [f0661r]
pop qword [f0661f2112]
push qword [f0661f2112]
jmp f3112_end
f0661f3112: dq 0
f3112_end:
jmp f4112_end
f0661f4112: dq 0
f4112_end:
push 1
pop qword [f0661f4112]
push qword [f0661f4112]
jmp f5112_end
f0661f5112: dq 0
f5112_end:
push qword [f0661l]
pop qword [f0661f5112]
push qword [f0661f5112]
call add
push rax
pop qword [f0661f3112]
push qword [f0661f3112]
jmp f6112_end
f0661f6112: dq 0
f6112_end:
push qword [f0661ret]
pop qword [f0661f6112]
push qword [f0661f6112]
jmp return
f0661_end:
mov rdi, 56
call malloc
mov qword [rax+8], f0661
mov rcx, [read_tokenret]
mov qword [rax+16], rcx
mov rcx, [read_tokenl]
mov qword [rax+24], rcx
mov rcx, [read_tokenr]
mov qword [rax+32], rcx
mov rcx, [read_tokenf2261]
mov qword [rax+40], rcx
mov rcx, [read_tokenf0461]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [read_tokenf4012]
push qword [read_tokenf4012]
jmp f7112_end
read_tokenf7112: dq 0
f7112_end:
jmp f0212_end
read_tokenf0212: dq 0
f0212_end:
push qword [read_tokenl]
pop qword [read_tokenf0212]
push qword [read_tokenf0212]
jmp f1212_end
read_tokenf1212: dq 0
f1212_end:
jmp f2212_end
f2212: db `!`
db 0
f2212_end: push f2212
pop qword [read_tokenf1212]
push qword [read_tokenf1212]
call matches
push rax
pop qword [read_tokenf7112]
push qword [read_tokenf7112]
call if
push rax
pop qword [read_tokenf4561]
jmp f3212_end
read_tokenf3212: dq 0
f3212_end:
jmp f4761_end
f4761ret: dq 0
f4761l: dq 0
f4761r: dq 0
f4761f2261: dq 0
f4761f0461: dq 0
f4761f4561: dq 0
f4761break: dq 0
f4761:
pop qword [f4761ret]
pop qword [f4761l]
pop qword [f4761r]
pop qword [f4761f2261]
pop qword [f4761f0461]
pop qword [f4761f4561]
pop qword [f4761break]
jmp f4212_end
f4761f4212: dq 0
f4212_end:
jmp f5212_end
f4761f5212: dq 0
f5212_end:
push 1
pop qword [f4761f5212]
push qword [f4761f5212]
jmp f6212_end
f4761f6212: dq 0
f6212_end:
push qword [f4761l]
pop qword [f4761f6212]
push qword [f4761f6212]
call add
push rax
pop qword [f4761f4212]
push qword [f4761f4212]
jmp f7212_end
f4761f7212: dq 0
f7212_end:
push qword [f4761l]
pop qword [f4761f7212]
push qword [f4761f7212]
jmp f0312_end
f4761f0312: dq 0
f0312_end:
push 0
pop qword [f4761f0312]
push qword [f4761f0312]
jmp f1312_end
f4761f1312: dq 0
f1312_end:
push qword [f4761r]
pop qword [f4761f1312]
push qword [f4761f1312]
jmp f2312_end
f4761f2312: dq 0
f2312_end:
jmp f3312_end
f4761f3312: dq 0
f3312_end:
push 1
pop qword [f4761f3312]
push qword [f4761f3312]
jmp f4312_end
f4761f4312: dq 0
f4312_end:
push qword [f4761l]
pop qword [f4761f4312]
push qword [f4761f4312]
call add
push rax
pop qword [f4761f2312]
push qword [f4761f2312]
jmp f5312_end
f4761f5312: dq 0
f5312_end:
push qword [f4761ret]
pop qword [f4761f5312]
push qword [f4761f5312]
jmp return
f4761_end:
mov rdi, 64
call malloc
mov qword [rax+8], f4761
mov rcx, [read_tokenret]
mov qword [rax+16], rcx
mov rcx, [read_tokenl]
mov qword [rax+24], rcx
mov rcx, [read_tokenr]
mov qword [rax+32], rcx
mov rcx, [read_tokenf2261]
mov qword [rax+40], rcx
mov rcx, [read_tokenf0461]
mov qword [rax+48], rcx
mov rcx, [read_tokenf4561]
mov qword [rax+56], rcx
mov qword [rax], 7
push rax
pop qword [read_tokenf3212]
push qword [read_tokenf3212]
jmp f6312_end
read_tokenf6312: dq 0
f6312_end:
jmp f7312_end
read_tokenf7312: dq 0
f7312_end:
push qword [read_tokenl]
pop qword [read_tokenf7312]
push qword [read_tokenf7312]
jmp f0412_end
read_tokenf0412: dq 0
f0412_end:
jmp f1412_end
f1412: db `(`
db 0
f1412_end: push f1412
pop qword [read_tokenf0412]
push qword [read_tokenf0412]
call matches
push rax
pop qword [read_tokenf6312]
push qword [read_tokenf6312]
call if
push rax
pop qword [read_tokenf0761]
jmp f2412_end
read_tokenf2412: dq 0
f2412_end:
jmp f0171_end
f0171ret: dq 0
f0171l: dq 0
f0171r: dq 0
f0171f2261: dq 0
f0171f0461: dq 0
f0171f4561: dq 0
f0171f0761: dq 0
f0171break: dq 0
f0171:
pop qword [f0171ret]
pop qword [f0171l]
pop qword [f0171r]
pop qword [f0171f2261]
pop qword [f0171f0461]
pop qword [f0171f4561]
pop qword [f0171f0761]
pop qword [f0171break]
jmp f3412_end
f0171f3412: dq 0
f3412_end:
jmp f4412_end
f0171f4412: dq 0
f4412_end:
push 1
pop qword [f0171f4412]
push qword [f0171f4412]
jmp f5412_end
f0171f5412: dq 0
f5412_end:
push qword [f0171l]
pop qword [f0171f5412]
push qword [f0171f5412]
call add
push rax
pop qword [f0171f3412]
push qword [f0171f3412]
jmp f6412_end
f0171f6412: dq 0
f6412_end:
push qword [f0171l]
pop qword [f0171f6412]
push qword [f0171f6412]
jmp f7412_end
f0171f7412: dq 0
f7412_end:
push 0
pop qword [f0171f7412]
push qword [f0171f7412]
jmp f0512_end
f0171f0512: dq 0
f0512_end:
push qword [f0171r]
pop qword [f0171f0512]
push qword [f0171f0512]
jmp f1512_end
f0171f1512: dq 0
f1512_end:
jmp f2512_end
f0171f2512: dq 0
f2512_end:
push 1
pop qword [f0171f2512]
push qword [f0171f2512]
jmp f3512_end
f0171f3512: dq 0
f3512_end:
push qword [f0171l]
pop qword [f0171f3512]
push qword [f0171f3512]
call add
push rax
pop qword [f0171f1512]
push qword [f0171f1512]
jmp f4512_end
f0171f4512: dq 0
f4512_end:
push qword [f0171ret]
pop qword [f0171f4512]
push qword [f0171f4512]
jmp return
f0171_end:
mov rdi, 72
call malloc
mov qword [rax+8], f0171
mov rcx, [read_tokenret]
mov qword [rax+16], rcx
mov rcx, [read_tokenl]
mov qword [rax+24], rcx
mov rcx, [read_tokenr]
mov qword [rax+32], rcx
mov rcx, [read_tokenf2261]
mov qword [rax+40], rcx
mov rcx, [read_tokenf0461]
mov qword [rax+48], rcx
mov rcx, [read_tokenf4561]
mov qword [rax+56], rcx
mov rcx, [read_tokenf0761]
mov qword [rax+64], rcx
mov qword [rax], 8
push rax
pop qword [read_tokenf2412]
push qword [read_tokenf2412]
jmp f5512_end
read_tokenf5512: dq 0
f5512_end:
jmp f6512_end
read_tokenf6512: dq 0
f6512_end:
push qword [read_tokenl]
pop qword [read_tokenf6512]
push qword [read_tokenf6512]
jmp f7512_end
read_tokenf7512: dq 0
f7512_end:
jmp f0612_end
f0612: db `)`
db 0
f0612_end: push f0612
pop qword [read_tokenf7512]
push qword [read_tokenf7512]
call matches
push rax
pop qword [read_tokenf5512]
push qword [read_tokenf5512]
call if
push rax
pop qword [read_tokenf4071]
jmp f1612_end
read_tokenf1612: dq 0
f1612_end:
jmp f4271_end
f4271ret: dq 0
f4271l: dq 0
f4271r: dq 0
f4271f2261: dq 0
f4271f0461: dq 0
f4271f4561: dq 0
f4271f0761: dq 0
f4271f4071: dq 0
f4271break: dq 0
f4271:
pop qword [f4271ret]
pop qword [f4271l]
pop qword [f4271r]
pop qword [f4271f2261]
pop qword [f4271f0461]
pop qword [f4271f4561]
pop qword [f4271f0761]
pop qword [f4271f4071]
pop qword [f4271break]
jmp f2612_end
f4271f2612: dq 0
f2612_end:
jmp f3612_end
f4271f3612: dq 0
f3612_end:
push 1
pop qword [f4271f3612]
push qword [f4271f3612]
jmp f4612_end
f4271f4612: dq 0
f4612_end:
push qword [f4271l]
pop qword [f4271f4612]
push qword [f4271f4612]
call add
push rax
pop qword [f4271f2612]
push qword [f4271f2612]
jmp f5612_end
f4271f5612: dq 0
f5612_end:
push qword [f4271l]
pop qword [f4271f5612]
push qword [f4271f5612]
jmp f6612_end
f4271f6612: dq 0
f6612_end:
push 0
pop qword [f4271f6612]
push qword [f4271f6612]
jmp f7612_end
f4271f7612: dq 0
f7612_end:
push qword [f4271r]
pop qword [f4271f7612]
push qword [f4271f7612]
jmp f0712_end
f4271f0712: dq 0
f0712_end:
jmp f1712_end
f4271f1712: dq 0
f1712_end:
push 1
pop qword [f4271f1712]
push qword [f4271f1712]
jmp f2712_end
f4271f2712: dq 0
f2712_end:
push qword [f4271l]
pop qword [f4271f2712]
push qword [f4271f2712]
call add
push rax
pop qword [f4271f0712]
push qword [f4271f0712]
jmp f3712_end
f4271f3712: dq 0
f3712_end:
push qword [f4271ret]
pop qword [f4271f3712]
push qword [f4271f3712]
jmp return
f4271_end:
mov rdi, 80
call malloc
mov qword [rax+8], f4271
mov rcx, [read_tokenret]
mov qword [rax+16], rcx
mov rcx, [read_tokenl]
mov qword [rax+24], rcx
mov rcx, [read_tokenr]
mov qword [rax+32], rcx
mov rcx, [read_tokenf2261]
mov qword [rax+40], rcx
mov rcx, [read_tokenf0461]
mov qword [rax+48], rcx
mov rcx, [read_tokenf4561]
mov qword [rax+56], rcx
mov rcx, [read_tokenf0761]
mov qword [rax+64], rcx
mov rcx, [read_tokenf4071]
mov qword [rax+72], rcx
mov qword [rax], 9
push rax
pop qword [read_tokenf1612]
push qword [read_tokenf1612]
jmp f4712_end
read_tokenf4712: dq 0
f4712_end:
jmp f5712_end
read_tokenf5712: dq 0
f5712_end:
push qword [read_tokenl]
pop qword [read_tokenf5712]
push qword [read_tokenf5712]
jmp f6712_end
read_tokenf6712: dq 0
f6712_end:
jmp f7712_end
f7712: db `{`
db 0
f7712_end: push f7712
pop qword [read_tokenf6712]
push qword [read_tokenf6712]
call matches
push rax
pop qword [read_tokenf4712]
push qword [read_tokenf4712]
call if
push rax
pop qword [read_tokenf0271]
jmp f0022_end
read_tokenf0022: dq 0
f0022_end:
jmp f0471_end
f0471ret: dq 0
f0471l: dq 0
f0471r: dq 0
f0471f2261: dq 0
f0471f0461: dq 0
f0471f4561: dq 0
f0471f0761: dq 0
f0471f4071: dq 0
f0471f0271: dq 0
f0471break: dq 0
f0471:
pop qword [f0471ret]
pop qword [f0471l]
pop qword [f0471r]
pop qword [f0471f2261]
pop qword [f0471f0461]
pop qword [f0471f4561]
pop qword [f0471f0761]
pop qword [f0471f4071]
pop qword [f0471f0271]
pop qword [f0471break]
jmp f1022_end
f0471f1022: dq 0
f1022_end:
jmp f2022_end
f0471f2022: dq 0
f2022_end:
push 1
pop qword [f0471f2022]
push qword [f0471f2022]
jmp f3022_end
f0471f3022: dq 0
f3022_end:
push qword [f0471l]
pop qword [f0471f3022]
push qword [f0471f3022]
call add
push rax
pop qword [f0471f1022]
push qword [f0471f1022]
jmp f4022_end
f0471f4022: dq 0
f4022_end:
push qword [f0471l]
pop qword [f0471f4022]
push qword [f0471f4022]
jmp f5022_end
f0471f5022: dq 0
f5022_end:
push 0
pop qword [f0471f5022]
push qword [f0471f5022]
jmp f6022_end
f0471f6022: dq 0
f6022_end:
push qword [f0471r]
pop qword [f0471f6022]
push qword [f0471f6022]
jmp f7022_end
f0471f7022: dq 0
f7022_end:
jmp f0122_end
f0471f0122: dq 0
f0122_end:
push 1
pop qword [f0471f0122]
push qword [f0471f0122]
jmp f1122_end
f0471f1122: dq 0
f1122_end:
push qword [f0471l]
pop qword [f0471f1122]
push qword [f0471f1122]
call add
push rax
pop qword [f0471f7022]
push qword [f0471f7022]
jmp f2122_end
f0471f2122: dq 0
f2122_end:
push qword [f0471ret]
pop qword [f0471f2122]
push qword [f0471f2122]
jmp return
f0471_end:
mov rdi, 88
call malloc
mov qword [rax+8], f0471
mov rcx, [read_tokenret]
mov qword [rax+16], rcx
mov rcx, [read_tokenl]
mov qword [rax+24], rcx
mov rcx, [read_tokenr]
mov qword [rax+32], rcx
mov rcx, [read_tokenf2261]
mov qword [rax+40], rcx
mov rcx, [read_tokenf0461]
mov qword [rax+48], rcx
mov rcx, [read_tokenf4561]
mov qword [rax+56], rcx
mov rcx, [read_tokenf0761]
mov qword [rax+64], rcx
mov rcx, [read_tokenf4071]
mov qword [rax+72], rcx
mov rcx, [read_tokenf0271]
mov qword [rax+80], rcx
mov qword [rax], 10
push rax
pop qword [read_tokenf0022]
push qword [read_tokenf0022]
jmp f3122_end
read_tokenf3122: dq 0
f3122_end:
jmp f4122_end
read_tokenf4122: dq 0
f4122_end:
push qword [read_tokenl]
pop qword [read_tokenf4122]
push qword [read_tokenf4122]
jmp f5122_end
read_tokenf5122: dq 0
f5122_end:
jmp f6122_end
f6122: db `}`
db 0
f6122_end: push f6122
pop qword [read_tokenf5122]
push qword [read_tokenf5122]
call matches
push rax
pop qword [read_tokenf3122]
push qword [read_tokenf3122]
call if
push rax
pop qword [read_tokenf4371]
jmp f7122_end
read_tokenf7122: dq 0
f7122_end:
jmp f4571_end
f4571ret: dq 0
f4571l: dq 0
f4571r: dq 0
f4571f2261: dq 0
f4571f0461: dq 0
f4571f4561: dq 0
f4571f0761: dq 0
f4571f4071: dq 0
f4571f0271: dq 0
f4571f4371: dq 0
f4571break: dq 0
f4571:
pop qword [f4571ret]
pop qword [f4571l]
pop qword [f4571r]
pop qword [f4571f2261]
pop qword [f4571f0461]
pop qword [f4571f4561]
pop qword [f4571f0761]
pop qword [f4571f4071]
pop qword [f4571f0271]
pop qword [f4571f4371]
pop qword [f4571break]
jmp f0222_end
f4571f0222: dq 0
f0222_end:
jmp f1222_end
f4571f1222: dq 0
f1222_end:
push 1
pop qword [f4571f1222]
push qword [f4571f1222]
jmp f2222_end
f4571f2222: dq 0
f2222_end:
push qword [f4571l]
pop qword [f4571f2222]
push qword [f4571f2222]
call add
push rax
pop qword [f4571f0222]
push qword [f4571f0222]
jmp f3222_end
f4571f3222: dq 0
f3222_end:
push qword [f4571l]
pop qword [f4571f3222]
push qword [f4571f3222]
jmp f4222_end
f4571f4222: dq 0
f4222_end:
push 0
pop qword [f4571f4222]
push qword [f4571f4222]
jmp f5222_end
f4571f5222: dq 0
f5222_end:
push qword [f4571r]
pop qword [f4571f5222]
push qword [f4571f5222]
jmp f6222_end
f4571f6222: dq 0
f6222_end:
jmp f7222_end
f4571f7222: dq 0
f7222_end:
push 1
pop qword [f4571f7222]
push qword [f4571f7222]
jmp f0322_end
f4571f0322: dq 0
f0322_end:
push qword [f4571l]
pop qword [f4571f0322]
push qword [f4571f0322]
call add
push rax
pop qword [f4571f6222]
push qword [f4571f6222]
jmp f1322_end
f4571f1322: dq 0
f1322_end:
push qword [f4571ret]
pop qword [f4571f1322]
push qword [f4571f1322]
jmp return
f4571_end:
mov rdi, 96
call malloc
mov qword [rax+8], f4571
mov rcx, [read_tokenret]
mov qword [rax+16], rcx
mov rcx, [read_tokenl]
mov qword [rax+24], rcx
mov rcx, [read_tokenr]
mov qword [rax+32], rcx
mov rcx, [read_tokenf2261]
mov qword [rax+40], rcx
mov rcx, [read_tokenf0461]
mov qword [rax+48], rcx
mov rcx, [read_tokenf4561]
mov qword [rax+56], rcx
mov rcx, [read_tokenf0761]
mov qword [rax+64], rcx
mov rcx, [read_tokenf4071]
mov qword [rax+72], rcx
mov rcx, [read_tokenf0271]
mov qword [rax+80], rcx
mov rcx, [read_tokenf4371]
mov qword [rax+88], rcx
mov qword [rax], 11
push rax
pop qword [read_tokenf7122]
push qword [read_tokenf7122]
jmp f2322_end
read_tokenf2322: dq 0
f2322_end:
jmp f3322_end
read_tokenf3322: dq 0
f3322_end:
push qword [read_tokenl]
pop qword [read_tokenf3322]
push qword [read_tokenf3322]
jmp f4322_end
read_tokenf4322: dq 0
f4322_end:
jmp f5322_end
f5322: db `=`
db 0
f5322_end: push f5322
pop qword [read_tokenf4322]
push qword [read_tokenf4322]
call matches
push rax
pop qword [read_tokenf2322]
push qword [read_tokenf2322]
call if
push rax
pop qword [read_tokenf0571]
jmp f6322_end
read_tokenf6322: dq 0
f6322_end:
jmp f0771_end
f0771ret: dq 0
f0771l: dq 0
f0771r: dq 0
f0771f2261: dq 0
f0771f0461: dq 0
f0771f4561: dq 0
f0771f0761: dq 0
f0771f4071: dq 0
f0771f0271: dq 0
f0771f4371: dq 0
f0771f0571: dq 0
f0771break: dq 0
f0771:
pop qword [f0771ret]
pop qword [f0771l]
pop qword [f0771r]
pop qword [f0771f2261]
pop qword [f0771f0461]
pop qword [f0771f4561]
pop qword [f0771f0761]
pop qword [f0771f4071]
pop qword [f0771f0271]
pop qword [f0771f4371]
pop qword [f0771f0571]
pop qword [f0771break]
jmp f7322_end
f0771f7322: dq 0
f7322_end:
jmp f0422_end
f0771f0422: dq 0
f0422_end:
push 1
pop qword [f0771f0422]
push qword [f0771f0422]
jmp f1422_end
f0771f1422: dq 0
f1422_end:
push qword [f0771l]
pop qword [f0771f1422]
push qword [f0771f1422]
call add
push rax
pop qword [f0771f7322]
push qword [f0771f7322]
jmp f2422_end
f0771f2422: dq 0
f2422_end:
push qword [f0771l]
pop qword [f0771f2422]
push qword [f0771f2422]
jmp f3422_end
f0771f3422: dq 0
f3422_end:
push 0
pop qword [f0771f3422]
push qword [f0771f3422]
jmp f4422_end
f0771f4422: dq 0
f4422_end:
push qword [f0771r]
pop qword [f0771f4422]
push qword [f0771f4422]
jmp f5422_end
f0771f5422: dq 0
f5422_end:
jmp f6422_end
f0771f6422: dq 0
f6422_end:
push 1
pop qword [f0771f6422]
push qword [f0771f6422]
jmp f7422_end
f0771f7422: dq 0
f7422_end:
push qword [f0771l]
pop qword [f0771f7422]
push qword [f0771f7422]
call add
push rax
pop qword [f0771f5422]
push qword [f0771f5422]
jmp f0522_end
f0771f0522: dq 0
f0522_end:
push qword [f0771ret]
pop qword [f0771f0522]
push qword [f0771f0522]
jmp return
f0771_end:
mov rdi, 104
call malloc
mov qword [rax+8], f0771
mov rcx, [read_tokenret]
mov qword [rax+16], rcx
mov rcx, [read_tokenl]
mov qword [rax+24], rcx
mov rcx, [read_tokenr]
mov qword [rax+32], rcx
mov rcx, [read_tokenf2261]
mov qword [rax+40], rcx
mov rcx, [read_tokenf0461]
mov qword [rax+48], rcx
mov rcx, [read_tokenf4561]
mov qword [rax+56], rcx
mov rcx, [read_tokenf0761]
mov qword [rax+64], rcx
mov rcx, [read_tokenf4071]
mov qword [rax+72], rcx
mov rcx, [read_tokenf0271]
mov qword [rax+80], rcx
mov rcx, [read_tokenf4371]
mov qword [rax+88], rcx
mov rcx, [read_tokenf0571]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [read_tokenf6322]
push qword [read_tokenf6322]
jmp f1522_end
read_tokenf1522: dq 0
f1522_end:
jmp f2522_end
read_tokenf2522: dq 0
f2522_end:
push qword [read_tokenl]
pop qword [read_tokenf2522]
push qword [read_tokenf2522]
jmp f3522_end
read_tokenf3522: dq 0
f3522_end:
jmp f4522_end
f4522: db `;`
db 0
f4522_end: push f4522
pop qword [read_tokenf3522]
push qword [read_tokenf3522]
call matches
push rax
pop qword [read_tokenf1522]
push qword [read_tokenf1522]
call if
push rax
pop qword [read_tokenf4671]
jmp f5522_end
read_tokenf5522: dq 0
f5522_end:
jmp f4002_end
f4002ret: dq 0
f4002l: dq 0
f4002r: dq 0
f4002f2261: dq 0
f4002f0461: dq 0
f4002f4561: dq 0
f4002f0761: dq 0
f4002f4071: dq 0
f4002f0271: dq 0
f4002f4371: dq 0
f4002f0571: dq 0
f4002f4671: dq 0
f4002break: dq 0
f4002:
pop qword [f4002ret]
pop qword [f4002l]
pop qword [f4002r]
pop qword [f4002f2261]
pop qword [f4002f0461]
pop qword [f4002f4561]
pop qword [f4002f0761]
pop qword [f4002f4071]
pop qword [f4002f0271]
pop qword [f4002f4371]
pop qword [f4002f0571]
pop qword [f4002f4671]
pop qword [f4002break]
jmp f6522_end
f4002f6522: dq 0
f6522_end:
jmp f7522_end
f4002f7522: dq 0
f7522_end:
push 1
pop qword [f4002f7522]
push qword [f4002f7522]
jmp f0622_end
f4002f0622: dq 0
f0622_end:
push qword [f4002l]
pop qword [f4002f0622]
push qword [f4002f0622]
call add
push rax
pop qword [f4002f6522]
push qword [f4002f6522]
jmp f1622_end
f4002f1622: dq 0
f1622_end:
push qword [f4002l]
pop qword [f4002f1622]
push qword [f4002f1622]
jmp f2622_end
f4002f2622: dq 0
f2622_end:
push 0
pop qword [f4002f2622]
push qword [f4002f2622]
jmp f3622_end
f4002f3622: dq 0
f3622_end:
push qword [f4002r]
pop qword [f4002f3622]
push qword [f4002f3622]
jmp f4622_end
f4002f4622: dq 0
f4622_end:
jmp f5622_end
f4002f5622: dq 0
f5622_end:
push 1
pop qword [f4002f5622]
push qword [f4002f5622]
jmp f6622_end
f4002f6622: dq 0
f6622_end:
push qword [f4002l]
pop qword [f4002f6622]
push qword [f4002f6622]
call add
push rax
pop qword [f4002f4622]
push qword [f4002f4622]
jmp f7622_end
f4002f7622: dq 0
f7622_end:
push qword [f4002ret]
pop qword [f4002f7622]
push qword [f4002f7622]
jmp return
f4002_end:
mov rdi, 112
call malloc
mov qword [rax+8], f4002
mov rcx, [read_tokenret]
mov qword [rax+16], rcx
mov rcx, [read_tokenl]
mov qword [rax+24], rcx
mov rcx, [read_tokenr]
mov qword [rax+32], rcx
mov rcx, [read_tokenf2261]
mov qword [rax+40], rcx
mov rcx, [read_tokenf0461]
mov qword [rax+48], rcx
mov rcx, [read_tokenf4561]
mov qword [rax+56], rcx
mov rcx, [read_tokenf0761]
mov qword [rax+64], rcx
mov rcx, [read_tokenf4071]
mov qword [rax+72], rcx
mov rcx, [read_tokenf0271]
mov qword [rax+80], rcx
mov rcx, [read_tokenf4371]
mov qword [rax+88], rcx
mov rcx, [read_tokenf0571]
mov qword [rax+96], rcx
mov rcx, [read_tokenf4671]
mov qword [rax+104], rcx
mov qword [rax], 13
push rax
pop qword [read_tokenf5522]
push qword [read_tokenf5522]
jmp f0722_end
read_tokenf0722: dq 0
f0722_end:
jmp f1722_end
read_tokenf1722: dq 0
f1722_end:
push qword [read_tokenl]
pop qword [read_tokenf1722]
push qword [read_tokenf1722]
jmp f2722_end
read_tokenf2722: dq 0
f2722_end:
jmp f3722_end
f3722: db `:`
db 0
f3722_end: push f3722
pop qword [read_tokenf2722]
push qword [read_tokenf2722]
call matches
push rax
pop qword [read_tokenf0722]
push qword [read_tokenf0722]
call if
push rax
pop qword [read_tokenf0002]
jmp f4722_end
read_tokenf4722: dq 0
f4722_end:
jmp f0202_end
f0202ret: dq 0
f0202l: dq 0
f0202r: dq 0
f0202f2261: dq 0
f0202f0461: dq 0
f0202f4561: dq 0
f0202f0761: dq 0
f0202f4071: dq 0
f0202f0271: dq 0
f0202f4371: dq 0
f0202f0571: dq 0
f0202f4671: dq 0
f0202f0002: dq 0
f0202break: dq 0
f0202:
pop qword [f0202ret]
pop qword [f0202l]
pop qword [f0202r]
pop qword [f0202f2261]
pop qword [f0202f0461]
pop qword [f0202f4561]
pop qword [f0202f0761]
pop qword [f0202f4071]
pop qword [f0202f0271]
pop qword [f0202f4371]
pop qword [f0202f0571]
pop qword [f0202f4671]
pop qword [f0202f0002]
pop qword [f0202break]
jmp f5722_end
f0202f5722: dq 0
f5722_end:
jmp f6722_end
f0202f6722: dq 0
f6722_end:
push 1
pop qword [f0202f6722]
push qword [f0202f6722]
jmp f7722_end
f0202f7722: dq 0
f7722_end:
push qword [f0202l]
pop qword [f0202f7722]
push qword [f0202f7722]
call add
push rax
pop qword [f0202f5722]
push qword [f0202f5722]
jmp f0032_end
f0202f0032: dq 0
f0032_end:
push qword [f0202l]
pop qword [f0202f0032]
push qword [f0202f0032]
jmp f1032_end
f0202f1032: dq 0
f1032_end:
push 0
pop qword [f0202f1032]
push qword [f0202f1032]
jmp f2032_end
f0202f2032: dq 0
f2032_end:
push qword [f0202r]
pop qword [f0202f2032]
push qword [f0202f2032]
jmp f3032_end
f0202f3032: dq 0
f3032_end:
jmp f4032_end
f0202f4032: dq 0
f4032_end:
push 1
pop qword [f0202f4032]
push qword [f0202f4032]
jmp f5032_end
f0202f5032: dq 0
f5032_end:
push qword [f0202l]
pop qword [f0202f5032]
push qword [f0202f5032]
call add
push rax
pop qword [f0202f3032]
push qword [f0202f3032]
jmp f6032_end
f0202f6032: dq 0
f6032_end:
push qword [f0202ret]
pop qword [f0202f6032]
push qword [f0202f6032]
jmp return
f0202_end:
mov rdi, 120
call malloc
mov qword [rax+8], f0202
mov rcx, [read_tokenret]
mov qword [rax+16], rcx
mov rcx, [read_tokenl]
mov qword [rax+24], rcx
mov rcx, [read_tokenr]
mov qword [rax+32], rcx
mov rcx, [read_tokenf2261]
mov qword [rax+40], rcx
mov rcx, [read_tokenf0461]
mov qword [rax+48], rcx
mov rcx, [read_tokenf4561]
mov qword [rax+56], rcx
mov rcx, [read_tokenf0761]
mov qword [rax+64], rcx
mov rcx, [read_tokenf4071]
mov qword [rax+72], rcx
mov rcx, [read_tokenf0271]
mov qword [rax+80], rcx
mov rcx, [read_tokenf4371]
mov qword [rax+88], rcx
mov rcx, [read_tokenf0571]
mov qword [rax+96], rcx
mov rcx, [read_tokenf4671]
mov qword [rax+104], rcx
mov rcx, [read_tokenf0002]
mov qword [rax+112], rcx
mov qword [rax], 14
push rax
pop qword [read_tokenf4722]
push qword [read_tokenf4722]
jmp f7032_end
read_tokenf7032: dq 0
f7032_end:
jmp f0132_end
read_tokenf0132: dq 0
f0132_end:
push qword [read_tokenl]
pop qword [read_tokenf0132]
push qword [read_tokenf0132]
jmp f1132_end
read_tokenf1132: dq 0
f1132_end:
jmp f2132_end
f2132: db `,`
db 0
f2132_end: push f2132
pop qword [read_tokenf1132]
push qword [read_tokenf1132]
call matches
push rax
pop qword [read_tokenf7032]
push qword [read_tokenf7032]
call if
push rax
pop qword [read_tokenf4102]
jmp f3132_end
read_tokenf3132: dq 0
f3132_end:
push qword [read_tokenr]
pop qword [read_tokenf3132]
push qword [read_tokenf3132]
jmp f4132_end
read_tokenf4132: dq 0
f4132_end:
push qword [read_tokenl]
pop qword [read_tokenf4132]
push qword [read_tokenf4132]
call read_identifier
push rax
pop qword [read_tokenl]
pop qword [read_tokenr]
pop qword [read_tokenil]
pop qword [read_tokenir]
jmp f5132_end
read_tokenf5132: dq 0
f5132_end:
jmp f6302_end
f6302ret: dq 0
f6302f2261: dq 0
f6302f0461: dq 0
f6302f4561: dq 0
f6302f0761: dq 0
f6302f4071: dq 0
f6302f0271: dq 0
f6302f4371: dq 0
f6302f0571: dq 0
f6302f4671: dq 0
f6302f0002: dq 0
f6302f4102: dq 0
f6302l: dq 0
f6302r: dq 0
f6302il: dq 0
f6302ir: dq 0
f6302break: dq 0
f6302:
pop qword [f6302ret]
pop qword [f6302f2261]
pop qword [f6302f0461]
pop qword [f6302f4561]
pop qword [f6302f0761]
pop qword [f6302f4071]
pop qword [f6302f0271]
pop qword [f6302f4371]
pop qword [f6302f0571]
pop qword [f6302f4671]
pop qword [f6302f0002]
pop qword [f6302f4102]
pop qword [f6302l]
pop qword [f6302r]
pop qword [f6302il]
pop qword [f6302ir]
pop qword [f6302break]
jmp f6132_end
f6302f6132: dq 0
f6132_end:
push qword [f6302ir]
pop qword [f6302f6132]
push qword [f6302f6132]
jmp f7132_end
f6302f7132: dq 0
f7132_end:
push qword [f6302il]
pop qword [f6302f7132]
push qword [f6302f7132]
jmp f0232_end
f6302f0232: dq 0
f0232_end:
push qword [token_id]
pop qword [f6302f0232]
push qword [f6302f0232]
jmp f1232_end
f6302f1232: dq 0
f1232_end:
push qword [f6302r]
pop qword [f6302f1232]
push qword [f6302f1232]
jmp f2232_end
f6302f2232: dq 0
f2232_end:
push qword [f6302l]
pop qword [f6302f2232]
push qword [f6302f2232]
jmp f3232_end
f6302f3232: dq 0
f3232_end:
push qword [f6302ret]
pop qword [f6302f3232]
push qword [f6302f3232]
jmp return
f6302_end:
mov rdi, 144
call malloc
mov qword [rax+8], f6302
mov rcx, [read_tokenret]
mov qword [rax+16], rcx
mov rcx, [read_tokenf2261]
mov qword [rax+24], rcx
mov rcx, [read_tokenf0461]
mov qword [rax+32], rcx
mov rcx, [read_tokenf4561]
mov qword [rax+40], rcx
mov rcx, [read_tokenf0761]
mov qword [rax+48], rcx
mov rcx, [read_tokenf4071]
mov qword [rax+56], rcx
mov rcx, [read_tokenf0271]
mov qword [rax+64], rcx
mov rcx, [read_tokenf4371]
mov qword [rax+72], rcx
mov rcx, [read_tokenf0571]
mov qword [rax+80], rcx
mov rcx, [read_tokenf4671]
mov qword [rax+88], rcx
mov rcx, [read_tokenf0002]
mov qword [rax+96], rcx
mov rcx, [read_tokenf4102]
mov qword [rax+104], rcx
mov rcx, [read_tokenl]
mov qword [rax+112], rcx
mov rcx, [read_tokenr]
mov qword [rax+120], rcx
mov rcx, [read_tokenil]
mov qword [rax+128], rcx
mov rcx, [read_tokenir]
mov qword [rax+136], rcx
mov qword [rax], 17
push rax
pop qword [read_tokenf5132]
push qword [read_tokenf5132]
jmp f4232_end
read_tokenf4232: dq 0
f4232_end:
jmp f5232_end
read_tokenf5232: dq 0
f5232_end:
push qword [read_tokenir]
pop qword [read_tokenf5232]
push qword [read_tokenf5232]
jmp f6232_end
read_tokenf6232: dq 0
f6232_end:
push qword [read_tokenil]
pop qword [read_tokenf6232]
push qword [read_tokenf6232]
call ne
push rax
pop qword [read_tokenf4232]
push qword [read_tokenf4232]
call if
push rax
pop qword [read_tokenf2302]
jmp f7232_end
read_tokenf7232: dq 0
f7232_end:
push qword [read_tokenl]
pop qword [read_tokenf7232]
push qword [read_tokenf7232]
jmp error
read_token_end:
jmp make_tokenizer_end
make_tokenizerl: dq 0
make_tokenizerr: dq 0
make_tokenizerf6332: dq 0
make_tokenizer:
pop rax
pop qword [make_tokenizerl]
pop qword [make_tokenizerr]
push rax
mov [make_tokenizerf6332], rsp
mov rsp, [make_tokenizerf6332]
jmp f7332_end
make_tokenizerf7332: dq 0
f7332_end:
jmp f1332_end
f1332l: dq 0
f1332r: dq 0
f1332f6332: dq 0
f1332t: dq 0
f1332tl: dq 0
f1332tr: dq 0
f1332f0432: dq 0
f1332:
pop rax
pop qword [f1332l]
pop qword [f1332r]
pop qword [f1332f6332]
push rax
mov [f1332f0432], rsp
push qword [f1332f6332]
push qword [f1332f0432]
jmp f1432_end
f1332f1432: dq 0
f1432_end:
push qword [f1332r]
pop qword [f1332f1432]
push qword [f1332f1432]
jmp f2432_end
f1332f2432: dq 0
f2432_end:
push qword [f1332l]
pop qword [f1332f2432]
push qword [f1332f2432]
call read_token
push rax
pop qword [f1332l]
pop qword [f1332r]
pop qword [f1332t]
pop qword [f1332tl]
pop qword [f1332tr]
pop qword [f1332f0432]
pop qword [f1332f6332]
mov rsp, [f1332f0432]
jmp f3432_end
f1332f3432: dq 0
f3432_end:
push qword [f1332f6332]
push qword [f1332f0432]
push qword [f1332l]
push qword [f1332r]
push qword [f1332t]
push qword [f1332tl]
push qword [f1332tr]
jmp f4432_end
f1332f4432: dq 0
f4432_end:
push qword [f1332r]
pop qword [f1332f4432]
push qword [f1332f4432]
jmp f5432_end
f1332f5432: dq 0
f5432_end:
push qword [f1332l]
pop qword [f1332f5432]
push qword [f1332f5432]
call make_tokenizer
push rax
pop qword [f1332f3432]
pop qword [f1332tr]
pop qword [f1332tl]
pop qword [f1332t]
pop qword [f1332r]
pop qword [f1332l]
pop qword [f1332f0432]
pop qword [f1332f6332]
pop rax
push qword [f1332f3432]
push rax
jmp f6432_end
f1332f6432: dq 0
f6432_end:
jmp f2332_end
f2332f6332: dq 0
f2332f0432: dq 0
f2332l: dq 0
f2332r: dq 0
f2332t: dq 0
f2332tl: dq 0
f2332tr: dq 0
f2332f7432: dq 0
f2332:
pop rax
pop qword [f2332f6332]
pop qword [f2332f0432]
pop qword [f2332l]
pop qword [f2332r]
pop qword [f2332t]
pop qword [f2332tl]
pop qword [f2332tr]
push rax
mov [f2332f7432], rsp
mov rsp, [f2332f7432]
jmp f0532_end
f2332f0532: dq 0
f0532_end:
push qword [f2332tr]
pop qword [f2332f0532]
pop rax
push qword [f2332f0532]
push rax
jmp f1532_end
f2332f1532: dq 0
f1532_end:
push qword [f2332tl]
pop qword [f2332f1532]
pop rax
push qword [f2332f1532]
push rax
jmp f2532_end
f2332f2532: dq 0
f2532_end:
push qword [f2332t]
pop qword [f2332f2532]
pop rax
push qword [f2332f2532]
push rax
pop rcx
pop rax
jmp rcx
ret
f2332_end:
mov rdi, 72
call malloc
mov qword [rax+8], f2332
mov rcx, [f1332f6332]
mov qword [rax+16], rcx
mov rcx, [f1332f0432]
mov qword [rax+24], rcx
mov rcx, [f1332l]
mov qword [rax+32], rcx
mov rcx, [f1332r]
mov qword [rax+40], rcx
mov rcx, [f1332t]
mov qword [rax+48], rcx
mov rcx, [f1332tl]
mov qword [rax+56], rcx
mov rcx, [f1332tr]
mov qword [rax+64], rcx
mov qword [rax], 8
push rax
pop qword [f1332f6432]
pop rax
push qword [f1332f6432]
push rax
pop rcx
pop rax
jmp rcx
ret
f1332_end:
mov rdi, 40
call malloc
mov qword [rax+8], f1332
mov rcx, [make_tokenizerl]
mov qword [rax+16], rcx
mov rcx, [make_tokenizerr]
mov qword [rax+24], rcx
mov rcx, [make_tokenizerf6332]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [make_tokenizerf7332]
pop rax
push qword [make_tokenizerf7332]
push rax
pop rcx
pop rax
jmp rcx
ret
make_tokenizer_end:
jmp tokenizer_to_lr_end
tokenizer_to_lrtokenizer: dq 0
tokenizer_to_lrtoken: dq 0
tokenizer_to_lrt: dq 0
tokenizer_to_lrl: dq 0
tokenizer_to_lrr: dq 0
tokenizer_to_lrf5532: dq 0
tokenizer_to_lr:
pop rax
pop qword [tokenizer_to_lrtokenizer]
push rax
mov [tokenizer_to_lrf5532], rsp
push qword [tokenizer_to_lrf5532]
push qword [tokenizer_to_lrtokenizer]
call runtime_call_ret
push rax
pop qword [tokenizer_to_lrtoken]
pop qword [tokenizer_to_lrtokenizer]
pop qword [tokenizer_to_lrf5532]
push qword [tokenizer_to_lrf5532]
push qword [tokenizer_to_lrtoken]
push qword [tokenizer_to_lrtokenizer]
push qword [tokenizer_to_lrtoken]
call runtime_call_ret
push rax
pop qword [tokenizer_to_lrt]
pop qword [tokenizer_to_lrl]
pop qword [tokenizer_to_lrr]
pop qword [tokenizer_to_lrtokenizer]
pop qword [tokenizer_to_lrtoken]
pop qword [tokenizer_to_lrf5532]
mov rsp, [tokenizer_to_lrf5532]
jmp f6532_end
tokenizer_to_lrf6532: dq 0
f6532_end:
push qword [tokenizer_to_lrf5532]
push qword [tokenizer_to_lrtoken]
push qword [tokenizer_to_lrtokenizer]
push qword [tokenizer_to_lrt]
push qword [tokenizer_to_lrl]
push qword [tokenizer_to_lrr]
jmp f7532_end
tokenizer_to_lrf7532: dq 0
f7532_end:
push 100000
pop qword [tokenizer_to_lrf7532]
push qword [tokenizer_to_lrf7532]
jmp f0632_end
tokenizer_to_lrf0632: dq 0
f0632_end:
push qword [tokenizer_to_lrl]
pop qword [tokenizer_to_lrf0632]
push qword [tokenizer_to_lrf0632]
call add
push rax
pop qword [tokenizer_to_lrf6532]
pop qword [tokenizer_to_lrr]
pop qword [tokenizer_to_lrl]
pop qword [tokenizer_to_lrt]
pop qword [tokenizer_to_lrtokenizer]
pop qword [tokenizer_to_lrtoken]
pop qword [tokenizer_to_lrf5532]
pop rax
push qword [tokenizer_to_lrf6532]
push rax
jmp f1632_end
tokenizer_to_lrf1632: dq 0
f1632_end:
push qword [tokenizer_to_lrl]
pop qword [tokenizer_to_lrf1632]
pop rax
push qword [tokenizer_to_lrf1632]
push rax
pop rcx
pop rax
jmp rcx
ret
tokenizer_to_lr_end:
jmp token_type_end
token_typetoken: dq 0
token_typet: dq 0
token_typetl: dq 0
token_typetr: dq 0
token_typef4632: dq 0
token_type:
pop rax
pop qword [token_typetoken]
push rax
mov [token_typef4632], rsp
push qword [token_typetoken]
push qword [token_typef4632]
push qword [token_typetoken]
call runtime_call_ret
push rax
pop qword [token_typet]
pop qword [token_typetl]
pop qword [token_typetr]
pop qword [token_typef4632]
pop qword [token_typetoken]
mov rsp, [token_typef4632]
jmp f5632_end
token_typef5632: dq 0
f5632_end:
push qword [token_typet]
pop qword [token_typef5632]
pop rax
push qword [token_typef5632]
push rax
pop rcx
pop rax
jmp rcx
ret
token_type_end:
jmp read_is_returning_end
read_is_returningorig_tokenizer: dq 0
read_is_returningtoken: dq 0
read_is_returningtokenizer: dq 0
read_is_returningf7632: dq 0
read_is_returningf1042: dq 0
read_is_returning:
pop rax
pop qword [read_is_returningorig_tokenizer]
push rax
mov [read_is_returningf1042], rsp
push qword [read_is_returningorig_tokenizer]
push qword [read_is_returningf1042]
push qword [read_is_returningorig_tokenizer]
call runtime_call_ret
push rax
pop qword [read_is_returningtoken]
pop qword [read_is_returningtokenizer]
pop qword [read_is_returningf1042]
pop qword [read_is_returningorig_tokenizer]
push qword [read_is_returningorig_tokenizer]
push qword [read_is_returningf1042]
push qword [read_is_returningtoken]
push qword [read_is_returningtokenizer]
jmp f2042_end
read_is_returningf2042: dq 0
f2042_end:
jmp f0732_end
f0732orig_tokenizer: dq 0
f0732f1042: dq 0
f0732token: dq 0
f0732tokenizer: dq 0
f0732break: dq 0
f0732:
pop qword [f0732orig_tokenizer]
pop qword [f0732f1042]
pop qword [f0732token]
pop qword [f0732tokenizer]
pop qword [f0732break]
mov rsp, [f0732f1042]
jmp f3042_end
f0732f3042: dq 0
f3042_end:
push qword [f0732tokenizer]
pop qword [f0732f3042]
pop rax
push qword [f0732f3042]
push rax
jmp f4042_end
f0732f4042: dq 0
f4042_end:
jmp f1732_end
f1732orig_tokenizer: dq 0
f1732f1042: dq 0
f1732token: dq 0
f1732tokenizer: dq 0
f1732break: dq 0
f1732a: dq 0
f1732b: dq 0
f1732:
pop qword [f1732orig_tokenizer]
pop qword [f1732f1042]
pop qword [f1732token]
pop qword [f1732tokenizer]
pop qword [f1732break]
pop qword [f1732a]
pop qword [f1732b]
push qword [f1732a]
jmp runtime_call
f1732_end:
mov rdi, 56
call malloc
mov qword [rax+8], f1732
mov rcx, [f0732orig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [f0732f1042]
mov qword [rax+24], rcx
mov rcx, [f0732token]
mov qword [rax+32], rcx
mov rcx, [f0732tokenizer]
mov qword [rax+40], rcx
mov rcx, [f0732break]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [f0732f4042]
pop rax
push qword [f0732f4042]
push rax
pop rcx
pop rax
jmp rcx
f0732_end:
mov rdi, 48
call malloc
mov qword [rax+8], f0732
mov rcx, [read_is_returningorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_is_returningf1042]
mov qword [rax+24], rcx
mov rcx, [read_is_returningtoken]
mov qword [rax+32], rcx
mov rcx, [read_is_returningtokenizer]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [read_is_returningf2042]
push qword [read_is_returningf2042]
jmp f5042_end
read_is_returningf5042: dq 0
f5042_end:
push qword [read_is_returningorig_tokenizer]
push qword [read_is_returningf1042]
push qword [read_is_returningtoken]
push qword [read_is_returningtokenizer]
jmp f6042_end
read_is_returningf6042: dq 0
f6042_end:
push qword [read_is_returningtoken]
pop qword [read_is_returningf6042]
push qword [read_is_returningf6042]
jmp f7042_end
read_is_returningf7042: dq 0
f7042_end:
jmp f0142_end
f0142: db `!`
db 0
f0142_end: push f0142
pop qword [read_is_returningf7042]
push qword [read_is_returningf7042]
call token_matches
push rax
pop qword [read_is_returningf5042]
pop qword [read_is_returningtokenizer]
pop qword [read_is_returningtoken]
pop qword [read_is_returningf1042]
pop qword [read_is_returningorig_tokenizer]
push qword [read_is_returningf5042]
call if
push rax
pop qword [read_is_returningf7632]
pop qword [read_is_returningtokenizer]
pop qword [read_is_returningtoken]
pop qword [read_is_returningf1042]
pop qword [read_is_returningorig_tokenizer]
mov rsp, [read_is_returningf1042]
jmp f1142_end
read_is_returningf1142: dq 0
f1142_end:
push qword [read_is_returningorig_tokenizer]
pop qword [read_is_returningf1142]
pop rax
push qword [read_is_returningf1142]
push rax
jmp f2142_end
read_is_returningf2142: dq 0
f2142_end:
jmp f5732_end
f5732orig_tokenizer: dq 0
f5732f1042: dq 0
f5732token: dq 0
f5732tokenizer: dq 0
f5732f7632: dq 0
f5732a: dq 0
f5732b: dq 0
f5732:
pop qword [f5732orig_tokenizer]
pop qword [f5732f1042]
pop qword [f5732token]
pop qword [f5732tokenizer]
pop qword [f5732f7632]
pop qword [f5732a]
pop qword [f5732b]
push qword [f5732b]
jmp runtime_call
f5732_end:
mov rdi, 56
call malloc
mov qword [rax+8], f5732
mov rcx, [read_is_returningorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_is_returningf1042]
mov qword [rax+24], rcx
mov rcx, [read_is_returningtoken]
mov qword [rax+32], rcx
mov rcx, [read_is_returningtokenizer]
mov qword [rax+40], rcx
mov rcx, [read_is_returningf7632]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [read_is_returningf2142]
pop rax
push qword [read_is_returningf2142]
push rax
pop rcx
pop rax
jmp rcx
ret
read_is_returning_end:
jmp read_id_list_end
read_id_listold_tokenizer: dq 0
read_id_listtoken: dq 0
read_id_listtokenizer: dq 0
read_id_listf4142: dq 0
read_id_listf7142: dq 0
read_id_listf3242: dq 0
read_id_list:
pop rax
pop qword [read_id_listold_tokenizer]
push rax
mov [read_id_listf3242], rsp
push qword [read_id_listold_tokenizer]
push qword [read_id_listf3242]
push qword [read_id_listold_tokenizer]
call runtime_call_ret
push rax
pop qword [read_id_listtoken]
pop qword [read_id_listtokenizer]
pop qword [read_id_listf3242]
pop qword [read_id_listold_tokenizer]
push qword [read_id_listold_tokenizer]
push qword [read_id_listf3242]
push qword [read_id_listtoken]
push qword [read_id_listtokenizer]
jmp f4242_end
read_id_listf4242: dq 0
f4242_end:
jmp f5142_end
f5142old_tokenizer: dq 0
f5142f3242: dq 0
f5142token: dq 0
f5142tokenizer: dq 0
f5142break: dq 0
f5142t: dq 0
f5142tl: dq 0
f5142tr: dq 0
f5142tree: dq 0
f5142:
pop qword [f5142old_tokenizer]
pop qword [f5142f3242]
pop qword [f5142token]
pop qword [f5142tokenizer]
pop qword [f5142break]
push qword [f5142old_tokenizer]
push qword [f5142f3242]
push qword [f5142token]
push qword [f5142tokenizer]
push qword [f5142break]
push qword [f5142token]
call runtime_call_ret
push rax
pop qword [f5142t]
pop qword [f5142tl]
pop qword [f5142tr]
pop qword [f5142break]
pop qword [f5142tokenizer]
pop qword [f5142token]
pop qword [f5142f3242]
pop qword [f5142old_tokenizer]
push qword [f5142old_tokenizer]
push qword [f5142f3242]
push qword [f5142token]
push qword [f5142break]
push qword [f5142t]
push qword [f5142tl]
push qword [f5142tr]
jmp f5242_end
f5142f5242: dq 0
f5242_end:
push qword [f5142tokenizer]
pop qword [f5142f5242]
push qword [f5142f5242]
call read_id_list
push rax
pop qword [f5142tree]
pop qword [f5142tokenizer]
pop qword [f5142tr]
pop qword [f5142tl]
pop qword [f5142t]
pop qword [f5142break]
pop qword [f5142token]
pop qword [f5142f3242]
pop qword [f5142old_tokenizer]
mov rsp, [f5142f3242]
jmp f6242_end
f5142f6242: dq 0
f6242_end:
push qword [f5142tokenizer]
pop qword [f5142f6242]
pop rax
push qword [f5142f6242]
push rax
jmp f7242_end
f5142f7242: dq 0
f7242_end:
push qword [f5142old_tokenizer]
push qword [f5142f3242]
push qword [f5142token]
push qword [f5142break]
push qword [f5142t]
push qword [f5142tl]
push qword [f5142tr]
push qword [f5142tree]
push qword [f5142tokenizer]
jmp f0342_end
f5142f0342: dq 0
f0342_end:
push qword [f5142tree]
pop qword [f5142f0342]
push qword [f5142f0342]
jmp f1342_end
f5142f1342: dq 0
f1342_end:
push qword [f5142old_tokenizer]
push qword [f5142f3242]
push qword [f5142token]
push qword [f5142break]
push qword [f5142t]
push qword [f5142tl]
push qword [f5142tr]
push qword [f5142tree]
push qword [f5142tokenizer]
jmp f2342_end
f5142f2342: dq 0
f2342_end:
push qword [f5142tr]
pop qword [f5142f2342]
push qword [f5142f2342]
jmp f3342_end
f5142f3342: dq 0
f3342_end:
push qword [f5142tl]
pop qword [f5142f3342]
push qword [f5142f3342]
call make_leaf
push rax
pop qword [f5142f1342]
pop qword [f5142tokenizer]
pop qword [f5142tree]
pop qword [f5142tr]
pop qword [f5142tl]
pop qword [f5142t]
pop qword [f5142break]
pop qword [f5142token]
pop qword [f5142f3242]
pop qword [f5142old_tokenizer]
push qword [f5142f1342]
call make_internal
push rax
pop qword [f5142f7242]
pop qword [f5142tokenizer]
pop qword [f5142tree]
pop qword [f5142tr]
pop qword [f5142tl]
pop qword [f5142t]
pop qword [f5142break]
pop qword [f5142token]
pop qword [f5142f3242]
pop qword [f5142old_tokenizer]
pop rax
push qword [f5142f7242]
push rax
pop rcx
pop rax
jmp rcx
f5142_end:
mov rdi, 48
call malloc
mov qword [rax+8], f5142
mov rcx, [read_id_listold_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_id_listf3242]
mov qword [rax+24], rcx
mov rcx, [read_id_listtoken]
mov qword [rax+32], rcx
mov rcx, [read_id_listtokenizer]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [read_id_listf4242]
push qword [read_id_listf4242]
jmp f4342_end
read_id_listf4342: dq 0
f4342_end:
push qword [read_id_listold_tokenizer]
push qword [read_id_listf3242]
push qword [read_id_listtoken]
push qword [read_id_listtokenizer]
jmp f5342_end
read_id_listf5342: dq 0
f5342_end:
push 1
pop qword [read_id_listf5342]
push qword [read_id_listf5342]
jmp f6342_end
read_id_listf6342: dq 0
f6342_end:
push qword [read_id_listold_tokenizer]
push qword [read_id_listf3242]
push qword [read_id_listtoken]
push qword [read_id_listtokenizer]
jmp f7342_end
read_id_listf7342: dq 0
f7342_end:
push qword [read_id_listtoken]
pop qword [read_id_listf7342]
push qword [read_id_listf7342]
call token_type
push rax
pop qword [read_id_listf6342]
pop qword [read_id_listtokenizer]
pop qword [read_id_listtoken]
pop qword [read_id_listf3242]
pop qword [read_id_listold_tokenizer]
push qword [read_id_listf6342]
call eq
push rax
pop qword [read_id_listf4342]
pop qword [read_id_listtokenizer]
pop qword [read_id_listtoken]
pop qword [read_id_listf3242]
pop qword [read_id_listold_tokenizer]
push qword [read_id_listf4342]
call if
push rax
pop qword [read_id_listf4142]
pop qword [read_id_listtokenizer]
pop qword [read_id_listtoken]
pop qword [read_id_listf3242]
pop qword [read_id_listold_tokenizer]
push qword [read_id_listold_tokenizer]
push qword [read_id_listf3242]
push qword [read_id_listtoken]
push qword [read_id_listtokenizer]
push qword [read_id_listf4142]
jmp f0442_end
read_id_listf0442: dq 0
f0442_end:
jmp f0242_end
f0242old_tokenizer: dq 0
f0242f3242: dq 0
f0242token: dq 0
f0242tokenizer: dq 0
f0242f4142: dq 0
f0242break: dq 0
f0242tree: dq 0
f0242:
pop qword [f0242old_tokenizer]
pop qword [f0242f3242]
pop qword [f0242token]
pop qword [f0242tokenizer]
pop qword [f0242f4142]
pop qword [f0242break]
push qword [f0242old_tokenizer]
push qword [f0242f3242]
push qword [f0242token]
push qword [f0242f4142]
push qword [f0242break]
jmp f1442_end
f0242f1442: dq 0
f1442_end:
push qword [f0242tokenizer]
pop qword [f0242f1442]
push qword [f0242f1442]
call read_id_list
push rax
pop qword [f0242tree]
pop qword [f0242tokenizer]
pop qword [f0242break]
pop qword [f0242f4142]
pop qword [f0242token]
pop qword [f0242f3242]
pop qword [f0242old_tokenizer]
mov rsp, [f0242f3242]
jmp f2442_end
f0242f2442: dq 0
f2442_end:
push qword [f0242tokenizer]
pop qword [f0242f2442]
pop rax
push qword [f0242f2442]
push rax
jmp f3442_end
f0242f3442: dq 0
f3442_end:
push qword [f0242tree]
pop qword [f0242f3442]
pop rax
push qword [f0242f3442]
push rax
pop rcx
pop rax
jmp rcx
f0242_end:
mov rdi, 56
call malloc
mov qword [rax+8], f0242
mov rcx, [read_id_listold_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_id_listf3242]
mov qword [rax+24], rcx
mov rcx, [read_id_listtoken]
mov qword [rax+32], rcx
mov rcx, [read_id_listtokenizer]
mov qword [rax+40], rcx
mov rcx, [read_id_listf4142]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [read_id_listf0442]
push qword [read_id_listf0442]
jmp f4442_end
read_id_listf4442: dq 0
f4442_end:
push qword [read_id_listold_tokenizer]
push qword [read_id_listf3242]
push qword [read_id_listtoken]
push qword [read_id_listtokenizer]
push qword [read_id_listf4142]
jmp f5442_end
read_id_listf5442: dq 0
f5442_end:
push qword [read_id_listtoken]
pop qword [read_id_listf5442]
push qword [read_id_listf5442]
jmp f6442_end
read_id_listf6442: dq 0
f6442_end:
jmp f7442_end
f7442: db `,`
db 0
f7442_end: push f7442
pop qword [read_id_listf6442]
push qword [read_id_listf6442]
call token_matches
push rax
pop qword [read_id_listf4442]
pop qword [read_id_listf4142]
pop qword [read_id_listtokenizer]
pop qword [read_id_listtoken]
pop qword [read_id_listf3242]
pop qword [read_id_listold_tokenizer]
push qword [read_id_listf4442]
call if
push rax
pop qword [read_id_listf7142]
pop qword [read_id_listf4142]
pop qword [read_id_listtokenizer]
pop qword [read_id_listtoken]
pop qword [read_id_listf3242]
pop qword [read_id_listold_tokenizer]
mov rsp, [read_id_listf3242]
jmp f0542_end
read_id_listf0542: dq 0
f0542_end:
push qword [read_id_listold_tokenizer]
pop qword [read_id_listf0542]
pop rax
push qword [read_id_listf0542]
push rax
jmp f1542_end
read_id_listf1542: dq 0
f1542_end:
push qword [read_id_listold_tokenizer]
push qword [read_id_listf3242]
push qword [read_id_listtoken]
push qword [read_id_listtokenizer]
push qword [read_id_listf4142]
push qword [read_id_listf7142]
call make_nil
push rax
pop qword [read_id_listf1542]
pop qword [read_id_listf7142]
pop qword [read_id_listf4142]
pop qword [read_id_listtokenizer]
pop qword [read_id_listtoken]
pop qword [read_id_listf3242]
pop qword [read_id_listold_tokenizer]
pop rax
push qword [read_id_listf1542]
push rax
pop rcx
pop rax
jmp rcx
ret
read_id_list_end:
jmp read_function_end
read_functionorig_tokenizer: dq 0
read_functiontoken: dq 0
read_functiontokenizer: dq 0
read_functionf3542: dq 0
read_functionis_returning: dq 0
read_functionfname_l: dq 0
read_functionfname_r: dq 0
read_functionnew_args: dq 0
read_functionf6542: dq 0
read_functionf1642: dq 0
read_functioncexp: dq 0
read_functionf4642: dq 0
read_functionf6742: dq 0
read_function:
pop rax
pop qword [read_functionorig_tokenizer]
push rax
mov [read_functionf6742], rsp
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functionorig_tokenizer]
call runtime_call_ret
push rax
pop qword [read_functiontoken]
pop qword [read_functiontokenizer]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functiontoken]
push qword [read_functiontokenizer]
jmp f7742_end
read_functionf7742: dq 0
f7742_end:
jmp f4542_end
f4542orig_tokenizer: dq 0
f4542f6742: dq 0
f4542token: dq 0
f4542tokenizer: dq 0
f4542break: dq 0
f4542:
pop qword [f4542orig_tokenizer]
pop qword [f4542f6742]
pop qword [f4542token]
pop qword [f4542tokenizer]
pop qword [f4542break]
mov rsp, [f4542f6742]
jmp f0052_end
f4542f0052: dq 0
f0052_end:
push qword [f4542orig_tokenizer]
pop qword [f4542f0052]
pop rax
push qword [f4542f0052]
push rax
jmp f1052_end
f4542f1052: dq 0
f1052_end:
push 0
pop qword [f4542f1052]
pop rax
push qword [f4542f1052]
push rax
pop rcx
pop rax
jmp rcx
f4542_end:
mov rdi, 48
call malloc
mov qword [rax+8], f4542
mov rcx, [read_functionorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_functionf6742]
mov qword [rax+24], rcx
mov rcx, [read_functiontoken]
mov qword [rax+32], rcx
mov rcx, [read_functiontokenizer]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [read_functionf7742]
push qword [read_functionf7742]
jmp f2052_end
read_functionf2052: dq 0
f2052_end:
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functiontoken]
push qword [read_functiontokenizer]
jmp f3052_end
read_functionf3052: dq 0
f3052_end:
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functiontoken]
push qword [read_functiontokenizer]
jmp f4052_end
read_functionf4052: dq 0
f4052_end:
push qword [read_functiontoken]
pop qword [read_functionf4052]
push qword [read_functionf4052]
jmp f5052_end
read_functionf5052: dq 0
f5052_end:
jmp f6052_end
f6052: db `(`
db 0
f6052_end: push f6052
pop qword [read_functionf5052]
push qword [read_functionf5052]
call token_matches
push rax
pop qword [read_functionf3052]
pop qword [read_functiontokenizer]
pop qword [read_functiontoken]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionf3052]
call not
push rax
pop qword [read_functionf2052]
pop qword [read_functiontokenizer]
pop qword [read_functiontoken]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionf2052]
call if
push rax
pop qword [read_functionf3542]
pop qword [read_functiontokenizer]
pop qword [read_functiontoken]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functiontoken]
push qword [read_functionf3542]
jmp f7052_end
read_functionf7052: dq 0
f7052_end:
push qword [read_functiontokenizer]
pop qword [read_functionf7052]
push qword [read_functionf7052]
call read_is_returning
push rax
pop qword [read_functionis_returning]
pop qword [read_functiontokenizer]
pop qword [read_functionf3542]
pop qword [read_functiontoken]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functiontoken]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functiontokenizer]
call gen_label
push rax
pop qword [read_functionfname_l]
pop qword [read_functionfname_r]
pop qword [read_functiontokenizer]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functiontoken]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functiontoken]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functionfname_l]
push qword [read_functionfname_r]
jmp f0152_end
read_functionf0152: dq 0
f0152_end:
push qword [read_functiontokenizer]
pop qword [read_functionf0152]
push qword [read_functionf0152]
call read_id_list
push rax
pop qword [read_functionnew_args]
pop qword [read_functiontokenizer]
pop qword [read_functionfname_r]
pop qword [read_functionfname_l]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functiontoken]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functionfname_l]
push qword [read_functionfname_r]
push qword [read_functionnew_args]
push qword [read_functiontokenizer]
call runtime_call_ret
push rax
pop qword [read_functiontoken]
pop qword [read_functiontokenizer]
pop qword [read_functionnew_args]
pop qword [read_functionfname_r]
pop qword [read_functionfname_l]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functionfname_l]
push qword [read_functionfname_r]
push qword [read_functionnew_args]
push qword [read_functiontoken]
push qword [read_functiontokenizer]
jmp f1152_end
read_functionf1152: dq 0
f1152_end:
jmp f7542_end
f7542orig_tokenizer: dq 0
f7542f6742: dq 0
f7542f3542: dq 0
f7542is_returning: dq 0
f7542fname_l: dq 0
f7542fname_r: dq 0
f7542new_args: dq 0
f7542token: dq 0
f7542tokenizer: dq 0
f7542break: dq 0
f7542:
pop qword [f7542orig_tokenizer]
pop qword [f7542f6742]
pop qword [f7542f3542]
pop qword [f7542is_returning]
pop qword [f7542fname_l]
pop qword [f7542fname_r]
pop qword [f7542new_args]
pop qword [f7542token]
pop qword [f7542tokenizer]
pop qword [f7542break]
mov rsp, [f7542f6742]
jmp f2152_end
f7542f2152: dq 0
f2152_end:
push qword [f7542orig_tokenizer]
pop qword [f7542f2152]
pop rax
push qword [f7542f2152]
push rax
jmp f3152_end
f7542f3152: dq 0
f3152_end:
push 0
pop qword [f7542f3152]
pop rax
push qword [f7542f3152]
push rax
pop rcx
pop rax
jmp rcx
f7542_end:
mov rdi, 88
call malloc
mov qword [rax+8], f7542
mov rcx, [read_functionorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_functionf6742]
mov qword [rax+24], rcx
mov rcx, [read_functionf3542]
mov qword [rax+32], rcx
mov rcx, [read_functionis_returning]
mov qword [rax+40], rcx
mov rcx, [read_functionfname_l]
mov qword [rax+48], rcx
mov rcx, [read_functionfname_r]
mov qword [rax+56], rcx
mov rcx, [read_functionnew_args]
mov qword [rax+64], rcx
mov rcx, [read_functiontoken]
mov qword [rax+72], rcx
mov rcx, [read_functiontokenizer]
mov qword [rax+80], rcx
mov qword [rax], 10
push rax
pop qword [read_functionf1152]
push qword [read_functionf1152]
jmp f4152_end
read_functionf4152: dq 0
f4152_end:
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functionfname_l]
push qword [read_functionfname_r]
push qword [read_functionnew_args]
push qword [read_functiontoken]
push qword [read_functiontokenizer]
jmp f5152_end
read_functionf5152: dq 0
f5152_end:
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functionfname_l]
push qword [read_functionfname_r]
push qword [read_functionnew_args]
push qword [read_functiontoken]
push qword [read_functiontokenizer]
jmp f6152_end
read_functionf6152: dq 0
f6152_end:
push qword [read_functiontoken]
pop qword [read_functionf6152]
push qword [read_functionf6152]
jmp f7152_end
read_functionf7152: dq 0
f7152_end:
jmp f0252_end
f0252: db `)`
db 0
f0252_end: push f0252
pop qword [read_functionf7152]
push qword [read_functionf7152]
call token_matches
push rax
pop qword [read_functionf5152]
pop qword [read_functiontokenizer]
pop qword [read_functiontoken]
pop qword [read_functionnew_args]
pop qword [read_functionfname_r]
pop qword [read_functionfname_l]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionf5152]
call not
push rax
pop qword [read_functionf4152]
pop qword [read_functiontokenizer]
pop qword [read_functiontoken]
pop qword [read_functionnew_args]
pop qword [read_functionfname_r]
pop qword [read_functionfname_l]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionf4152]
call if
push rax
pop qword [read_functionf6542]
pop qword [read_functiontokenizer]
pop qword [read_functiontoken]
pop qword [read_functionnew_args]
pop qword [read_functionfname_r]
pop qword [read_functionfname_l]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functionfname_l]
push qword [read_functionfname_r]
push qword [read_functionnew_args]
push qword [read_functionf6542]
push qword [read_functiontokenizer]
call runtime_call_ret
push rax
pop qword [read_functiontoken]
pop qword [read_functiontokenizer]
pop qword [read_functionf6542]
pop qword [read_functionnew_args]
pop qword [read_functionfname_r]
pop qword [read_functionfname_l]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functionfname_l]
push qword [read_functionfname_r]
push qword [read_functionnew_args]
push qword [read_functionf6542]
push qword [read_functiontoken]
push qword [read_functiontokenizer]
jmp f1252_end
read_functionf1252: dq 0
f1252_end:
jmp f2642_end
f2642orig_tokenizer: dq 0
f2642f6742: dq 0
f2642f3542: dq 0
f2642is_returning: dq 0
f2642fname_l: dq 0
f2642fname_r: dq 0
f2642new_args: dq 0
f2642f6542: dq 0
f2642token: dq 0
f2642tokenizer: dq 0
f2642break: dq 0
f2642:
pop qword [f2642orig_tokenizer]
pop qword [f2642f6742]
pop qword [f2642f3542]
pop qword [f2642is_returning]
pop qword [f2642fname_l]
pop qword [f2642fname_r]
pop qword [f2642new_args]
pop qword [f2642f6542]
pop qword [f2642token]
pop qword [f2642tokenizer]
pop qword [f2642break]
mov rsp, [f2642f6742]
jmp f2252_end
f2642f2252: dq 0
f2252_end:
push qword [f2642orig_tokenizer]
pop qword [f2642f2252]
pop rax
push qword [f2642f2252]
push rax
jmp f3252_end
f2642f3252: dq 0
f3252_end:
push 0
pop qword [f2642f3252]
pop rax
push qword [f2642f3252]
push rax
pop rcx
pop rax
jmp rcx
f2642_end:
mov rdi, 96
call malloc
mov qword [rax+8], f2642
mov rcx, [read_functionorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_functionf6742]
mov qword [rax+24], rcx
mov rcx, [read_functionf3542]
mov qword [rax+32], rcx
mov rcx, [read_functionis_returning]
mov qword [rax+40], rcx
mov rcx, [read_functionfname_l]
mov qword [rax+48], rcx
mov rcx, [read_functionfname_r]
mov qword [rax+56], rcx
mov rcx, [read_functionnew_args]
mov qword [rax+64], rcx
mov rcx, [read_functionf6542]
mov qword [rax+72], rcx
mov rcx, [read_functiontoken]
mov qword [rax+80], rcx
mov rcx, [read_functiontokenizer]
mov qword [rax+88], rcx
mov qword [rax], 11
push rax
pop qword [read_functionf1252]
push qword [read_functionf1252]
jmp f4252_end
read_functionf4252: dq 0
f4252_end:
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functionfname_l]
push qword [read_functionfname_r]
push qword [read_functionnew_args]
push qword [read_functionf6542]
push qword [read_functiontoken]
push qword [read_functiontokenizer]
jmp f5252_end
read_functionf5252: dq 0
f5252_end:
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functionfname_l]
push qword [read_functionfname_r]
push qword [read_functionnew_args]
push qword [read_functionf6542]
push qword [read_functiontoken]
push qword [read_functiontokenizer]
jmp f6252_end
read_functionf6252: dq 0
f6252_end:
push qword [read_functiontoken]
pop qword [read_functionf6252]
push qword [read_functionf6252]
jmp f7252_end
read_functionf7252: dq 0
f7252_end:
jmp f0352_end
f0352: db `{`
db 0
f0352_end: push f0352
pop qword [read_functionf7252]
push qword [read_functionf7252]
call token_matches
push rax
pop qword [read_functionf5252]
pop qword [read_functiontokenizer]
pop qword [read_functiontoken]
pop qword [read_functionf6542]
pop qword [read_functionnew_args]
pop qword [read_functionfname_r]
pop qword [read_functionfname_l]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionf5252]
call not
push rax
pop qword [read_functionf4252]
pop qword [read_functiontokenizer]
pop qword [read_functiontoken]
pop qword [read_functionf6542]
pop qword [read_functionnew_args]
pop qword [read_functionfname_r]
pop qword [read_functionfname_l]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionf4252]
call if
push rax
pop qword [read_functionf1642]
pop qword [read_functiontokenizer]
pop qword [read_functiontoken]
pop qword [read_functionf6542]
pop qword [read_functionnew_args]
pop qword [read_functionfname_r]
pop qword [read_functionfname_l]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functionfname_l]
push qword [read_functionfname_r]
push qword [read_functionnew_args]
push qword [read_functionf6542]
push qword [read_functiontoken]
push qword [read_functionf1642]
jmp f1352_end
read_functionf1352: dq 0
f1352_end:
push qword [read_functiontokenizer]
pop qword [read_functionf1352]
push qword [read_functionf1352]
call read_cexp
push rax
pop qword [read_functioncexp]
pop qword [read_functiontokenizer]
pop qword [read_functionf1642]
pop qword [read_functiontoken]
pop qword [read_functionf6542]
pop qword [read_functionnew_args]
pop qword [read_functionfname_r]
pop qword [read_functionfname_l]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functionfname_l]
push qword [read_functionfname_r]
push qword [read_functionnew_args]
push qword [read_functionf6542]
push qword [read_functionf1642]
push qword [read_functioncexp]
push qword [read_functiontokenizer]
call runtime_call_ret
push rax
pop qword [read_functiontoken]
pop qword [read_functiontokenizer]
pop qword [read_functioncexp]
pop qword [read_functionf1642]
pop qword [read_functionf6542]
pop qword [read_functionnew_args]
pop qword [read_functionfname_r]
pop qword [read_functionfname_l]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
jmp f2352_end
read_functionf2352: dq 0
f2352_end:
jmp f0742_end
f0742orig_tokenizer: dq 0
f0742f6742: dq 0
f0742f3542: dq 0
f0742is_returning: dq 0
f0742fname_l: dq 0
f0742fname_r: dq 0
f0742new_args: dq 0
f0742f6542: dq 0
f0742f1642: dq 0
f0742cexp: dq 0
f0742token: dq 0
f0742tokenizer: dq 0
f0742break: dq 0
f0742:
pop qword [f0742orig_tokenizer]
pop qword [f0742f6742]
pop qword [f0742f3542]
pop qword [f0742is_returning]
pop qword [f0742fname_l]
pop qword [f0742fname_r]
pop qword [f0742new_args]
pop qword [f0742f6542]
pop qword [f0742f1642]
pop qword [f0742cexp]
pop qword [f0742token]
pop qword [f0742tokenizer]
pop qword [f0742break]
mov rsp, [f0742f6742]
jmp f3352_end
f0742f3352: dq 0
f3352_end:
push qword [f0742orig_tokenizer]
pop qword [f0742f3352]
pop rax
push qword [f0742f3352]
push rax
jmp f4352_end
f0742f4352: dq 0
f4352_end:
push 0
pop qword [f0742f4352]
pop rax
push qword [f0742f4352]
push rax
pop rcx
pop rax
jmp rcx
f0742_end:
mov rdi, 112
call malloc
mov qword [rax+8], f0742
mov rcx, [read_functionorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_functionf6742]
mov qword [rax+24], rcx
mov rcx, [read_functionf3542]
mov qword [rax+32], rcx
mov rcx, [read_functionis_returning]
mov qword [rax+40], rcx
mov rcx, [read_functionfname_l]
mov qword [rax+48], rcx
mov rcx, [read_functionfname_r]
mov qword [rax+56], rcx
mov rcx, [read_functionnew_args]
mov qword [rax+64], rcx
mov rcx, [read_functionf6542]
mov qword [rax+72], rcx
mov rcx, [read_functionf1642]
mov qword [rax+80], rcx
mov rcx, [read_functioncexp]
mov qword [rax+88], rcx
mov rcx, [read_functiontoken]
mov qword [rax+96], rcx
mov rcx, [read_functiontokenizer]
mov qword [rax+104], rcx
mov qword [rax], 13
push rax
pop qword [read_functionf2352]
push qword [read_functionf2352]
jmp f5352_end
read_functionf5352: dq 0
f5352_end:
jmp f6352_end
read_functionf6352: dq 0
f6352_end:
push qword [read_functionorig_tokenizer]
push qword [read_functionf6742]
push qword [read_functionf3542]
push qword [read_functionis_returning]
push qword [read_functionfname_l]
push qword [read_functionfname_r]
push qword [read_functionnew_args]
push qword [read_functionf6542]
push qword [read_functionf1642]
push qword [read_functioncexp]
push qword [read_functiontoken]
push qword [read_functiontokenizer]
jmp f7352_end
read_functionf7352: dq 0
f7352_end:
push qword [read_functiontoken]
pop qword [read_functionf7352]
push qword [read_functionf7352]
jmp f0452_end
read_functionf0452: dq 0
f0452_end:
jmp f1452_end
f1452: db `}`
db 0
f1452_end: push f1452
pop qword [read_functionf0452]
push qword [read_functionf0452]
call token_matches
push rax
pop qword [read_functionf6352]
pop qword [read_functiontokenizer]
pop qword [read_functiontoken]
pop qword [read_functioncexp]
pop qword [read_functionf1642]
pop qword [read_functionf6542]
pop qword [read_functionnew_args]
pop qword [read_functionfname_r]
pop qword [read_functionfname_l]
pop qword [read_functionis_returning]
pop qword [read_functionf3542]
pop qword [read_functionf6742]
pop qword [read_functionorig_tokenizer]
push qword [read_functionf6352]
call not
push rax
pop qword [read_functionf5352]
push qword [read_functionf5352]
call if
push rax
pop qword [read_functionf4642]
mov rsp, [read_functionf6742]
jmp f2452_end
read_functionf2452: dq 0
f2452_end:
push qword [read_functiontokenizer]
pop qword [read_functionf2452]
pop rax
push qword [read_functionf2452]
push rax
jmp f3452_end
read_functionf3452: dq 0
f3452_end:
jmp f3742_end
f3742orig_tokenizer: dq 0
f3742f6742: dq 0
f3742f3542: dq 0
f3742is_returning: dq 0
f3742fname_l: dq 0
f3742fname_r: dq 0
f3742new_args: dq 0
f3742f6542: dq 0
f3742f1642: dq 0
f3742cexp: dq 0
f3742token: dq 0
f3742tokenizer: dq 0
f3742f4642: dq 0
f3742f4452: dq 0
f3742:
pop rax
pop qword [f3742orig_tokenizer]
pop qword [f3742f6742]
pop qword [f3742f3542]
pop qword [f3742is_returning]
pop qword [f3742fname_l]
pop qword [f3742fname_r]
pop qword [f3742new_args]
pop qword [f3742f6542]
pop qword [f3742f1642]
pop qword [f3742cexp]
pop qword [f3742token]
pop qword [f3742tokenizer]
pop qword [f3742f4642]
push rax
mov [f3742f4452], rsp
mov rsp, [f3742f4452]
jmp f5452_end
f3742f5452: dq 0
f5452_end:
push qword [f3742cexp]
pop qword [f3742f5452]
pop rax
push qword [f3742f5452]
push rax
jmp f6452_end
f3742f6452: dq 0
f6452_end:
push qword [f3742is_returning]
pop qword [f3742f6452]
pop rax
push qword [f3742f6452]
push rax
jmp f7452_end
f3742f7452: dq 0
f7452_end:
push qword [f3742new_args]
pop qword [f3742f7452]
pop rax
push qword [f3742f7452]
push rax
jmp f0552_end
f3742f0552: dq 0
f0552_end:
push qword [f3742fname_r]
pop qword [f3742f0552]
pop rax
push qword [f3742f0552]
push rax
jmp f1552_end
f3742f1552: dq 0
f1552_end:
push qword [f3742fname_l]
pop qword [f3742f1552]
pop rax
push qword [f3742f1552]
push rax
pop rcx
pop rax
jmp rcx
ret
f3742_end:
mov rdi, 120
call malloc
mov qword [rax+8], f3742
mov rcx, [read_functionorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_functionf6742]
mov qword [rax+24], rcx
mov rcx, [read_functionf3542]
mov qword [rax+32], rcx
mov rcx, [read_functionis_returning]
mov qword [rax+40], rcx
mov rcx, [read_functionfname_l]
mov qword [rax+48], rcx
mov rcx, [read_functionfname_r]
mov qword [rax+56], rcx
mov rcx, [read_functionnew_args]
mov qword [rax+64], rcx
mov rcx, [read_functionf6542]
mov qword [rax+72], rcx
mov rcx, [read_functionf1642]
mov qword [rax+80], rcx
mov rcx, [read_functioncexp]
mov qword [rax+88], rcx
mov rcx, [read_functiontoken]
mov qword [rax+96], rcx
mov rcx, [read_functiontokenizer]
mov qword [rax+104], rcx
mov rcx, [read_functionf4642]
mov qword [rax+112], rcx
mov qword [rax], 14
push rax
pop qword [read_functionf3452]
pop rax
push qword [read_functionf3452]
push rax
pop rcx
pop rax
jmp rcx
ret
read_function_end:
jmp print_function_end
print_functionret: dq 0
print_functionold_context: dq 0
print_functiongl: dq 0
print_functiongr: dq 0
print_functionfunc: dq 0
print_functionfname_l: dq 0
print_functionfname_r: dq 0
print_functionfunc_args: dq 0
print_functionis_returning: dq 0
print_functioncexp: dq 0
print_functionnew_context: dq 0
print_functioncids: dq 0
print_functionf7552: dq 0
print_functionf0652: dq 0
print_functionf4652: dq 0
print_functionf5652: dq 0
print_functionf1752: dq 0
print_functionf7062: dq 0
print_functionf0162: dq 0
print_functionf0262: dq 0
print_function:
pop qword [print_functionret]
pop qword [print_functionold_context]
pop qword [print_functiongl]
pop qword [print_functiongr]
pop qword [print_functionfunc]
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functiongl]
push qword [print_functiongr]
push qword [print_functionfunc]
push qword [print_functionfunc]
call runtime_call_ret
push rax
pop qword [print_functionfname_l]
pop qword [print_functionfname_r]
pop qword [print_functionfunc_args]
pop qword [print_functionis_returning]
pop qword [print_functioncexp]
pop qword [print_functionfunc]
pop qword [print_functiongr]
pop qword [print_functiongl]
pop qword [print_functionold_context]
pop qword [print_functionret]
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functiongl]
push qword [print_functiongr]
push qword [print_functionfunc]
push qword [print_functionfname_l]
push qword [print_functionfname_r]
push qword [print_functionfunc_args]
push qword [print_functionis_returning]
push qword [print_functioncexp]
jmp f3262_end
print_functionf3262: dq 0
f3262_end:
push qword [print_functionfunc_args]
pop qword [print_functionf3262]
push qword [print_functionf3262]
jmp f4262_end
print_functionf4262: dq 0
f4262_end:
push qword [print_functionold_context]
pop qword [print_functionf4262]
push qword [print_functionf4262]
call merge_context
push rax
pop qword [print_functionnew_context]
pop qword [print_functioncexp]
pop qword [print_functionis_returning]
pop qword [print_functionfunc_args]
pop qword [print_functionfname_r]
pop qword [print_functionfname_l]
pop qword [print_functionfunc]
pop qword [print_functiongr]
pop qword [print_functiongl]
pop qword [print_functionold_context]
pop qword [print_functionret]
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functiongl]
push qword [print_functiongr]
push qword [print_functionfunc]
push qword [print_functionfname_l]
push qword [print_functionfname_r]
push qword [print_functionfunc_args]
push qword [print_functionis_returning]
push qword [print_functioncexp]
push qword [print_functionnew_context]
jmp f5262_end
print_functionf5262: dq 0
f5262_end:
push qword [print_functioncexp]
pop qword [print_functionf5262]
push qword [print_functionf5262]
call get_cexp_vars
push rax
pop qword [print_functioncids]
pop qword [print_functionnew_context]
pop qword [print_functioncexp]
pop qword [print_functionis_returning]
pop qword [print_functionfunc_args]
pop qword [print_functionfname_r]
pop qword [print_functionfname_l]
pop qword [print_functionfunc]
pop qword [print_functiongr]
pop qword [print_functiongl]
pop qword [print_functionold_context]
pop qword [print_functionret]
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functiongl]
push qword [print_functiongr]
push qword [print_functionfunc]
push qword [print_functionfname_l]
push qword [print_functionfname_r]
push qword [print_functionfunc_args]
push qword [print_functionis_returning]
push qword [print_functioncexp]
push qword [print_functionnew_context]
jmp f6262_end
print_functionf6262: dq 0
f6262_end:
push qword [print_functionnew_context]
pop qword [print_functionf6262]
push qword [print_functionf6262]
jmp f7262_end
print_functionf7262: dq 0
f7262_end:
push qword [print_functioncids]
pop qword [print_functionf7262]
push qword [print_functionf7262]
call filter_context
push rax
pop qword [print_functioncids]
pop qword [print_functionnew_context]
pop qword [print_functioncexp]
pop qword [print_functionis_returning]
pop qword [print_functionfunc_args]
pop qword [print_functionfname_r]
pop qword [print_functionfname_l]
pop qword [print_functionfunc]
pop qword [print_functiongr]
pop qword [print_functiongl]
pop qword [print_functionold_context]
pop qword [print_functionret]
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functionfunc]
push qword [print_functionfname_l]
push qword [print_functionfname_r]
push qword [print_functionfunc_args]
push qword [print_functionis_returning]
push qword [print_functioncexp]
push qword [print_functionnew_context]
jmp f0362_end
print_functionf0362: dq 0
f0362_end:
jmp f5552_end
f5552ret: dq 0
f5552old_context: dq 0
f5552gl: dq 0
f5552gr: dq 0
f5552func: dq 0
f5552fname_l: dq 0
f5552fname_r: dq 0
f5552func_args: dq 0
f5552is_returning: dq 0
f5552cexp: dq 0
f5552new_context: dq 0
f5552cids: dq 0
f5552f1362: dq 0
f5552:
pop rax
pop qword [f5552ret]
pop qword [f5552old_context]
pop qword [f5552gl]
pop qword [f5552gr]
pop qword [f5552func]
pop qword [f5552fname_l]
pop qword [f5552fname_r]
pop qword [f5552func_args]
pop qword [f5552is_returning]
pop qword [f5552cexp]
pop qword [f5552new_context]
pop qword [f5552cids]
push rax
mov [f5552f1362], rsp
mov rsp, [f5552f1362]
jmp f2362_end
f5552f2362: dq 0
f2362_end:
push qword [f5552cids]
pop qword [f5552f2362]
pop rax
push qword [f5552f2362]
push rax
jmp f3362_end
f5552f3362: dq 0
f3362_end:
push qword [f5552gr]
pop qword [f5552f3362]
pop rax
push qword [f5552f3362]
push rax
jmp f4362_end
f5552f4362: dq 0
f4362_end:
push qword [f5552gl]
pop qword [f5552f4362]
pop rax
push qword [f5552f4362]
push rax
pop rcx
pop rax
jmp rcx
ret
f5552_end:
mov rdi, 112
call malloc
mov qword [rax+8], f5552
mov rcx, [print_functionret]
mov qword [rax+16], rcx
mov rcx, [print_functionold_context]
mov qword [rax+24], rcx
mov rcx, [print_functiongl]
mov qword [rax+32], rcx
mov rcx, [print_functiongr]
mov qword [rax+40], rcx
mov rcx, [print_functionfunc]
mov qword [rax+48], rcx
mov rcx, [print_functionfname_l]
mov qword [rax+56], rcx
mov rcx, [print_functionfname_r]
mov qword [rax+64], rcx
mov rcx, [print_functionfunc_args]
mov qword [rax+72], rcx
mov rcx, [print_functionis_returning]
mov qword [rax+80], rcx
mov rcx, [print_functioncexp]
mov qword [rax+88], rcx
mov rcx, [print_functionnew_context]
mov qword [rax+96], rcx
mov rcx, [print_functioncids]
mov qword [rax+104], rcx
mov qword [rax], 13
push rax
pop qword [print_functionf0362]
push qword [print_functionf0362]
jmp f5362_end
print_functionf5362: dq 0
f5362_end:
jmp f3552_end
f3552ret: dq 0
f3552old_context: dq 0
f3552gl: dq 0
f3552gr: dq 0
f3552func: dq 0
f3552fname_l: dq 0
f3552fname_r: dq 0
f3552func_args: dq 0
f3552is_returning: dq 0
f3552cexp: dq 0
f3552new_context: dq 0
f3552cids: dq 0
f3552f6362: dq 0
f3552:
pop rax
pop qword [f3552ret]
pop qword [f3552old_context]
pop qword [f3552gl]
pop qword [f3552gr]
pop qword [f3552func]
pop qword [f3552fname_l]
pop qword [f3552fname_r]
pop qword [f3552func_args]
pop qword [f3552is_returning]
pop qword [f3552cexp]
pop qword [f3552new_context]
pop qword [f3552cids]
push rax
mov [f3552f6362], rsp
push qword [f3552ret]
push qword [f3552old_context]
push qword [f3552func]
push qword [f3552fname_l]
push qword [f3552fname_r]
push qword [f3552func_args]
push qword [f3552is_returning]
push qword [f3552cexp]
push qword [f3552new_context]
push qword [f3552cids]
push qword [f3552f6362]
call gen_label
push rax
pop qword [f3552gl]
pop qword [f3552gr]
pop qword [f3552f6362]
pop qword [f3552cids]
pop qword [f3552new_context]
pop qword [f3552cexp]
pop qword [f3552is_returning]
pop qword [f3552func_args]
pop qword [f3552fname_r]
pop qword [f3552fname_l]
pop qword [f3552func]
pop qword [f3552old_context]
pop qword [f3552ret]
push qword [f3552ret]
push qword [f3552old_context]
push qword [f3552func]
push qword [f3552fname_l]
push qword [f3552fname_r]
push qword [f3552func_args]
push qword [f3552is_returning]
push qword [f3552cexp]
push qword [f3552new_context]
push qword [f3552f6362]
push qword [f3552gl]
push qword [f3552gr]
jmp f7362_end
f3552f7362: dq 0
f7362_end:
push qword [f3552ret]
push qword [f3552old_context]
push qword [f3552func]
push qword [f3552fname_l]
push qword [f3552fname_r]
push qword [f3552func_args]
push qword [f3552is_returning]
push qword [f3552cexp]
push qword [f3552new_context]
push qword [f3552cids]
push qword [f3552f6362]
push qword [f3552gl]
push qword [f3552gr]
jmp f0462_end
f3552f0462: dq 0
f0462_end:
push qword [f3552gr]
pop qword [f3552f0462]
push qword [f3552f0462]
jmp f1462_end
f3552f1462: dq 0
f1462_end:
push qword [f3552gl]
pop qword [f3552f1462]
push qword [f3552f1462]
call make_leaf
push rax
pop qword [f3552f7362]
pop qword [f3552gr]
pop qword [f3552gl]
pop qword [f3552f6362]
pop qword [f3552cids]
pop qword [f3552new_context]
pop qword [f3552cexp]
pop qword [f3552is_returning]
pop qword [f3552func_args]
pop qword [f3552fname_r]
pop qword [f3552fname_l]
pop qword [f3552func]
pop qword [f3552old_context]
pop qword [f3552ret]
push qword [f3552f7362]
jmp f2462_end
f3552f2462: dq 0
f2462_end:
push qword [f3552cids]
pop qword [f3552f2462]
push qword [f3552f2462]
call make_internal
push rax
pop qword [f3552cids]
pop qword [f3552gr]
pop qword [f3552gl]
pop qword [f3552f6362]
pop qword [f3552new_context]
pop qword [f3552cexp]
pop qword [f3552is_returning]
pop qword [f3552func_args]
pop qword [f3552fname_r]
pop qword [f3552fname_l]
pop qword [f3552func]
pop qword [f3552old_context]
pop qword [f3552ret]
mov rsp, [f3552f6362]
jmp f3462_end
f3552f3462: dq 0
f3462_end:
push qword [f3552cids]
pop qword [f3552f3462]
pop rax
push qword [f3552f3462]
push rax
jmp f4462_end
f3552f4462: dq 0
f4462_end:
push qword [f3552gr]
pop qword [f3552f4462]
pop rax
push qword [f3552f4462]
push rax
jmp f5462_end
f3552f5462: dq 0
f5462_end:
push qword [f3552gl]
pop qword [f3552f5462]
pop rax
push qword [f3552f5462]
push rax
pop rcx
pop rax
jmp rcx
ret
f3552_end:
mov rdi, 112
call malloc
mov qword [rax+8], f3552
mov rcx, [print_functionret]
mov qword [rax+16], rcx
mov rcx, [print_functionold_context]
mov qword [rax+24], rcx
mov rcx, [print_functiongl]
mov qword [rax+32], rcx
mov rcx, [print_functiongr]
mov qword [rax+40], rcx
mov rcx, [print_functionfunc]
mov qword [rax+48], rcx
mov rcx, [print_functionfname_l]
mov qword [rax+56], rcx
mov rcx, [print_functionfname_r]
mov qword [rax+64], rcx
mov rcx, [print_functionfunc_args]
mov qword [rax+72], rcx
mov rcx, [print_functionis_returning]
mov qword [rax+80], rcx
mov rcx, [print_functioncexp]
mov qword [rax+88], rcx
mov rcx, [print_functionnew_context]
mov qword [rax+96], rcx
mov rcx, [print_functioncids]
mov qword [rax+104], rcx
mov qword [rax], 13
push rax
pop qword [print_functionf5362]
push qword [print_functionf5362]
jmp f6462_end
print_functionf6462: dq 0
f6462_end:
push qword [print_functionis_returning]
pop qword [print_functionf6462]
push qword [print_functionf6462]
call if_else_ret
push rax
pop qword [print_functiongl]
pop qword [print_functiongr]
pop qword [print_functioncids]
pop qword [print_functionnew_context]
pop qword [print_functioncexp]
pop qword [print_functionis_returning]
pop qword [print_functionfunc_args]
pop qword [print_functionfname_r]
pop qword [print_functionfname_l]
pop qword [print_functionfunc]
pop qword [print_functionold_context]
pop qword [print_functionret]
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functionfunc]
push qword [print_functionfname_l]
push qword [print_functionfname_r]
push qword [print_functionfunc_args]
push qword [print_functionis_returning]
push qword [print_functioncexp]
push qword [print_functionnew_context]
push qword [print_functiongl]
push qword [print_functiongr]
push qword [print_functioncids]
jmp f7462_end
print_functionf7462: dq 0
f7462_end:
push qword [print_functionfname_r]
pop qword [print_functionf7462]
push qword [print_functionf7462]
jmp f0562_end
print_functionf0562: dq 0
f0562_end:
push qword [print_functionfname_l]
pop qword [print_functionf0562]
push qword [print_functionf0562]
jmp f1562_end
print_functionf1562: dq 0
f1562_end:
jmp f2562_end
f2562: db `jmp {}_end\n`
db 0
f2562_end: push f2562
pop qword [print_functionf1562]
push qword [print_functionf1562]
call printf
push rax
pop qword [print_functionf7552]
pop qword [print_functioncids]
pop qword [print_functiongr]
pop qword [print_functiongl]
pop qword [print_functionnew_context]
pop qword [print_functioncexp]
pop qword [print_functionis_returning]
pop qword [print_functionfunc_args]
pop qword [print_functionfname_r]
pop qword [print_functionfname_l]
pop qword [print_functionfunc]
pop qword [print_functionold_context]
pop qword [print_functionret]
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functionfunc]
push qword [print_functionfname_l]
push qword [print_functionfname_r]
push qword [print_functionfunc_args]
push qword [print_functionis_returning]
push qword [print_functioncexp]
push qword [print_functionnew_context]
push qword [print_functiongl]
push qword [print_functiongr]
push qword [print_functioncids]
push qword [print_functionf7552]
jmp f3562_end
print_functionf3562: dq 0
f3562_end:
jmp f1652_end
f1652ret: dq 0
f1652old_context: dq 0
f1652func: dq 0
f1652fname_l: dq 0
f1652fname_r: dq 0
f1652func_args: dq 0
f1652is_returning: dq 0
f1652cexp: dq 0
f1652new_context: dq 0
f1652gl: dq 0
f1652gr: dq 0
f1652cids: dq 0
f1652f7552: dq 0
f1652l: dq 0
f1652r: dq 0
f1652f2652: dq 0
f1652f4562: dq 0
f1652:
pop rax
pop qword [f1652ret]
pop qword [f1652old_context]
pop qword [f1652func]
pop qword [f1652fname_l]
pop qword [f1652fname_r]
pop qword [f1652func_args]
pop qword [f1652is_returning]
pop qword [f1652cexp]
pop qword [f1652new_context]
pop qword [f1652gl]
pop qword [f1652gr]
pop qword [f1652cids]
pop qword [f1652f7552]
pop qword [f1652l]
pop qword [f1652r]
push rax
mov [f1652f4562], rsp
push qword [f1652ret]
push qword [f1652old_context]
push qword [f1652func]
push qword [f1652fname_l]
push qword [f1652fname_r]
push qword [f1652func_args]
push qword [f1652is_returning]
push qword [f1652cexp]
push qword [f1652new_context]
push qword [f1652gl]
push qword [f1652gr]
push qword [f1652cids]
push qword [f1652f7552]
push qword [f1652l]
push qword [f1652r]
push qword [f1652f4562]
jmp f5562_end
f1652f5562: dq 0
f5562_end:
push qword [f1652r]
pop qword [f1652f5562]
push qword [f1652f5562]
jmp f6562_end
f1652f6562: dq 0
f6562_end:
push qword [f1652l]
pop qword [f1652f6562]
push qword [f1652f6562]
jmp f7562_end
f1652f7562: dq 0
f7562_end:
push qword [f1652fname_r]
pop qword [f1652f7562]
push qword [f1652f7562]
jmp f0662_end
f1652f0662: dq 0
f0662_end:
push qword [f1652fname_l]
pop qword [f1652f0662]
push qword [f1652f0662]
jmp f1662_end
f1652f1662: dq 0
f1662_end:
jmp f2662_end
f2662: db `{}{}: dq 0\n`
db 0
f2662_end: push f2662
pop qword [f1652f1662]
push qword [f1652f1662]
call printf
push rax
pop qword [f1652f2652]
pop qword [f1652f4562]
pop qword [f1652r]
pop qword [f1652l]
pop qword [f1652f7552]
pop qword [f1652cids]
pop qword [f1652gr]
pop qword [f1652gl]
pop qword [f1652new_context]
pop qword [f1652cexp]
pop qword [f1652is_returning]
pop qword [f1652func_args]
pop qword [f1652fname_r]
pop qword [f1652fname_l]
pop qword [f1652func]
pop qword [f1652old_context]
pop qword [f1652ret]
ret
f1652_end:
mov rdi, 120
call malloc
mov qword [rax+8], f1652
mov rcx, [print_functionret]
mov qword [rax+16], rcx
mov rcx, [print_functionold_context]
mov qword [rax+24], rcx
mov rcx, [print_functionfunc]
mov qword [rax+32], rcx
mov rcx, [print_functionfname_l]
mov qword [rax+40], rcx
mov rcx, [print_functionfname_r]
mov qword [rax+48], rcx
mov rcx, [print_functionfunc_args]
mov qword [rax+56], rcx
mov rcx, [print_functionis_returning]
mov qword [rax+64], rcx
mov rcx, [print_functioncexp]
mov qword [rax+72], rcx
mov rcx, [print_functionnew_context]
mov qword [rax+80], rcx
mov rcx, [print_functiongl]
mov qword [rax+88], rcx
mov rcx, [print_functiongr]
mov qword [rax+96], rcx
mov rcx, [print_functioncids]
mov qword [rax+104], rcx
mov rcx, [print_functionf7552]
mov qword [rax+112], rcx
mov qword [rax], 14
push rax
pop qword [print_functionf3562]
push qword [print_functionf3562]
jmp f3662_end
print_functionf3662: dq 0
f3662_end:
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functionfunc]
push qword [print_functionfname_l]
push qword [print_functionfname_r]
push qword [print_functionfunc_args]
push qword [print_functionis_returning]
push qword [print_functioncexp]
push qword [print_functionnew_context]
push qword [print_functiongl]
push qword [print_functiongr]
push qword [print_functioncids]
push qword [print_functionf7552]
jmp f4662_end
print_functionf4662: dq 0
f4662_end:
push qword [print_functioncids]
pop qword [print_functionf4662]
push qword [print_functionf4662]
jmp f5662_end
print_functionf5662: dq 0
f5662_end:
push qword [print_functionnew_context]
pop qword [print_functionf5662]
push qword [print_functionf5662]
call make_internal
push rax
pop qword [print_functionf3662]
pop qword [print_functionf7552]
pop qword [print_functioncids]
pop qword [print_functiongr]
pop qword [print_functiongl]
pop qword [print_functionnew_context]
pop qword [print_functioncexp]
pop qword [print_functionis_returning]
pop qword [print_functionfunc_args]
pop qword [print_functionfname_r]
pop qword [print_functionfname_l]
pop qword [print_functionfunc]
pop qword [print_functionold_context]
pop qword [print_functionret]
push qword [print_functionf3662]
call map_tree
push rax
pop qword [print_functionf0652]
pop qword [print_functionf7552]
pop qword [print_functioncids]
pop qword [print_functiongr]
pop qword [print_functiongl]
pop qword [print_functionnew_context]
pop qword [print_functioncexp]
pop qword [print_functionis_returning]
pop qword [print_functionfunc_args]
pop qword [print_functionfname_r]
pop qword [print_functionfname_l]
pop qword [print_functionfunc]
pop qword [print_functionold_context]
pop qword [print_functionret]
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functionfunc]
push qword [print_functionfname_l]
push qword [print_functionfname_r]
push qword [print_functionfunc_args]
push qword [print_functionis_returning]
push qword [print_functioncexp]
push qword [print_functionnew_context]
push qword [print_functiongl]
push qword [print_functiongr]
push qword [print_functioncids]
push qword [print_functionf7552]
push qword [print_functionf0652]
jmp f6662_end
print_functionf6662: dq 0
f6662_end:
push qword [print_functionfname_r]
pop qword [print_functionf6662]
push qword [print_functionf6662]
jmp f7662_end
print_functionf7662: dq 0
f7662_end:
push qword [print_functionfname_l]
pop qword [print_functionf7662]
push qword [print_functionf7662]
jmp f0762_end
print_functionf0762: dq 0
f0762_end:
jmp f1762_end
f1762: db `{}:\n`
db 0
f1762_end: push f1762
pop qword [print_functionf0762]
push qword [print_functionf0762]
call printf
push rax
pop qword [print_functionf4652]
pop qword [print_functionf0652]
pop qword [print_functionf7552]
pop qword [print_functioncids]
pop qword [print_functiongr]
pop qword [print_functiongl]
pop qword [print_functionnew_context]
pop qword [print_functioncexp]
pop qword [print_functionis_returning]
pop qword [print_functionfunc_args]
pop qword [print_functionfname_r]
pop qword [print_functionfname_l]
pop qword [print_functionfunc]
pop qword [print_functionold_context]
pop qword [print_functionret]
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functionfunc]
push qword [print_functionfname_l]
push qword [print_functionfname_r]
push qword [print_functionfunc_args]
push qword [print_functionis_returning]
push qword [print_functioncexp]
push qword [print_functionnew_context]
push qword [print_functiongl]
push qword [print_functiongr]
push qword [print_functioncids]
push qword [print_functionf7552]
push qword [print_functionf0652]
push qword [print_functionf4652]
jmp f2762_end
print_functionf2762: dq 0
f2762_end:
jmp f6652_end
f6652ret: dq 0
f6652old_context: dq 0
f6652func: dq 0
f6652fname_l: dq 0
f6652fname_r: dq 0
f6652func_args: dq 0
f6652is_returning: dq 0
f6652cexp: dq 0
f6652new_context: dq 0
f6652gl: dq 0
f6652gr: dq 0
f6652cids: dq 0
f6652f7552: dq 0
f6652f0652: dq 0
f6652f4652: dq 0
f6652f7652: dq 0
f6652f3762: dq 0
f6652:
pop rax
pop qword [f6652ret]
pop qword [f6652old_context]
pop qword [f6652func]
pop qword [f6652fname_l]
pop qword [f6652fname_r]
pop qword [f6652func_args]
pop qword [f6652is_returning]
pop qword [f6652cexp]
pop qword [f6652new_context]
pop qword [f6652gl]
pop qword [f6652gr]
pop qword [f6652cids]
pop qword [f6652f7552]
pop qword [f6652f0652]
pop qword [f6652f4652]
push rax
mov [f6652f3762], rsp
push qword [f6652ret]
push qword [f6652old_context]
push qword [f6652func]
push qword [f6652fname_l]
push qword [f6652fname_r]
push qword [f6652func_args]
push qword [f6652is_returning]
push qword [f6652cexp]
push qword [f6652new_context]
push qword [f6652gl]
push qword [f6652gr]
push qword [f6652cids]
push qword [f6652f7552]
push qword [f6652f0652]
push qword [f6652f4652]
push qword [f6652f3762]
jmp f4762_end
f6652f4762: dq 0
f4762_end:
jmp f5762_end
f5762: db `pop rax\n`
db 0
f5762_end: push f5762
pop qword [f6652f4762]
push qword [f6652f4762]
call printf
push rax
pop qword [f6652f7652]
pop qword [f6652f3762]
pop qword [f6652f4652]
pop qword [f6652f0652]
pop qword [f6652f7552]
pop qword [f6652cids]
pop qword [f6652gr]
pop qword [f6652gl]
pop qword [f6652new_context]
pop qword [f6652cexp]
pop qword [f6652is_returning]
pop qword [f6652func_args]
pop qword [f6652fname_r]
pop qword [f6652fname_l]
pop qword [f6652func]
pop qword [f6652old_context]
pop qword [f6652ret]
ret
f6652_end:
mov rdi, 136
call malloc
mov qword [rax+8], f6652
mov rcx, [print_functionret]
mov qword [rax+16], rcx
mov rcx, [print_functionold_context]
mov qword [rax+24], rcx
mov rcx, [print_functionfunc]
mov qword [rax+32], rcx
mov rcx, [print_functionfname_l]
mov qword [rax+40], rcx
mov rcx, [print_functionfname_r]
mov qword [rax+48], rcx
mov rcx, [print_functionfunc_args]
mov qword [rax+56], rcx
mov rcx, [print_functionis_returning]
mov qword [rax+64], rcx
mov rcx, [print_functioncexp]
mov qword [rax+72], rcx
mov rcx, [print_functionnew_context]
mov qword [rax+80], rcx
mov rcx, [print_functiongl]
mov qword [rax+88], rcx
mov rcx, [print_functiongr]
mov qword [rax+96], rcx
mov rcx, [print_functioncids]
mov qword [rax+104], rcx
mov rcx, [print_functionf7552]
mov qword [rax+112], rcx
mov rcx, [print_functionf0652]
mov qword [rax+120], rcx
mov rcx, [print_functionf4652]
mov qword [rax+128], rcx
mov qword [rax], 16
push rax
pop qword [print_functionf2762]
push qword [print_functionf2762]
jmp f6762_end
print_functionf6762: dq 0
f6762_end:
push qword [print_functionis_returning]
pop qword [print_functionf6762]
push qword [print_functionf6762]
call if_ret
push rax
pop qword [print_functionf5652]
pop qword [print_functionf4652]
pop qword [print_functionf0652]
pop qword [print_functionf7552]
pop qword [print_functioncids]
pop qword [print_functiongr]
pop qword [print_functiongl]
pop qword [print_functionnew_context]
pop qword [print_functioncexp]
pop qword [print_functionis_returning]
pop qword [print_functionfunc_args]
pop qword [print_functionfname_r]
pop qword [print_functionfname_l]
pop qword [print_functionfunc]
pop qword [print_functionold_context]
pop qword [print_functionret]
jmp f7762_end
print_functionf7762: dq 0
f7762_end:
jmp f3752_end
f3752ret: dq 0
f3752old_context: dq 0
f3752func: dq 0
f3752fname_l: dq 0
f3752fname_r: dq 0
f3752func_args: dq 0
f3752is_returning: dq 0
f3752cexp: dq 0
f3752new_context: dq 0
f3752gl: dq 0
f3752gr: dq 0
f3752cids: dq 0
f3752f7552: dq 0
f3752f0652: dq 0
f3752f4652: dq 0
f3752f5652: dq 0
f3752l: dq 0
f3752r: dq 0
f3752f4752: dq 0
f3752f0072: dq 0
f3752:
pop rax
pop qword [f3752ret]
pop qword [f3752old_context]
pop qword [f3752func]
pop qword [f3752fname_l]
pop qword [f3752fname_r]
pop qword [f3752func_args]
pop qword [f3752is_returning]
pop qword [f3752cexp]
pop qword [f3752new_context]
pop qword [f3752gl]
pop qword [f3752gr]
pop qword [f3752cids]
pop qword [f3752f7552]
pop qword [f3752f0652]
pop qword [f3752f4652]
pop qword [f3752f5652]
pop qword [f3752l]
pop qword [f3752r]
push rax
mov [f3752f0072], rsp
jmp f1072_end
f3752f1072: dq 0
f1072_end:
push qword [f3752r]
pop qword [f3752f1072]
push qword [f3752f1072]
jmp f2072_end
f3752f2072: dq 0
f2072_end:
push qword [f3752l]
pop qword [f3752f2072]
push qword [f3752f2072]
jmp f3072_end
f3752f3072: dq 0
f3072_end:
push qword [f3752fname_r]
pop qword [f3752f3072]
push qword [f3752f3072]
jmp f4072_end
f3752f4072: dq 0
f4072_end:
push qword [f3752fname_l]
pop qword [f3752f4072]
push qword [f3752f4072]
jmp f5072_end
f3752f5072: dq 0
f5072_end:
jmp f6072_end
f6072: db `pop qword [{}{}]\n`
db 0
f6072_end: push f6072
pop qword [f3752f5072]
push qword [f3752f5072]
call printf
push rax
pop qword [f3752f4752]
ret
f3752_end:
mov rdi, 144
call malloc
mov qword [rax+8], f3752
mov rcx, [print_functionret]
mov qword [rax+16], rcx
mov rcx, [print_functionold_context]
mov qword [rax+24], rcx
mov rcx, [print_functionfunc]
mov qword [rax+32], rcx
mov rcx, [print_functionfname_l]
mov qword [rax+40], rcx
mov rcx, [print_functionfname_r]
mov qword [rax+48], rcx
mov rcx, [print_functionfunc_args]
mov qword [rax+56], rcx
mov rcx, [print_functionis_returning]
mov qword [rax+64], rcx
mov rcx, [print_functioncexp]
mov qword [rax+72], rcx
mov rcx, [print_functionnew_context]
mov qword [rax+80], rcx
mov rcx, [print_functiongl]
mov qword [rax+88], rcx
mov rcx, [print_functiongr]
mov qword [rax+96], rcx
mov rcx, [print_functioncids]
mov qword [rax+104], rcx
mov rcx, [print_functionf7552]
mov qword [rax+112], rcx
mov rcx, [print_functionf0652]
mov qword [rax+120], rcx
mov rcx, [print_functionf4652]
mov qword [rax+128], rcx
mov rcx, [print_functionf5652]
mov qword [rax+136], rcx
mov qword [rax], 17
push rax
pop qword [print_functionf7762]
push qword [print_functionf7762]
jmp f7072_end
print_functionf7072: dq 0
f7072_end:
push qword [print_functionnew_context]
pop qword [print_functionf7072]
push qword [print_functionf7072]
call map_tree
push rax
pop qword [print_functionf1752]
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functionfunc]
push qword [print_functionfname_l]
push qword [print_functionfname_r]
push qword [print_functionfunc_args]
push qword [print_functionis_returning]
push qword [print_functioncexp]
push qword [print_functiongl]
push qword [print_functiongr]
push qword [print_functioncids]
push qword [print_functionf7552]
push qword [print_functionf0652]
push qword [print_functionf4652]
push qword [print_functionf5652]
push qword [print_functionf1752]
jmp f0172_end
print_functionf0172: dq 0
f0172_end:
jmp f5062_end
f5062ret: dq 0
f5062old_context: dq 0
f5062func: dq 0
f5062fname_l: dq 0
f5062fname_r: dq 0
f5062func_args: dq 0
f5062is_returning: dq 0
f5062cexp: dq 0
f5062new_context: dq 0
f5062gl: dq 0
f5062gr: dq 0
f5062cids: dq 0
f5062f7552: dq 0
f5062f0652: dq 0
f5062f4652: dq 0
f5062f5652: dq 0
f5062f1752: dq 0
f5062f1172: dq 0
f5062:
pop rax
pop qword [f5062ret]
pop qword [f5062old_context]
pop qword [f5062func]
pop qword [f5062fname_l]
pop qword [f5062fname_r]
pop qword [f5062func_args]
pop qword [f5062is_returning]
pop qword [f5062cexp]
pop qword [f5062new_context]
pop qword [f5062gl]
pop qword [f5062gr]
pop qword [f5062cids]
pop qword [f5062f7552]
pop qword [f5062f0652]
pop qword [f5062f4652]
pop qword [f5062f5652]
pop qword [f5062f1752]
push rax
mov [f5062f1172], rsp
mov rsp, [f5062f1172]
jmp f2172_end
f5062f2172: dq 0
f2172_end:
push qword [f5062new_context]
pop qword [f5062f2172]
pop rax
push qword [f5062f2172]
push rax
pop rcx
pop rax
jmp rcx
ret
f5062_end:
mov rdi, 152
call malloc
mov qword [rax+8], f5062
mov rcx, [print_functionret]
mov qword [rax+16], rcx
mov rcx, [print_functionold_context]
mov qword [rax+24], rcx
mov rcx, [print_functionfunc]
mov qword [rax+32], rcx
mov rcx, [print_functionfname_l]
mov qword [rax+40], rcx
mov rcx, [print_functionfname_r]
mov qword [rax+48], rcx
mov rcx, [print_functionfunc_args]
mov qword [rax+56], rcx
mov rcx, [print_functionis_returning]
mov qword [rax+64], rcx
mov rcx, [print_functioncexp]
mov qword [rax+72], rcx
mov rcx, [print_functionnew_context]
mov qword [rax+80], rcx
mov rcx, [print_functiongl]
mov qword [rax+88], rcx
mov rcx, [print_functiongr]
mov qword [rax+96], rcx
mov rcx, [print_functioncids]
mov qword [rax+104], rcx
mov rcx, [print_functionf7552]
mov qword [rax+112], rcx
mov rcx, [print_functionf0652]
mov qword [rax+120], rcx
mov rcx, [print_functionf4652]
mov qword [rax+128], rcx
mov rcx, [print_functionf5652]
mov qword [rax+136], rcx
mov rcx, [print_functionf1752]
mov qword [rax+144], rcx
mov qword [rax], 18
push rax
pop qword [print_functionf0172]
push qword [print_functionf0172]
jmp f3172_end
print_functionf3172: dq 0
f3172_end:
jmp f1062_end
f1062ret: dq 0
f1062old_context: dq 0
f1062func: dq 0
f1062fname_l: dq 0
f1062fname_r: dq 0
f1062func_args: dq 0
f1062is_returning: dq 0
f1062cexp: dq 0
f1062new_context: dq 0
f1062gl: dq 0
f1062gr: dq 0
f1062cids: dq 0
f1062f7552: dq 0
f1062f0652: dq 0
f1062f4652: dq 0
f1062f5652: dq 0
f1062f1752: dq 0
f1062f2062: dq 0
f1062f3062: dq 0
f1062f4172: dq 0
f1062:
pop rax
pop qword [f1062ret]
pop qword [f1062old_context]
pop qword [f1062func]
pop qword [f1062fname_l]
pop qword [f1062fname_r]
pop qword [f1062func_args]
pop qword [f1062is_returning]
pop qword [f1062cexp]
pop qword [f1062new_context]
pop qword [f1062gl]
pop qword [f1062gr]
pop qword [f1062cids]
pop qword [f1062f7552]
pop qword [f1062f0652]
pop qword [f1062f4652]
pop qword [f1062f5652]
pop qword [f1062f1752]
push rax
mov [f1062f4172], rsp
push qword [f1062ret]
push qword [f1062old_context]
push qword [f1062func]
push qword [f1062fname_l]
push qword [f1062fname_r]
push qword [f1062func_args]
push qword [f1062is_returning]
push qword [f1062cexp]
push qword [f1062new_context]
push qword [f1062gl]
push qword [f1062gr]
push qword [f1062cids]
push qword [f1062f7552]
push qword [f1062f0652]
push qword [f1062f4652]
push qword [f1062f5652]
push qword [f1062f1752]
push qword [f1062f4172]
jmp f5172_end
f1062f5172: dq 0
f5172_end:
jmp f6172_end
f6172: db `push rax\n`
db 0
f6172_end: push f6172
pop qword [f1062f5172]
push qword [f1062f5172]
call printf
push rax
pop qword [f1062f2062]
pop qword [f1062f4172]
pop qword [f1062f1752]
pop qword [f1062f5652]
pop qword [f1062f4652]
pop qword [f1062f0652]
pop qword [f1062f7552]
pop qword [f1062cids]
pop qword [f1062gr]
pop qword [f1062gl]
pop qword [f1062new_context]
pop qword [f1062cexp]
pop qword [f1062is_returning]
pop qword [f1062func_args]
pop qword [f1062fname_r]
pop qword [f1062fname_l]
pop qword [f1062func]
pop qword [f1062old_context]
pop qword [f1062ret]
push qword [f1062ret]
push qword [f1062old_context]
push qword [f1062func]
push qword [f1062fname_l]
push qword [f1062fname_r]
push qword [f1062func_args]
push qword [f1062is_returning]
push qword [f1062cexp]
push qword [f1062new_context]
push qword [f1062gl]
push qword [f1062gr]
push qword [f1062cids]
push qword [f1062f7552]
push qword [f1062f0652]
push qword [f1062f4652]
push qword [f1062f5652]
push qword [f1062f1752]
push qword [f1062f4172]
push qword [f1062f2062]
jmp f7172_end
f1062f7172: dq 0
f7172_end:
push qword [f1062gr]
pop qword [f1062f7172]
push qword [f1062f7172]
jmp f0272_end
f1062f0272: dq 0
f0272_end:
push qword [f1062gl]
pop qword [f1062f0272]
push qword [f1062f0272]
jmp f1272_end
f1062f1272: dq 0
f1272_end:
push qword [f1062fname_r]
pop qword [f1062f1272]
push qword [f1062f1272]
jmp f2272_end
f1062f2272: dq 0
f2272_end:
push qword [f1062fname_l]
pop qword [f1062f2272]
push qword [f1062f2272]
jmp f3272_end
f1062f3272: dq 0
f3272_end:
jmp f4272_end
f4272: db `mov [{}{}], rsp\n`
db 0
f4272_end: push f4272
pop qword [f1062f3272]
push qword [f1062f3272]
call printf
push rax
pop qword [f1062f3062]
pop qword [f1062f2062]
pop qword [f1062f4172]
pop qword [f1062f1752]
pop qword [f1062f5652]
pop qword [f1062f4652]
pop qword [f1062f0652]
pop qword [f1062f7552]
pop qword [f1062cids]
pop qword [f1062gr]
pop qword [f1062gl]
pop qword [f1062new_context]
pop qword [f1062cexp]
pop qword [f1062is_returning]
pop qword [f1062func_args]
pop qword [f1062fname_r]
pop qword [f1062fname_l]
pop qword [f1062func]
pop qword [f1062old_context]
pop qword [f1062ret]
mov rsp, [f1062f4172]
jmp f5272_end
f1062f5272: dq 0
f5272_end:
push qword [f1062ret]
push qword [f1062old_context]
push qword [f1062func]
push qword [f1062fname_l]
push qword [f1062fname_r]
push qword [f1062func_args]
push qword [f1062is_returning]
push qword [f1062cexp]
push qword [f1062new_context]
push qword [f1062gl]
push qword [f1062gr]
push qword [f1062cids]
push qword [f1062f7552]
push qword [f1062f0652]
push qword [f1062f4652]
push qword [f1062f5652]
push qword [f1062f1752]
push qword [f1062f4172]
push qword [f1062f2062]
push qword [f1062f3062]
jmp f6272_end
f1062f6272: dq 0
f6272_end:
push qword [f1062ret]
push qword [f1062old_context]
push qword [f1062func]
push qword [f1062fname_l]
push qword [f1062fname_r]
push qword [f1062func_args]
push qword [f1062is_returning]
push qword [f1062cexp]
push qword [f1062new_context]
push qword [f1062gl]
push qword [f1062gr]
push qword [f1062cids]
push qword [f1062f7552]
push qword [f1062f0652]
push qword [f1062f4652]
push qword [f1062f5652]
push qword [f1062f1752]
push qword [f1062f4172]
push qword [f1062f2062]
push qword [f1062f3062]
jmp f7272_end
f1062f7272: dq 0
f7272_end:
push qword [f1062gr]
pop qword [f1062f7272]
push qword [f1062f7272]
jmp f0372_end
f1062f0372: dq 0
f0372_end:
push qword [f1062gl]
pop qword [f1062f0372]
push qword [f1062f0372]
call make_leaf
push rax
pop qword [f1062f6272]
pop qword [f1062f3062]
pop qword [f1062f2062]
pop qword [f1062f4172]
pop qword [f1062f1752]
pop qword [f1062f5652]
pop qword [f1062f4652]
pop qword [f1062f0652]
pop qword [f1062f7552]
pop qword [f1062cids]
pop qword [f1062gr]
pop qword [f1062gl]
pop qword [f1062new_context]
pop qword [f1062cexp]
pop qword [f1062is_returning]
pop qword [f1062func_args]
pop qword [f1062fname_r]
pop qword [f1062fname_l]
pop qword [f1062func]
pop qword [f1062old_context]
pop qword [f1062ret]
push qword [f1062f6272]
jmp f1372_end
f1062f1372: dq 0
f1372_end:
push qword [f1062new_context]
pop qword [f1062f1372]
push qword [f1062f1372]
call make_internal
push rax
pop qword [f1062f5272]
pop qword [f1062f3062]
pop qword [f1062f2062]
pop qword [f1062f4172]
pop qword [f1062f1752]
pop qword [f1062f5652]
pop qword [f1062f4652]
pop qword [f1062f0652]
pop qword [f1062f7552]
pop qword [f1062cids]
pop qword [f1062gr]
pop qword [f1062gl]
pop qword [f1062new_context]
pop qword [f1062cexp]
pop qword [f1062is_returning]
pop qword [f1062func_args]
pop qword [f1062fname_r]
pop qword [f1062fname_l]
pop qword [f1062func]
pop qword [f1062old_context]
pop qword [f1062ret]
pop rax
push qword [f1062f5272]
push rax
pop rcx
pop rax
jmp rcx
ret
f1062_end:
mov rdi, 152
call malloc
mov qword [rax+8], f1062
mov rcx, [print_functionret]
mov qword [rax+16], rcx
mov rcx, [print_functionold_context]
mov qword [rax+24], rcx
mov rcx, [print_functionfunc]
mov qword [rax+32], rcx
mov rcx, [print_functionfname_l]
mov qword [rax+40], rcx
mov rcx, [print_functionfname_r]
mov qword [rax+48], rcx
mov rcx, [print_functionfunc_args]
mov qword [rax+56], rcx
mov rcx, [print_functionis_returning]
mov qword [rax+64], rcx
mov rcx, [print_functioncexp]
mov qword [rax+72], rcx
mov rcx, [print_functionnew_context]
mov qword [rax+80], rcx
mov rcx, [print_functiongl]
mov qword [rax+88], rcx
mov rcx, [print_functiongr]
mov qword [rax+96], rcx
mov rcx, [print_functioncids]
mov qword [rax+104], rcx
mov rcx, [print_functionf7552]
mov qword [rax+112], rcx
mov rcx, [print_functionf0652]
mov qword [rax+120], rcx
mov rcx, [print_functionf4652]
mov qword [rax+128], rcx
mov rcx, [print_functionf5652]
mov qword [rax+136], rcx
mov rcx, [print_functionf1752]
mov qword [rax+144], rcx
mov qword [rax], 18
push rax
pop qword [print_functionf3172]
push qword [print_functionf3172]
jmp f2372_end
print_functionf2372: dq 0
f2372_end:
push qword [print_functionis_returning]
pop qword [print_functionf2372]
push qword [print_functionf2372]
call if_else_ret
push rax
pop qword [print_functionnew_context]
pop qword [print_functionf1752]
pop qword [print_functionf5652]
pop qword [print_functionf4652]
pop qword [print_functionf0652]
pop qword [print_functionf7552]
pop qword [print_functioncids]
pop qword [print_functiongr]
pop qword [print_functiongl]
pop qword [print_functioncexp]
pop qword [print_functionis_returning]
pop qword [print_functionfunc_args]
pop qword [print_functionfname_r]
pop qword [print_functionfname_l]
pop qword [print_functionfunc]
pop qword [print_functionold_context]
pop qword [print_functionret]
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functionfunc]
push qword [print_functionfname_l]
push qword [print_functionfname_r]
push qword [print_functionfunc_args]
push qword [print_functionis_returning]
push qword [print_functioncexp]
push qword [print_functiongl]
push qword [print_functiongr]
push qword [print_functioncids]
push qword [print_functionf7552]
push qword [print_functionf0652]
push qword [print_functionf4652]
push qword [print_functionf5652]
push qword [print_functionf1752]
push qword [print_functionnew_context]
jmp f3372_end
print_functionf3372: dq 0
f3372_end:
push qword [print_functioncexp]
pop qword [print_functionf3372]
push qword [print_functionf3372]
jmp f4372_end
print_functionf4372: dq 0
f4372_end:
push qword [print_functiongr]
pop qword [print_functionf4372]
push qword [print_functionf4372]
jmp f5372_end
print_functionf5372: dq 0
f5372_end:
push qword [print_functiongl]
pop qword [print_functionf5372]
push qword [print_functionf5372]
jmp f6372_end
print_functionf6372: dq 0
f6372_end:
push qword [print_functionis_returning]
pop qword [print_functionf6372]
push qword [print_functionf6372]
jmp f7372_end
print_functionf7372: dq 0
f7372_end:
push qword [print_functionnew_context]
pop qword [print_functionf7372]
push qword [print_functionf7372]
jmp f0472_end
print_functionf0472: dq 0
f0472_end:
push qword [print_functionfname_r]
pop qword [print_functionf0472]
push qword [print_functionf0472]
jmp f1472_end
print_functionf1472: dq 0
f1472_end:
push qword [print_functionfname_l]
pop qword [print_functionf1472]
push qword [print_functionf1472]
call print_cexp
push rax
pop qword [print_functionf7062]
pop qword [print_functionnew_context]
pop qword [print_functionf1752]
pop qword [print_functionf5652]
pop qword [print_functionf4652]
pop qword [print_functionf0652]
pop qword [print_functionf7552]
pop qword [print_functioncids]
pop qword [print_functiongr]
pop qword [print_functiongl]
pop qword [print_functioncexp]
pop qword [print_functionis_returning]
pop qword [print_functionfunc_args]
pop qword [print_functionfname_r]
pop qword [print_functionfname_l]
pop qword [print_functionfunc]
pop qword [print_functionold_context]
pop qword [print_functionret]
jmp f2472_end
print_functionf2472: dq 0
f2472_end:
jmp f2162_end
f2162ret: dq 0
f2162old_context: dq 0
f2162func: dq 0
f2162fname_l: dq 0
f2162fname_r: dq 0
f2162func_args: dq 0
f2162is_returning: dq 0
f2162cexp: dq 0
f2162gl: dq 0
f2162gr: dq 0
f2162cids: dq 0
f2162f7552: dq 0
f2162f0652: dq 0
f2162f4652: dq 0
f2162f5652: dq 0
f2162f1752: dq 0
f2162new_context: dq 0
f2162f7062: dq 0
f2162f3162: dq 0
f2162f3472: dq 0
f2162:
pop rax
pop qword [f2162ret]
pop qword [f2162old_context]
pop qword [f2162func]
pop qword [f2162fname_l]
pop qword [f2162fname_r]
pop qword [f2162func_args]
pop qword [f2162is_returning]
pop qword [f2162cexp]
pop qword [f2162gl]
pop qword [f2162gr]
pop qword [f2162cids]
pop qword [f2162f7552]
pop qword [f2162f0652]
pop qword [f2162f4652]
pop qword [f2162f5652]
pop qword [f2162f1752]
pop qword [f2162new_context]
pop qword [f2162f7062]
push rax
mov [f2162f3472], rsp
jmp f4472_end
f2162f4472: dq 0
f4472_end:
jmp f5472_end
f5472: db `ret\n`
db 0
f5472_end: push f5472
pop qword [f2162f4472]
push qword [f2162f4472]
call printf
push rax
pop qword [f2162f3162]
ret
f2162_end:
mov rdi, 160
call malloc
mov qword [rax+8], f2162
mov rcx, [print_functionret]
mov qword [rax+16], rcx
mov rcx, [print_functionold_context]
mov qword [rax+24], rcx
mov rcx, [print_functionfunc]
mov qword [rax+32], rcx
mov rcx, [print_functionfname_l]
mov qword [rax+40], rcx
mov rcx, [print_functionfname_r]
mov qword [rax+48], rcx
mov rcx, [print_functionfunc_args]
mov qword [rax+56], rcx
mov rcx, [print_functionis_returning]
mov qword [rax+64], rcx
mov rcx, [print_functioncexp]
mov qword [rax+72], rcx
mov rcx, [print_functiongl]
mov qword [rax+80], rcx
mov rcx, [print_functiongr]
mov qword [rax+88], rcx
mov rcx, [print_functioncids]
mov qword [rax+96], rcx
mov rcx, [print_functionf7552]
mov qword [rax+104], rcx
mov rcx, [print_functionf0652]
mov qword [rax+112], rcx
mov rcx, [print_functionf4652]
mov qword [rax+120], rcx
mov rcx, [print_functionf5652]
mov qword [rax+128], rcx
mov rcx, [print_functionf1752]
mov qword [rax+136], rcx
mov rcx, [print_functionnew_context]
mov qword [rax+144], rcx
mov rcx, [print_functionf7062]
mov qword [rax+152], rcx
mov qword [rax], 19
push rax
pop qword [print_functionf2472]
push qword [print_functionf2472]
jmp f6472_end
print_functionf6472: dq 0
f6472_end:
push qword [print_functionis_returning]
pop qword [print_functionf6472]
push qword [print_functionf6472]
call if_ret
push rax
pop qword [print_functionf0162]
push qword [print_functionret]
push qword [print_functionold_context]
push qword [print_functionfunc]
push qword [print_functionfname_l]
push qword [print_functionfname_r]
push qword [print_functionfunc_args]
push qword [print_functionis_returning]
push qword [print_functioncexp]
push qword [print_functiongl]
push qword [print_functiongr]
push qword [print_functioncids]
push qword [print_functionf7552]
push qword [print_functionf0652]
push qword [print_functionf4652]
push qword [print_functionf5652]
push qword [print_functionf1752]
push qword [print_functionnew_context]
push qword [print_functionf7062]
push qword [print_functionf0162]
jmp f7472_end
print_functionf7472: dq 0
f7472_end:
push qword [print_functionfname_r]
pop qword [print_functionf7472]
push qword [print_functionf7472]
jmp f0572_end
print_functionf0572: dq 0
f0572_end:
push qword [print_functionfname_l]
pop qword [print_functionf0572]
push qword [print_functionf0572]
jmp f1572_end
print_functionf1572: dq 0
f1572_end:
jmp f2572_end
f2572: db `{}_end:\n`
db 0
f2572_end: push f2572
pop qword [print_functionf1572]
push qword [print_functionf1572]
call printf
push rax
pop qword [print_functionf0262]
pop qword [print_functionf0162]
pop qword [print_functionf7062]
pop qword [print_functionnew_context]
pop qword [print_functionf1752]
pop qword [print_functionf5652]
pop qword [print_functionf4652]
pop qword [print_functionf0652]
pop qword [print_functionf7552]
pop qword [print_functioncids]
pop qword [print_functiongr]
pop qword [print_functiongl]
pop qword [print_functioncexp]
pop qword [print_functionis_returning]
pop qword [print_functionfunc_args]
pop qword [print_functionfname_r]
pop qword [print_functionfname_l]
pop qword [print_functionfunc]
pop qword [print_functionold_context]
pop qword [print_functionret]
jmp f3572_end
print_functionf3572: dq 0
f3572_end:
push 0
pop qword [print_functionf3572]
push qword [print_functionf3572]
jmp f4572_end
print_functionf4572: dq 0
f4572_end:
push qword [print_functionret]
pop qword [print_functionf4572]
push qword [print_functionf4572]
jmp return
print_function_end:
jmp get_aexp_from_texp_end
get_aexp_from_texpret: dq 0
get_aexp_from_texptexp: dq 0
get_aexp_from_texptexp_type: dq 0
get_aexp_from_texpnone: dq 0
get_aexp_from_texpf1672: dq 0
get_aexp_from_texp:
pop qword [get_aexp_from_texpret]
pop qword [get_aexp_from_texptexp]
push qword [get_aexp_from_texpret]
push qword [get_aexp_from_texptexp]
call runtime_call_ret
push rax
pop qword [get_aexp_from_texptexp_type]
pop qword [get_aexp_from_texptexp]
pop qword [get_aexp_from_texpret]
jmp f6572_end
f6572ret: dq 0
f6572texp_type: dq 0
f6572texp: dq 0
f6572a: dq 0
f6572:
pop qword [f6572ret]
pop qword [f6572texp_type]
pop qword [f6572texp]
pop qword [f6572a]
jmp f1003_end
f6572f1003: dq 0
f1003_end:
push 0
pop qword [f6572f1003]
push qword [f6572f1003]
jmp f2003_end
f6572f2003: dq 0
f2003_end:
push qword [f6572ret]
pop qword [f6572f2003]
push qword [f6572f2003]
jmp return
f6572_end:
mov rdi, 40
call malloc
mov qword [rax+8], f6572
mov rcx, [get_aexp_from_texpret]
mov qword [rax+16], rcx
mov rcx, [get_aexp_from_texptexp_type]
mov qword [rax+24], rcx
mov rcx, [get_aexp_from_texptexp]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [get_aexp_from_texpnone]
jmp f3003_end
get_aexp_from_texpf3003: dq 0
f3003_end:
jmp f5672_end
f5672ret: dq 0
f5672texp_type: dq 0
f5672texp: dq 0
f5672none: dq 0
f5672break: dq 0
f5672:
pop qword [f5672ret]
pop qword [f5672texp_type]
pop qword [f5672texp]
pop qword [f5672none]
pop qword [f5672break]
jmp f4003_end
f5672f4003: dq 0
f4003_end:
push 0
pop qword [f5672f4003]
push qword [f5672f4003]
jmp f5003_end
f5672f5003: dq 0
f5003_end:
push qword [f5672ret]
pop qword [f5672f5003]
push qword [f5672f5003]
jmp return
f5672_end:
mov rdi, 48
call malloc
mov qword [rax+8], f5672
mov rcx, [get_aexp_from_texpret]
mov qword [rax+16], rcx
mov rcx, [get_aexp_from_texptexp_type]
mov qword [rax+24], rcx
mov rcx, [get_aexp_from_texptexp]
mov qword [rax+32], rcx
mov rcx, [get_aexp_from_texpnone]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [get_aexp_from_texpf3003]
push qword [get_aexp_from_texpf3003]
jmp f6003_end
get_aexp_from_texpf6003: dq 0
f6003_end:
jmp f7003_end
get_aexp_from_texpf7003: dq 0
f7003_end:
push 0
pop qword [get_aexp_from_texpf7003]
push qword [get_aexp_from_texpf7003]
jmp f0103_end
get_aexp_from_texpf0103: dq 0
f0103_end:
push qword [get_aexp_from_texptexp]
pop qword [get_aexp_from_texpf0103]
push qword [get_aexp_from_texpf0103]
call eq
push rax
pop qword [get_aexp_from_texpf6003]
push qword [get_aexp_from_texpf6003]
call if
push rax
pop qword [get_aexp_from_texpf1672]
jmp f1103_end
get_aexp_from_texpf1103: dq 0
f1103_end:
push qword [get_aexp_from_texpnone]
pop qword [get_aexp_from_texpf1103]
push qword [get_aexp_from_texpf1103]
jmp f2103_end
get_aexp_from_texpf2103: dq 0
f2103_end:
push qword [get_aexp_from_texpnone]
pop qword [get_aexp_from_texpf2103]
push qword [get_aexp_from_texpf2103]
jmp f3103_end
get_aexp_from_texpf3103: dq 0
f3103_end:
jmp f5772_end
f5772ret: dq 0
f5772texp_type: dq 0
f5772texp: dq 0
f5772none: dq 0
f5772f1672: dq 0
f5772aexp: dq 0
f5772:
pop qword [f5772ret]
pop qword [f5772texp_type]
pop qword [f5772texp]
pop qword [f5772none]
pop qword [f5772f1672]
pop qword [f5772aexp]
jmp f4103_end
f5772f4103: dq 0
f4103_end:
push qword [f5772aexp]
pop qword [f5772f4103]
push qword [f5772f4103]
jmp f5103_end
f5772f5103: dq 0
f5103_end:
push qword [f5772ret]
pop qword [f5772f5103]
push qword [f5772f5103]
jmp return
f5772_end:
mov rdi, 56
call malloc
mov qword [rax+8], f5772
mov rcx, [get_aexp_from_texpret]
mov qword [rax+16], rcx
mov rcx, [get_aexp_from_texptexp_type]
mov qword [rax+24], rcx
mov rcx, [get_aexp_from_texptexp]
mov qword [rax+32], rcx
mov rcx, [get_aexp_from_texpnone]
mov qword [rax+40], rcx
mov rcx, [get_aexp_from_texpf1672]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [get_aexp_from_texpf3103]
push qword [get_aexp_from_texpf3103]
jmp f6103_end
get_aexp_from_texpf6103: dq 0
f6103_end:
push qword [get_aexp_from_texpnone]
pop qword [get_aexp_from_texpf6103]
push qword [get_aexp_from_texpf6103]
push qword [get_aexp_from_texptexp]
jmp runtime_call
get_aexp_from_texp_end:
jmp texp_string_end
texp_string: dq 0
texp_string_end:
push 0
pop qword [texp_string]
jmp texp_block_end
texp_block: dq 0
texp_block_end:
push 1
pop qword [texp_block]
jmp texp_func_end
texp_func: dq 0
texp_func_end:
push 2
pop qword [texp_func]
jmp texp_aexp_end
texp_aexp: dq 0
texp_aexp_end:
push 3
pop qword [texp_aexp]

jmp read_texp_end
read_texporig_l: dq 0
read_texpr: dq 0
read_texpl: dq 0
read_texpreturn_string: dq 0
read_texpreturn_block: dq 0
read_texpreturn_func: dq 0
read_texpreturn_aexp: dq 0
read_texpnl: dq 0
read_texpnr: dq 0
read_texpt: dq 0
read_texptl: dq 0
read_texptr: dq 0
read_texpf4503: dq 0
read_texpf0703: dq 0
read_texptokenizer: dq 0
read_texpfunc: dq 0
read_texpf0113: dq 0
read_texplo: dq 0
read_texphi: dq 0
read_texpstring: dq 0
read_texpf0213: dq 0
read_texpf1313: dq 0
read_texp:
pop rax
pop qword [read_texporig_l]
pop qword [read_texpr]
push rax
mov [read_texpf1313], rsp
push qword [read_texporig_l]
pop qword [read_texpl]
jmp f0203_end
f0203orig_l: dq 0
f0203f1313: dq 0
f0203l: dq 0
f0203r: dq 0
f0203t: dq 0
f0203:
pop qword [f0203orig_l]
pop qword [f0203f1313]
pop qword [f0203l]
pop qword [f0203r]
pop qword [f0203t]
mov rsp, [f0203f1313]
jmp f2313_end
f0203f2313: dq 0
f2313_end:
jmp f1203_end
f1203orig_l: dq 0
f1203f1313: dq 0
f1203l: dq 0
f1203r: dq 0
f1203t: dq 0
f1203f3313: dq 0
f1203:
pop rax
pop qword [f1203orig_l]
pop qword [f1203f1313]
pop qword [f1203l]
pop qword [f1203r]
pop qword [f1203t]
push rax
mov [f1203f3313], rsp
mov rsp, [f1203f3313]
jmp f4313_end
f1203f4313: dq 0
f4313_end:
jmp f2203_end
f2203orig_l: dq 0
f2203f1313: dq 0
f2203l: dq 0
f2203r: dq 0
f2203t: dq 0
f2203f3313: dq 0
f2203x: dq 0
f2203aexp: dq 0
f2203block: dq 0
f2203func: dq 0
f2203:
pop qword [f2203orig_l]
pop qword [f2203f1313]
pop qword [f2203l]
pop qword [f2203r]
pop qword [f2203t]
pop qword [f2203f3313]
pop qword [f2203x]
pop qword [f2203aexp]
pop qword [f2203block]
pop qword [f2203func]
jmp f5313_end
f2203f5313: dq 0
f5313_end:
push qword [f2203t]
pop qword [f2203f5313]
push qword [f2203f5313]
push qword [f2203x]
jmp runtime_call
f2203_end:
mov rdi, 64
call malloc
mov qword [rax+8], f2203
mov rcx, [f1203orig_l]
mov qword [rax+16], rcx
mov rcx, [f1203f1313]
mov qword [rax+24], rcx
mov rcx, [f1203l]
mov qword [rax+32], rcx
mov rcx, [f1203r]
mov qword [rax+40], rcx
mov rcx, [f1203t]
mov qword [rax+48], rcx
mov rcx, [f1203f3313]
mov qword [rax+56], rcx
mov qword [rax], 7
push rax
pop qword [f1203f4313]
pop rax
push qword [f1203f4313]
push rax
jmp f6313_end
f1203f6313: dq 0
f6313_end:
push qword [texp_string]
pop qword [f1203f6313]
pop rax
push qword [f1203f6313]
push rax
pop rcx
pop rax
jmp rcx
ret
f1203_end:
mov rdi, 56
call malloc
mov qword [rax+8], f1203
mov rcx, [f0203orig_l]
mov qword [rax+16], rcx
mov rcx, [f0203f1313]
mov qword [rax+24], rcx
mov rcx, [f0203l]
mov qword [rax+32], rcx
mov rcx, [f0203r]
mov qword [rax+40], rcx
mov rcx, [f0203t]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [f0203f2313]
pop rax
push qword [f0203f2313]
push rax
jmp f7313_end
f0203f7313: dq 0
f7313_end:
push qword [f0203r]
pop qword [f0203f7313]
pop rax
push qword [f0203f7313]
push rax
jmp f0413_end
f0203f0413: dq 0
f0413_end:
push qword [f0203l]
pop qword [f0203f0413]
pop rax
push qword [f0203f0413]
push rax
pop rcx
pop rax
jmp rcx
f0203_end:
mov rdi, 32
call malloc
mov qword [rax+8], f0203
mov rcx, [read_texporig_l]
mov qword [rax+16], rcx
mov rcx, [read_texpf1313]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [read_texpreturn_string]
jmp f7203_end
f7203orig_l: dq 0
f7203f1313: dq 0
f7203return_string: dq 0
f7203l: dq 0
f7203r: dq 0
f7203b: dq 0
f7203:
pop qword [f7203orig_l]
pop qword [f7203f1313]
pop qword [f7203return_string]
pop qword [f7203l]
pop qword [f7203r]
pop qword [f7203b]
mov rsp, [f7203f1313]
jmp f1413_end
f7203f1413: dq 0
f1413_end:
jmp f0303_end
f0303orig_l: dq 0
f0303f1313: dq 0
f0303return_string: dq 0
f0303l: dq 0
f0303r: dq 0
f0303b: dq 0
f0303f2413: dq 0
f0303:
pop rax
pop qword [f0303orig_l]
pop qword [f0303f1313]
pop qword [f0303return_string]
pop qword [f0303l]
pop qword [f0303r]
pop qword [f0303b]
push rax
mov [f0303f2413], rsp
mov rsp, [f0303f2413]
jmp f3413_end
f0303f3413: dq 0
f3413_end:
jmp f1303_end
f1303orig_l: dq 0
f1303f1313: dq 0
f1303return_string: dq 0
f1303l: dq 0
f1303r: dq 0
f1303b: dq 0
f1303f2413: dq 0
f1303x: dq 0
f1303aexp: dq 0
f1303block: dq 0
f1303func: dq 0
f1303:
pop qword [f1303orig_l]
pop qword [f1303f1313]
pop qword [f1303return_string]
pop qword [f1303l]
pop qword [f1303r]
pop qword [f1303b]
pop qword [f1303f2413]
pop qword [f1303x]
pop qword [f1303aexp]
pop qword [f1303block]
pop qword [f1303func]
jmp f4413_end
f1303f4413: dq 0
f4413_end:
push qword [f1303b]
pop qword [f1303f4413]
push qword [f1303f4413]
push qword [f1303block]
jmp runtime_call
f1303_end:
mov rdi, 72
call malloc
mov qword [rax+8], f1303
mov rcx, [f0303orig_l]
mov qword [rax+16], rcx
mov rcx, [f0303f1313]
mov qword [rax+24], rcx
mov rcx, [f0303return_string]
mov qword [rax+32], rcx
mov rcx, [f0303l]
mov qword [rax+40], rcx
mov rcx, [f0303r]
mov qword [rax+48], rcx
mov rcx, [f0303b]
mov qword [rax+56], rcx
mov rcx, [f0303f2413]
mov qword [rax+64], rcx
mov qword [rax], 8
push rax
pop qword [f0303f3413]
pop rax
push qword [f0303f3413]
push rax
jmp f5413_end
f0303f5413: dq 0
f5413_end:
push qword [texp_block]
pop qword [f0303f5413]
pop rax
push qword [f0303f5413]
push rax
pop rcx
pop rax
jmp rcx
ret
f0303_end:
mov rdi, 64
call malloc
mov qword [rax+8], f0303
mov rcx, [f7203orig_l]
mov qword [rax+16], rcx
mov rcx, [f7203f1313]
mov qword [rax+24], rcx
mov rcx, [f7203return_string]
mov qword [rax+32], rcx
mov rcx, [f7203l]
mov qword [rax+40], rcx
mov rcx, [f7203r]
mov qword [rax+48], rcx
mov rcx, [f7203b]
mov qword [rax+56], rcx
mov qword [rax], 7
push rax
pop qword [f7203f1413]
pop rax
push qword [f7203f1413]
push rax
jmp f6413_end
f7203f6413: dq 0
f6413_end:
push qword [f7203r]
pop qword [f7203f6413]
pop rax
push qword [f7203f6413]
push rax
jmp f7413_end
f7203f7413: dq 0
f7413_end:
push qword [f7203l]
pop qword [f7203f7413]
pop rax
push qword [f7203f7413]
push rax
pop rcx
pop rax
jmp rcx
f7203_end:
mov rdi, 40
call malloc
mov qword [rax+8], f7203
mov rcx, [read_texporig_l]
mov qword [rax+16], rcx
mov rcx, [read_texpf1313]
mov qword [rax+24], rcx
mov rcx, [read_texpreturn_string]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [read_texpreturn_block]
jmp f6303_end
f6303orig_l: dq 0
f6303f1313: dq 0
f6303return_string: dq 0
f6303return_block: dq 0
f6303l: dq 0
f6303r: dq 0
f6303f: dq 0
f6303:
pop qword [f6303orig_l]
pop qword [f6303f1313]
pop qword [f6303return_string]
pop qword [f6303return_block]
pop qword [f6303l]
pop qword [f6303r]
pop qword [f6303f]
mov rsp, [f6303f1313]
jmp f0513_end
f6303f0513: dq 0
f0513_end:
jmp f7303_end
f7303orig_l: dq 0
f7303f1313: dq 0
f7303return_string: dq 0
f7303return_block: dq 0
f7303l: dq 0
f7303r: dq 0
f7303f: dq 0
f7303f1513: dq 0
f7303:
pop rax
pop qword [f7303orig_l]
pop qword [f7303f1313]
pop qword [f7303return_string]
pop qword [f7303return_block]
pop qword [f7303l]
pop qword [f7303r]
pop qword [f7303f]
push rax
mov [f7303f1513], rsp
mov rsp, [f7303f1513]
jmp f2513_end
f7303f2513: dq 0
f2513_end:
jmp f0403_end
f0403orig_l: dq 0
f0403f1313: dq 0
f0403return_string: dq 0
f0403return_block: dq 0
f0403l: dq 0
f0403r: dq 0
f0403f: dq 0
f0403f1513: dq 0
f0403x: dq 0
f0403aexp: dq 0
f0403block: dq 0
f0403func: dq 0
f0403:
pop qword [f0403orig_l]
pop qword [f0403f1313]
pop qword [f0403return_string]
pop qword [f0403return_block]
pop qword [f0403l]
pop qword [f0403r]
pop qword [f0403f]
pop qword [f0403f1513]
pop qword [f0403x]
pop qword [f0403aexp]
pop qword [f0403block]
pop qword [f0403func]
jmp f3513_end
f0403f3513: dq 0
f3513_end:
push qword [f0403f]
pop qword [f0403f3513]
push qword [f0403f3513]
push qword [f0403func]
jmp runtime_call
f0403_end:
mov rdi, 80
call malloc
mov qword [rax+8], f0403
mov rcx, [f7303orig_l]
mov qword [rax+16], rcx
mov rcx, [f7303f1313]
mov qword [rax+24], rcx
mov rcx, [f7303return_string]
mov qword [rax+32], rcx
mov rcx, [f7303return_block]
mov qword [rax+40], rcx
mov rcx, [f7303l]
mov qword [rax+48], rcx
mov rcx, [f7303r]
mov qword [rax+56], rcx
mov rcx, [f7303f]
mov qword [rax+64], rcx
mov rcx, [f7303f1513]
mov qword [rax+72], rcx
mov qword [rax], 9
push rax
pop qword [f7303f2513]
pop rax
push qword [f7303f2513]
push rax
jmp f4513_end
f7303f4513: dq 0
f4513_end:
push qword [texp_func]
pop qword [f7303f4513]
pop rax
push qword [f7303f4513]
push rax
pop rcx
pop rax
jmp rcx
ret
f7303_end:
mov rdi, 72
call malloc
mov qword [rax+8], f7303
mov rcx, [f6303orig_l]
mov qword [rax+16], rcx
mov rcx, [f6303f1313]
mov qword [rax+24], rcx
mov rcx, [f6303return_string]
mov qword [rax+32], rcx
mov rcx, [f6303return_block]
mov qword [rax+40], rcx
mov rcx, [f6303l]
mov qword [rax+48], rcx
mov rcx, [f6303r]
mov qword [rax+56], rcx
mov rcx, [f6303f]
mov qword [rax+64], rcx
mov qword [rax], 8
push rax
pop qword [f6303f0513]
pop rax
push qword [f6303f0513]
push rax
jmp f5513_end
f6303f5513: dq 0
f5513_end:
push qword [f6303r]
pop qword [f6303f5513]
pop rax
push qword [f6303f5513]
push rax
jmp f6513_end
f6303f6513: dq 0
f6513_end:
push qword [f6303l]
pop qword [f6303f6513]
pop rax
push qword [f6303f6513]
push rax
pop rcx
pop rax
jmp rcx
f6303_end:
mov rdi, 48
call malloc
mov qword [rax+8], f6303
mov rcx, [read_texporig_l]
mov qword [rax+16], rcx
mov rcx, [read_texpf1313]
mov qword [rax+24], rcx
mov rcx, [read_texpreturn_string]
mov qword [rax+32], rcx
mov rcx, [read_texpreturn_block]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [read_texpreturn_func]
jmp f5403_end
f5403orig_l: dq 0
f5403f1313: dq 0
f5403return_string: dq 0
f5403return_block: dq 0
f5403return_func: dq 0
f5403l: dq 0
f5403r: dq 0
f5403a: dq 0
f5403:
pop qword [f5403orig_l]
pop qword [f5403f1313]
pop qword [f5403return_string]
pop qword [f5403return_block]
pop qword [f5403return_func]
pop qword [f5403l]
pop qword [f5403r]
pop qword [f5403a]
mov rsp, [f5403f1313]
jmp f7513_end
f5403f7513: dq 0
f7513_end:
jmp f6403_end
f6403orig_l: dq 0
f6403f1313: dq 0
f6403return_string: dq 0
f6403return_block: dq 0
f6403return_func: dq 0
f6403l: dq 0
f6403r: dq 0
f6403a: dq 0
f6403f0613: dq 0
f6403:
pop rax
pop qword [f6403orig_l]
pop qword [f6403f1313]
pop qword [f6403return_string]
pop qword [f6403return_block]
pop qword [f6403return_func]
pop qword [f6403l]
pop qword [f6403r]
pop qword [f6403a]
push rax
mov [f6403f0613], rsp
mov rsp, [f6403f0613]
jmp f1613_end
f6403f1613: dq 0
f1613_end:
jmp f7403_end
f7403orig_l: dq 0
f7403f1313: dq 0
f7403return_string: dq 0
f7403return_block: dq 0
f7403return_func: dq 0
f7403l: dq 0
f7403r: dq 0
f7403a: dq 0
f7403f0613: dq 0
f7403x: dq 0
f7403aexp: dq 0
f7403block: dq 0
f7403func: dq 0
f7403:
pop qword [f7403orig_l]
pop qword [f7403f1313]
pop qword [f7403return_string]
pop qword [f7403return_block]
pop qword [f7403return_func]
pop qword [f7403l]
pop qword [f7403r]
pop qword [f7403a]
pop qword [f7403f0613]
pop qword [f7403x]
pop qword [f7403aexp]
pop qword [f7403block]
pop qword [f7403func]
jmp f2613_end
f7403f2613: dq 0
f2613_end:
push qword [f7403a]
pop qword [f7403f2613]
push qword [f7403f2613]
push qword [f7403aexp]
jmp runtime_call
f7403_end:
mov rdi, 88
call malloc
mov qword [rax+8], f7403
mov rcx, [f6403orig_l]
mov qword [rax+16], rcx
mov rcx, [f6403f1313]
mov qword [rax+24], rcx
mov rcx, [f6403return_string]
mov qword [rax+32], rcx
mov rcx, [f6403return_block]
mov qword [rax+40], rcx
mov rcx, [f6403return_func]
mov qword [rax+48], rcx
mov rcx, [f6403l]
mov qword [rax+56], rcx
mov rcx, [f6403r]
mov qword [rax+64], rcx
mov rcx, [f6403a]
mov qword [rax+72], rcx
mov rcx, [f6403f0613]
mov qword [rax+80], rcx
mov qword [rax], 10
push rax
pop qword [f6403f1613]
pop rax
push qword [f6403f1613]
push rax
jmp f3613_end
f6403f3613: dq 0
f3613_end:
push qword [texp_aexp]
pop qword [f6403f3613]
pop rax
push qword [f6403f3613]
push rax
pop rcx
pop rax
jmp rcx
ret
f6403_end:
mov rdi, 80
call malloc
mov qword [rax+8], f6403
mov rcx, [f5403orig_l]
mov qword [rax+16], rcx
mov rcx, [f5403f1313]
mov qword [rax+24], rcx
mov rcx, [f5403return_string]
mov qword [rax+32], rcx
mov rcx, [f5403return_block]
mov qword [rax+40], rcx
mov rcx, [f5403return_func]
mov qword [rax+48], rcx
mov rcx, [f5403l]
mov qword [rax+56], rcx
mov rcx, [f5403r]
mov qword [rax+64], rcx
mov rcx, [f5403a]
mov qword [rax+72], rcx
mov qword [rax], 9
push rax
pop qword [f5403f7513]
pop rax
push qword [f5403f7513]
push rax
jmp f4613_end
f5403f4613: dq 0
f4613_end:
push qword [f5403r]
pop qword [f5403f4613]
pop rax
push qword [f5403f4613]
push rax
jmp f5613_end
f5403f5613: dq 0
f5613_end:
push qword [f5403l]
pop qword [f5403f5613]
pop rax
push qword [f5403f5613]
push rax
pop rcx
pop rax
jmp rcx
f5403_end:
mov rdi, 56
call malloc
mov qword [rax+8], f5403
mov rcx, [read_texporig_l]
mov qword [rax+16], rcx
mov rcx, [read_texpf1313]
mov qword [rax+24], rcx
mov rcx, [read_texpreturn_string]
mov qword [rax+32], rcx
mov rcx, [read_texpreturn_block]
mov qword [rax+40], rcx
mov rcx, [read_texpreturn_func]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [read_texpreturn_aexp]
push qword [read_texporig_l]
push qword [read_texpr]
push qword [read_texpf1313]
push qword [read_texpl]
push qword [read_texpreturn_string]
push qword [read_texpreturn_block]
push qword [read_texpreturn_func]
push qword [read_texpreturn_aexp]
jmp f6613_end
read_texpf6613: dq 0
f6613_end:
push qword [read_texpr]
pop qword [read_texpf6613]
push qword [read_texpf6613]
jmp f7613_end
read_texpf7613: dq 0
f7613_end:
push qword [read_texpl]
pop qword [read_texpf7613]
push qword [read_texpf7613]
call read_token
push rax
pop qword [read_texpnl]
pop qword [read_texpnr]
pop qword [read_texpt]
pop qword [read_texptl]
pop qword [read_texptr]
pop qword [read_texpreturn_aexp]
pop qword [read_texpreturn_func]
pop qword [read_texpreturn_block]
pop qword [read_texpreturn_string]
pop qword [read_texpl]
pop qword [read_texpf1313]
pop qword [read_texpr]
pop qword [read_texporig_l]
jmp f0713_end
read_texpf0713: dq 0
f0713_end:
jmp f0603_end
f0603orig_l: dq 0
f0603r: dq 0
f0603f1313: dq 0
f0603l: dq 0
f0603return_string: dq 0
f0603return_block: dq 0
f0603return_func: dq 0
f0603return_aexp: dq 0
f0603nl: dq 0
f0603nr: dq 0
f0603t: dq 0
f0603tl: dq 0
f0603tr: dq 0
f0603break: dq 0
f0603:
pop qword [f0603orig_l]
pop qword [f0603r]
pop qword [f0603f1313]
pop qword [f0603l]
pop qword [f0603return_string]
pop qword [f0603return_block]
pop qword [f0603return_func]
pop qword [f0603return_aexp]
pop qword [f0603nl]
pop qword [f0603nr]
pop qword [f0603t]
pop qword [f0603tl]
pop qword [f0603tr]
pop qword [f0603break]
jmp f1713_end
f0603f1713: dq 0
f1713_end:
jmp f4603_end
f4603orig_l: dq 0
f4603r: dq 0
f4603f1313: dq 0
f4603l: dq 0
f4603return_string: dq 0
f4603return_block: dq 0
f4603return_func: dq 0
f4603return_aexp: dq 0
f4603nl: dq 0
f4603nr: dq 0
f4603t: dq 0
f4603tl: dq 0
f4603tr: dq 0
f4603break: dq 0
f4603f2713: dq 0
f4603:
pop rax
pop qword [f4603orig_l]
pop qword [f4603r]
pop qword [f4603f1313]
pop qword [f4603l]
pop qword [f4603return_string]
pop qword [f4603return_block]
pop qword [f4603return_func]
pop qword [f4603return_aexp]
pop qword [f4603nl]
pop qword [f4603nr]
pop qword [f4603t]
pop qword [f4603tl]
pop qword [f4603tr]
pop qword [f4603break]
push rax
mov [f4603f2713], rsp
mov rsp, [f4603f2713]
jmp f3713_end
f4603f3713: dq 0
f3713_end:
push qword [f4603tr]
pop qword [f4603f3713]
pop rax
push qword [f4603f3713]
push rax
jmp f4713_end
f4603f4713: dq 0
f4713_end:
push qword [f4603tl]
pop qword [f4603f4713]
pop rax
push qword [f4603f4713]
push rax
pop rcx
pop rax
jmp rcx
ret
f4603_end:
mov rdi, 128
call malloc
mov qword [rax+8], f4603
mov rcx, [f0603orig_l]
mov qword [rax+16], rcx
mov rcx, [f0603r]
mov qword [rax+24], rcx
mov rcx, [f0603f1313]
mov qword [rax+32], rcx
mov rcx, [f0603l]
mov qword [rax+40], rcx
mov rcx, [f0603return_string]
mov qword [rax+48], rcx
mov rcx, [f0603return_block]
mov qword [rax+56], rcx
mov rcx, [f0603return_func]
mov qword [rax+64], rcx
mov rcx, [f0603return_aexp]
mov qword [rax+72], rcx
mov rcx, [f0603nl]
mov qword [rax+80], rcx
mov rcx, [f0603nr]
mov qword [rax+88], rcx
mov rcx, [f0603t]
mov qword [rax+96], rcx
mov rcx, [f0603tl]
mov qword [rax+104], rcx
mov rcx, [f0603tr]
mov qword [rax+112], rcx
mov rcx, [f0603break]
mov qword [rax+120], rcx
mov qword [rax], 15
push rax
pop qword [f0603f1713]
push qword [f0603f1713]
jmp f5713_end
f0603f5713: dq 0
f5713_end:
push qword [f0603nr]
pop qword [f0603f5713]
push qword [f0603f5713]
jmp f6713_end
f0603f6713: dq 0
f6713_end:
push qword [f0603nl]
pop qword [f0603f6713]
push qword [f0603f6713]
push qword [f0603return_aexp]
jmp runtime_call
f0603_end:
mov rdi, 120
call malloc
mov qword [rax+8], f0603
mov rcx, [read_texporig_l]
mov qword [rax+16], rcx
mov rcx, [read_texpr]
mov qword [rax+24], rcx
mov rcx, [read_texpf1313]
mov qword [rax+32], rcx
mov rcx, [read_texpl]
mov qword [rax+40], rcx
mov rcx, [read_texpreturn_string]
mov qword [rax+48], rcx
mov rcx, [read_texpreturn_block]
mov qword [rax+56], rcx
mov rcx, [read_texpreturn_func]
mov qword [rax+64], rcx
mov rcx, [read_texpreturn_aexp]
mov qword [rax+72], rcx
mov rcx, [read_texpnl]
mov qword [rax+80], rcx
mov rcx, [read_texpnr]
mov qword [rax+88], rcx
mov rcx, [read_texpt]
mov qword [rax+96], rcx
mov rcx, [read_texptl]
mov qword [rax+104], rcx
mov rcx, [read_texptr]
mov qword [rax+112], rcx
mov qword [rax], 14
push rax
pop qword [read_texpf0713]
push qword [read_texpf0713]
jmp f7713_end
read_texpf7713: dq 0
f7713_end:
jmp f0023_end
read_texpf0023: dq 0
f0023_end:
push 1
pop qword [read_texpf0023]
push qword [read_texpf0023]
jmp f1023_end
read_texpf1023: dq 0
f1023_end:
push qword [read_texpt]
pop qword [read_texpf1023]
push qword [read_texpf1023]
call eq
push rax
pop qword [read_texpf7713]
push qword [read_texpf7713]
call if
push rax
pop qword [read_texpf4503]
jmp f2023_end
read_texpf2023: dq 0
f2023_end:
jmp f2703_end
f2703orig_l: dq 0
f2703r: dq 0
f2703f1313: dq 0
f2703l: dq 0
f2703return_string: dq 0
f2703return_block: dq 0
f2703return_func: dq 0
f2703return_aexp: dq 0
f2703nl: dq 0
f2703nr: dq 0
f2703t: dq 0
f2703tl: dq 0
f2703tr: dq 0
f2703f4503: dq 0
f2703break: dq 0
f2703cexp: dq 0
f2703tokenizer: dq 0
f2703f3703: dq 0
f2703:
pop qword [f2703orig_l]
pop qword [f2703r]
pop qword [f2703f1313]
pop qword [f2703l]
pop qword [f2703return_string]
pop qword [f2703return_block]
pop qword [f2703return_func]
pop qword [f2703return_aexp]
pop qword [f2703nl]
pop qword [f2703nr]
pop qword [f2703t]
pop qword [f2703tl]
pop qword [f2703tr]
pop qword [f2703f4503]
pop qword [f2703break]
push qword [f2703orig_l]
push qword [f2703r]
push qword [f2703f1313]
push qword [f2703l]
push qword [f2703return_string]
push qword [f2703return_block]
push qword [f2703return_func]
push qword [f2703return_aexp]
push qword [f2703nl]
push qword [f2703nr]
push qword [f2703t]
push qword [f2703tl]
push qword [f2703tr]
push qword [f2703f4503]
push qword [f2703break]
jmp f3023_end
f2703f3023: dq 0
f3023_end:
push qword [f2703orig_l]
push qword [f2703r]
push qword [f2703f1313]
push qword [f2703l]
push qword [f2703return_string]
push qword [f2703return_block]
push qword [f2703return_func]
push qword [f2703return_aexp]
push qword [f2703nl]
push qword [f2703nr]
push qword [f2703t]
push qword [f2703tl]
push qword [f2703tr]
push qword [f2703f4503]
push qword [f2703break]
jmp f4023_end
f2703f4023: dq 0
f4023_end:
push qword [f2703nr]
pop qword [f2703f4023]
push qword [f2703f4023]
jmp f5023_end
f2703f5023: dq 0
f5023_end:
push qword [f2703nl]
pop qword [f2703f5023]
push qword [f2703f5023]
call make_tokenizer
push rax
pop qword [f2703f3023]
pop qword [f2703break]
pop qword [f2703f4503]
pop qword [f2703tr]
pop qword [f2703tl]
pop qword [f2703t]
pop qword [f2703nr]
pop qword [f2703nl]
pop qword [f2703return_aexp]
pop qword [f2703return_func]
pop qword [f2703return_block]
pop qword [f2703return_string]
pop qword [f2703l]
pop qword [f2703f1313]
pop qword [f2703r]
pop qword [f2703orig_l]
push qword [f2703f3023]
call read_cexp
push rax
pop qword [f2703cexp]
pop qword [f2703tokenizer]
pop qword [f2703break]
pop qword [f2703f4503]
pop qword [f2703tr]
pop qword [f2703tl]
pop qword [f2703t]
pop qword [f2703nr]
pop qword [f2703nl]
pop qword [f2703return_aexp]
pop qword [f2703return_func]
pop qword [f2703return_block]
pop qword [f2703return_string]
pop qword [f2703l]
pop qword [f2703f1313]
pop qword [f2703r]
pop qword [f2703orig_l]
push qword [f2703orig_l]
push qword [f2703f1313]
push qword [f2703return_string]
push qword [f2703return_block]
push qword [f2703return_func]
push qword [f2703return_aexp]
push qword [f2703nl]
push qword [f2703nr]
push qword [f2703t]
push qword [f2703tl]
push qword [f2703tr]
push qword [f2703f4503]
push qword [f2703break]
push qword [f2703cexp]
push qword [f2703tokenizer]
jmp f6023_end
f2703f6023: dq 0
f6023_end:
push qword [f2703tokenizer]
pop qword [f2703f6023]
push qword [f2703f6023]
call tokenizer_to_lr
push rax
pop qword [f2703l]
pop qword [f2703r]
pop qword [f2703tokenizer]
pop qword [f2703cexp]
pop qword [f2703break]
pop qword [f2703f4503]
pop qword [f2703tr]
pop qword [f2703tl]
pop qword [f2703t]
pop qword [f2703nr]
pop qword [f2703nl]
pop qword [f2703return_aexp]
pop qword [f2703return_func]
pop qword [f2703return_block]
pop qword [f2703return_string]
pop qword [f2703f1313]
pop qword [f2703orig_l]
push qword [f2703orig_l]
push qword [f2703f1313]
push qword [f2703return_string]
push qword [f2703return_block]
push qword [f2703return_func]
push qword [f2703return_aexp]
push qword [f2703nl]
push qword [f2703nr]
push qword [f2703f4503]
push qword [f2703break]
push qword [f2703cexp]
push qword [f2703tokenizer]
jmp f7023_end
f2703f7023: dq 0
f7023_end:
push qword [f2703r]
pop qword [f2703f7023]
push qword [f2703f7023]
jmp f0123_end
f2703f0123: dq 0
f0123_end:
push qword [f2703l]
pop qword [f2703f0123]
push qword [f2703f0123]
call read_token
push rax
pop qword [f2703l]
pop qword [f2703r]
pop qword [f2703t]
pop qword [f2703tl]
pop qword [f2703tr]
pop qword [f2703tokenizer]
pop qword [f2703cexp]
pop qword [f2703break]
pop qword [f2703f4503]
pop qword [f2703nr]
pop qword [f2703nl]
pop qword [f2703return_aexp]
pop qword [f2703return_func]
pop qword [f2703return_block]
pop qword [f2703return_string]
pop qword [f2703f1313]
pop qword [f2703orig_l]
jmp f1123_end
f2703f1123: dq 0
f1123_end:
jmp f5703_end
f5703orig_l: dq 0
f5703f1313: dq 0
f5703return_string: dq 0
f5703return_block: dq 0
f5703return_func: dq 0
f5703return_aexp: dq 0
f5703nl: dq 0
f5703nr: dq 0
f5703f4503: dq 0
f5703break: dq 0
f5703cexp: dq 0
f5703tokenizer: dq 0
f5703l: dq 0
f5703r: dq 0
f5703t: dq 0
f5703tl: dq 0
f5703tr: dq 0
f5703break2: dq 0
f5703:
pop qword [f5703orig_l]
pop qword [f5703f1313]
pop qword [f5703return_string]
pop qword [f5703return_block]
pop qword [f5703return_func]
pop qword [f5703return_aexp]
pop qword [f5703nl]
pop qword [f5703nr]
pop qword [f5703f4503]
pop qword [f5703break]
pop qword [f5703cexp]
pop qword [f5703tokenizer]
pop qword [f5703l]
pop qword [f5703r]
pop qword [f5703t]
pop qword [f5703tl]
pop qword [f5703tr]
pop qword [f5703break2]
push qword [f5703break]
jmp runtime_call
f5703_end:
mov rdi, 152
call malloc
mov qword [rax+8], f5703
mov rcx, [f2703orig_l]
mov qword [rax+16], rcx
mov rcx, [f2703f1313]
mov qword [rax+24], rcx
mov rcx, [f2703return_string]
mov qword [rax+32], rcx
mov rcx, [f2703return_block]
mov qword [rax+40], rcx
mov rcx, [f2703return_func]
mov qword [rax+48], rcx
mov rcx, [f2703return_aexp]
mov qword [rax+56], rcx
mov rcx, [f2703nl]
mov qword [rax+64], rcx
mov rcx, [f2703nr]
mov qword [rax+72], rcx
mov rcx, [f2703f4503]
mov qword [rax+80], rcx
mov rcx, [f2703break]
mov qword [rax+88], rcx
mov rcx, [f2703cexp]
mov qword [rax+96], rcx
mov rcx, [f2703tokenizer]
mov qword [rax+104], rcx
mov rcx, [f2703l]
mov qword [rax+112], rcx
mov rcx, [f2703r]
mov qword [rax+120], rcx
mov rcx, [f2703t]
mov qword [rax+128], rcx
mov rcx, [f2703tl]
mov qword [rax+136], rcx
mov rcx, [f2703tr]
mov qword [rax+144], rcx
mov qword [rax], 18
push rax
pop qword [f2703f1123]
push qword [f2703f1123]
jmp f2123_end
f2703f2123: dq 0
f2123_end:
push qword [f2703orig_l]
push qword [f2703f1313]
push qword [f2703return_string]
push qword [f2703return_block]
push qword [f2703return_func]
push qword [f2703return_aexp]
push qword [f2703nl]
push qword [f2703nr]
push qword [f2703f4503]
push qword [f2703break]
push qword [f2703cexp]
push qword [f2703tokenizer]
push qword [f2703l]
push qword [f2703r]
push qword [f2703t]
push qword [f2703tl]
push qword [f2703tr]
jmp f3123_end
f2703f3123: dq 0
f3123_end:
push qword [f2703orig_l]
push qword [f2703f1313]
push qword [f2703return_string]
push qword [f2703return_block]
push qword [f2703return_func]
push qword [f2703return_aexp]
push qword [f2703nl]
push qword [f2703nr]
push qword [f2703f4503]
push qword [f2703break]
push qword [f2703cexp]
push qword [f2703tokenizer]
push qword [f2703l]
push qword [f2703r]
push qword [f2703t]
push qword [f2703tl]
push qword [f2703tr]
jmp f4123_end
f2703f4123: dq 0
f4123_end:
push qword [f2703tl]
pop qword [f2703f4123]
push qword [f2703f4123]
jmp f5123_end
f2703f5123: dq 0
f5123_end:
jmp f6123_end
f6123: db `}`
db 0
f6123_end: push f6123
pop qword [f2703f5123]
push qword [f2703f5123]
call matches
push rax
pop qword [f2703f3123]
pop qword [f2703tr]
pop qword [f2703tl]
pop qword [f2703t]
pop qword [f2703r]
pop qword [f2703l]
pop qword [f2703tokenizer]
pop qword [f2703cexp]
pop qword [f2703break]
pop qword [f2703f4503]
pop qword [f2703nr]
pop qword [f2703nl]
pop qword [f2703return_aexp]
pop qword [f2703return_func]
pop qword [f2703return_block]
pop qword [f2703return_string]
pop qword [f2703f1313]
pop qword [f2703orig_l]
push qword [f2703f3123]
call not
push rax
pop qword [f2703f2123]
pop qword [f2703tr]
pop qword [f2703tl]
pop qword [f2703t]
pop qword [f2703r]
pop qword [f2703l]
pop qword [f2703tokenizer]
pop qword [f2703cexp]
pop qword [f2703break]
pop qword [f2703f4503]
pop qword [f2703nr]
pop qword [f2703nl]
pop qword [f2703return_aexp]
pop qword [f2703return_func]
pop qword [f2703return_block]
pop qword [f2703return_string]
pop qword [f2703f1313]
pop qword [f2703orig_l]
push qword [f2703f2123]
call if
push rax
pop qword [f2703f3703]
jmp f7123_end
f2703f7123: dq 0
f7123_end:
jmp f4013_end
f4013orig_l: dq 0
f4013f1313: dq 0
f4013return_string: dq 0
f4013return_block: dq 0
f4013return_func: dq 0
f4013return_aexp: dq 0
f4013nl: dq 0
f4013nr: dq 0
f4013f4503: dq 0
f4013break: dq 0
f4013cexp: dq 0
f4013tokenizer: dq 0
f4013l: dq 0
f4013r: dq 0
f4013t: dq 0
f4013tl: dq 0
f4013tr: dq 0
f4013f3703: dq 0
f4013f0223: dq 0
f4013:
pop rax
pop qword [f4013orig_l]
pop qword [f4013f1313]
pop qword [f4013return_string]
pop qword [f4013return_block]
pop qword [f4013return_func]
pop qword [f4013return_aexp]
pop qword [f4013nl]
pop qword [f4013nr]
pop qword [f4013f4503]
pop qword [f4013break]
pop qword [f4013cexp]
pop qword [f4013tokenizer]
pop qword [f4013l]
pop qword [f4013r]
pop qword [f4013t]
pop qword [f4013tl]
pop qword [f4013tr]
pop qword [f4013f3703]
push rax
mov [f4013f0223], rsp
mov rsp, [f4013f0223]
jmp f1223_end
f4013f1223: dq 0
f1223_end:
push qword [f4013cexp]
pop qword [f4013f1223]
pop rax
push qword [f4013f1223]
push rax
pop rcx
pop rax
jmp rcx
ret
f4013_end:
mov rdi, 160
call malloc
mov qword [rax+8], f4013
mov rcx, [f2703orig_l]
mov qword [rax+16], rcx
mov rcx, [f2703f1313]
mov qword [rax+24], rcx
mov rcx, [f2703return_string]
mov qword [rax+32], rcx
mov rcx, [f2703return_block]
mov qword [rax+40], rcx
mov rcx, [f2703return_func]
mov qword [rax+48], rcx
mov rcx, [f2703return_aexp]
mov qword [rax+56], rcx
mov rcx, [f2703nl]
mov qword [rax+64], rcx
mov rcx, [f2703nr]
mov qword [rax+72], rcx
mov rcx, [f2703f4503]
mov qword [rax+80], rcx
mov rcx, [f2703break]
mov qword [rax+88], rcx
mov rcx, [f2703cexp]
mov qword [rax+96], rcx
mov rcx, [f2703tokenizer]
mov qword [rax+104], rcx
mov rcx, [f2703l]
mov qword [rax+112], rcx
mov rcx, [f2703r]
mov qword [rax+120], rcx
mov rcx, [f2703t]
mov qword [rax+128], rcx
mov rcx, [f2703tl]
mov qword [rax+136], rcx
mov rcx, [f2703tr]
mov qword [rax+144], rcx
mov rcx, [f2703f3703]
mov qword [rax+152], rcx
mov qword [rax], 19
push rax
pop qword [f2703f7123]
push qword [f2703f7123]
jmp f2223_end
f2703f2223: dq 0
f2223_end:
push qword [f2703r]
pop qword [f2703f2223]
push qword [f2703f2223]
jmp f3223_end
f2703f3223: dq 0
f3223_end:
push qword [f2703l]
pop qword [f2703f3223]
push qword [f2703f3223]
push qword [f2703return_block]
jmp runtime_call
f2703_end:
mov rdi, 128
call malloc
mov qword [rax+8], f2703
mov rcx, [read_texporig_l]
mov qword [rax+16], rcx
mov rcx, [read_texpr]
mov qword [rax+24], rcx
mov rcx, [read_texpf1313]
mov qword [rax+32], rcx
mov rcx, [read_texpl]
mov qword [rax+40], rcx
mov rcx, [read_texpreturn_string]
mov qword [rax+48], rcx
mov rcx, [read_texpreturn_block]
mov qword [rax+56], rcx
mov rcx, [read_texpreturn_func]
mov qword [rax+64], rcx
mov rcx, [read_texpreturn_aexp]
mov qword [rax+72], rcx
mov rcx, [read_texpnl]
mov qword [rax+80], rcx
mov rcx, [read_texpnr]
mov qword [rax+88], rcx
mov rcx, [read_texpt]
mov qword [rax+96], rcx
mov rcx, [read_texptl]
mov qword [rax+104], rcx
mov rcx, [read_texptr]
mov qword [rax+112], rcx
mov rcx, [read_texpf4503]
mov qword [rax+120], rcx
mov qword [rax], 15
push rax
pop qword [read_texpf2023]
push qword [read_texpf2023]
jmp f4223_end
read_texpf4223: dq 0
f4223_end:
push qword [read_texporig_l]
push qword [read_texpr]
push qword [read_texpf1313]
push qword [read_texpl]
push qword [read_texpreturn_string]
push qword [read_texpreturn_block]
push qword [read_texpreturn_func]
push qword [read_texpreturn_aexp]
push qword [read_texpnl]
push qword [read_texpnr]
push qword [read_texpt]
push qword [read_texptl]
push qword [read_texptr]
push qword [read_texpf4503]
jmp f5223_end
read_texpf5223: dq 0
f5223_end:
push qword [read_texptl]
pop qword [read_texpf5223]
push qword [read_texpf5223]
jmp f6223_end
read_texpf6223: dq 0
f6223_end:
jmp f7223_end
f7223: db `{`
db 0
f7223_end: push f7223
pop qword [read_texpf6223]
push qword [read_texpf6223]
call matches
push rax
pop qword [read_texpf4223]
pop qword [read_texpf4503]
pop qword [read_texptr]
pop qword [read_texptl]
pop qword [read_texpt]
pop qword [read_texpnr]
pop qword [read_texpnl]
pop qword [read_texpreturn_aexp]
pop qword [read_texpreturn_func]
pop qword [read_texpreturn_block]
pop qword [read_texpreturn_string]
pop qword [read_texpl]
pop qword [read_texpf1313]
pop qword [read_texpr]
pop qword [read_texporig_l]
push qword [read_texpf4223]
call if
push rax
pop qword [read_texpf0703]
push qword [read_texporig_l]
push qword [read_texpr]
push qword [read_texpf1313]
push qword [read_texpl]
push qword [read_texpreturn_string]
push qword [read_texpreturn_block]
push qword [read_texpreturn_func]
push qword [read_texpreturn_aexp]
push qword [read_texpnl]
push qword [read_texpnr]
push qword [read_texpt]
push qword [read_texptl]
push qword [read_texptr]
push qword [read_texpf4503]
push qword [read_texpf0703]
jmp f0323_end
read_texpf0323: dq 0
f0323_end:
push qword [read_texpr]
pop qword [read_texpf0323]
push qword [read_texpf0323]
jmp f1323_end
read_texpf1323: dq 0
f1323_end:
push qword [read_texpl]
pop qword [read_texpf1323]
push qword [read_texpf1323]
call make_tokenizer
push rax
pop qword [read_texptokenizer]
pop qword [read_texpf0703]
pop qword [read_texpf4503]
pop qword [read_texptr]
pop qword [read_texptl]
pop qword [read_texpt]
pop qword [read_texpnr]
pop qword [read_texpnl]
pop qword [read_texpreturn_aexp]
pop qword [read_texpreturn_func]
pop qword [read_texpreturn_block]
pop qword [read_texpreturn_string]
pop qword [read_texpl]
pop qword [read_texpf1313]
pop qword [read_texpr]
pop qword [read_texporig_l]
push qword [read_texporig_l]
push qword [read_texpr]
push qword [read_texpf1313]
push qword [read_texpl]
push qword [read_texpreturn_string]
push qword [read_texpreturn_block]
push qword [read_texpreturn_func]
push qword [read_texpreturn_aexp]
push qword [read_texpnl]
push qword [read_texpnr]
push qword [read_texpt]
push qword [read_texptl]
push qword [read_texptr]
push qword [read_texpf4503]
push qword [read_texpf0703]
jmp f2323_end
read_texpf2323: dq 0
f2323_end:
push qword [read_texptokenizer]
pop qword [read_texpf2323]
push qword [read_texpf2323]
call read_function
push rax
pop qword [read_texpfunc]
pop qword [read_texptokenizer]
pop qword [read_texpf0703]
pop qword [read_texpf4503]
pop qword [read_texptr]
pop qword [read_texptl]
pop qword [read_texpt]
pop qword [read_texpnr]
pop qword [read_texpnl]
pop qword [read_texpreturn_aexp]
pop qword [read_texpreturn_func]
pop qword [read_texpreturn_block]
pop qword [read_texpreturn_string]
pop qword [read_texpl]
pop qword [read_texpf1313]
pop qword [read_texpr]
pop qword [read_texporig_l]
push qword [read_texporig_l]
push qword [read_texpr]
push qword [read_texpf1313]
push qword [read_texpl]
push qword [read_texpreturn_string]
push qword [read_texpreturn_block]
push qword [read_texpreturn_func]
push qword [read_texpreturn_aexp]
push qword [read_texpnl]
push qword [read_texpnr]
push qword [read_texpt]
push qword [read_texptl]
push qword [read_texptr]
push qword [read_texpf4503]
push qword [read_texpf0703]
push qword [read_texpfunc]
push qword [read_texptokenizer]
jmp f3323_end
read_texpf3323: dq 0
f3323_end:
jmp f1113_end
f1113orig_l: dq 0
f1113r: dq 0
f1113f1313: dq 0
f1113l: dq 0
f1113return_string: dq 0
f1113return_block: dq 0
f1113return_func: dq 0
f1113return_aexp: dq 0
f1113nl: dq 0
f1113nr: dq 0
f1113t: dq 0
f1113tl: dq 0
f1113tr: dq 0
f1113f4503: dq 0
f1113f0703: dq 0
f1113func: dq 0
f1113tokenizer: dq 0
f1113break: dq 0
f1113token: dq 0
f1113tmp_tokenizer: dq 0
f1113:
pop qword [f1113orig_l]
pop qword [f1113r]
pop qword [f1113f1313]
pop qword [f1113l]
pop qword [f1113return_string]
pop qword [f1113return_block]
pop qword [f1113return_func]
pop qword [f1113return_aexp]
pop qword [f1113nl]
pop qword [f1113nr]
pop qword [f1113t]
pop qword [f1113tl]
pop qword [f1113tr]
pop qword [f1113f4503]
pop qword [f1113f0703]
pop qword [f1113func]
pop qword [f1113tokenizer]
pop qword [f1113break]
push qword [f1113orig_l]
push qword [f1113r]
push qword [f1113f1313]
push qword [f1113l]
push qword [f1113return_string]
push qword [f1113return_block]
push qword [f1113return_func]
push qword [f1113return_aexp]
push qword [f1113nl]
push qword [f1113nr]
push qword [f1113t]
push qword [f1113tl]
push qword [f1113tr]
push qword [f1113f4503]
push qword [f1113f0703]
push qword [f1113func]
push qword [f1113tokenizer]
push qword [f1113break]
push qword [f1113tokenizer]
call runtime_call_ret
push rax
pop qword [f1113token]
pop qword [f1113tmp_tokenizer]
pop qword [f1113break]
pop qword [f1113tokenizer]
pop qword [f1113func]
pop qword [f1113f0703]
pop qword [f1113f4503]
pop qword [f1113tr]
pop qword [f1113tl]
pop qword [f1113t]
pop qword [f1113nr]
pop qword [f1113nl]
pop qword [f1113return_aexp]
pop qword [f1113return_func]
pop qword [f1113return_block]
pop qword [f1113return_string]
pop qword [f1113l]
pop qword [f1113f1313]
pop qword [f1113r]
pop qword [f1113orig_l]
push qword [f1113orig_l]
push qword [f1113r]
push qword [f1113f1313]
push qword [f1113l]
push qword [f1113return_string]
push qword [f1113return_block]
push qword [f1113return_func]
push qword [f1113return_aexp]
push qword [f1113nl]
push qword [f1113nr]
push qword [f1113f4503]
push qword [f1113f0703]
push qword [f1113func]
push qword [f1113tokenizer]
push qword [f1113break]
push qword [f1113token]
push qword [f1113tmp_tokenizer]
push qword [f1113token]
call runtime_call_ret
push rax
pop qword [f1113t]
pop qword [f1113tl]
pop qword [f1113tr]
pop qword [f1113tmp_tokenizer]
pop qword [f1113token]
pop qword [f1113break]
pop qword [f1113tokenizer]
pop qword [f1113func]
pop qword [f1113f0703]
pop qword [f1113f4503]
pop qword [f1113nr]
pop qword [f1113nl]
pop qword [f1113return_aexp]
pop qword [f1113return_func]
pop qword [f1113return_block]
pop qword [f1113return_string]
pop qword [f1113l]
pop qword [f1113f1313]
pop qword [f1113r]
pop qword [f1113orig_l]
jmp f4323_end
f1113f4323: dq 0
f4323_end:
jmp f5113_end
f5113orig_l: dq 0
f5113r: dq 0
f5113f1313: dq 0
f5113l: dq 0
f5113return_string: dq 0
f5113return_block: dq 0
f5113return_func: dq 0
f5113return_aexp: dq 0
f5113nl: dq 0
f5113nr: dq 0
f5113f4503: dq 0
f5113f0703: dq 0
f5113func: dq 0
f5113tokenizer: dq 0
f5113break: dq 0
f5113token: dq 0
f5113tmp_tokenizer: dq 0
f5113t: dq 0
f5113tl: dq 0
f5113tr: dq 0
f5113f5323: dq 0
f5113:
pop rax
pop qword [f5113orig_l]
pop qword [f5113r]
pop qword [f5113f1313]
pop qword [f5113l]
pop qword [f5113return_string]
pop qword [f5113return_block]
pop qword [f5113return_func]
pop qword [f5113return_aexp]
pop qword [f5113nl]
pop qword [f5113nr]
pop qword [f5113f4503]
pop qword [f5113f0703]
pop qword [f5113func]
pop qword [f5113tokenizer]
pop qword [f5113break]
pop qword [f5113token]
pop qword [f5113tmp_tokenizer]
pop qword [f5113t]
pop qword [f5113tl]
pop qword [f5113tr]
push rax
mov [f5113f5323], rsp
mov rsp, [f5113f5323]
jmp f6323_end
f5113f6323: dq 0
f6323_end:
push qword [f5113func]
pop qword [f5113f6323]
pop rax
push qword [f5113f6323]
push rax
pop rcx
pop rax
jmp rcx
ret
f5113_end:
mov rdi, 176
call malloc
mov qword [rax+8], f5113
mov rcx, [f1113orig_l]
mov qword [rax+16], rcx
mov rcx, [f1113r]
mov qword [rax+24], rcx
mov rcx, [f1113f1313]
mov qword [rax+32], rcx
mov rcx, [f1113l]
mov qword [rax+40], rcx
mov rcx, [f1113return_string]
mov qword [rax+48], rcx
mov rcx, [f1113return_block]
mov qword [rax+56], rcx
mov rcx, [f1113return_func]
mov qword [rax+64], rcx
mov rcx, [f1113return_aexp]
mov qword [rax+72], rcx
mov rcx, [f1113nl]
mov qword [rax+80], rcx
mov rcx, [f1113nr]
mov qword [rax+88], rcx
mov rcx, [f1113f4503]
mov qword [rax+96], rcx
mov rcx, [f1113f0703]
mov qword [rax+104], rcx
mov rcx, [f1113func]
mov qword [rax+112], rcx
mov rcx, [f1113tokenizer]
mov qword [rax+120], rcx
mov rcx, [f1113break]
mov qword [rax+128], rcx
mov rcx, [f1113token]
mov qword [rax+136], rcx
mov rcx, [f1113tmp_tokenizer]
mov qword [rax+144], rcx
mov rcx, [f1113t]
mov qword [rax+152], rcx
mov rcx, [f1113tl]
mov qword [rax+160], rcx
mov rcx, [f1113tr]
mov qword [rax+168], rcx
mov qword [rax], 21
push rax
pop qword [f1113f4323]
push qword [f1113f4323]
jmp f7323_end
f1113f7323: dq 0
f7323_end:
push qword [f1113r]
pop qword [f1113f7323]
push qword [f1113f7323]
jmp f0423_end
f1113f0423: dq 0
f0423_end:
push qword [f1113tl]
pop qword [f1113f0423]
push qword [f1113f0423]
push qword [f1113return_func]
jmp runtime_call
f1113_end:
mov rdi, 152
call malloc
mov qword [rax+8], f1113
mov rcx, [read_texporig_l]
mov qword [rax+16], rcx
mov rcx, [read_texpr]
mov qword [rax+24], rcx
mov rcx, [read_texpf1313]
mov qword [rax+32], rcx
mov rcx, [read_texpl]
mov qword [rax+40], rcx
mov rcx, [read_texpreturn_string]
mov qword [rax+48], rcx
mov rcx, [read_texpreturn_block]
mov qword [rax+56], rcx
mov rcx, [read_texpreturn_func]
mov qword [rax+64], rcx
mov rcx, [read_texpreturn_aexp]
mov qword [rax+72], rcx
mov rcx, [read_texpnl]
mov qword [rax+80], rcx
mov rcx, [read_texpnr]
mov qword [rax+88], rcx
mov rcx, [read_texpt]
mov qword [rax+96], rcx
mov rcx, [read_texptl]
mov qword [rax+104], rcx
mov rcx, [read_texptr]
mov qword [rax+112], rcx
mov rcx, [read_texpf4503]
mov qword [rax+120], rcx
mov rcx, [read_texpf0703]
mov qword [rax+128], rcx
mov rcx, [read_texpfunc]
mov qword [rax+136], rcx
mov rcx, [read_texptokenizer]
mov qword [rax+144], rcx
mov qword [rax], 18
push rax
pop qword [read_texpf3323]
push qword [read_texpf3323]
jmp f1423_end
read_texpf1423: dq 0
f1423_end:
push qword [read_texporig_l]
push qword [read_texpr]
push qword [read_texpf1313]
push qword [read_texpl]
push qword [read_texpreturn_string]
push qword [read_texpreturn_block]
push qword [read_texpreturn_func]
push qword [read_texpreturn_aexp]
push qword [read_texpnl]
push qword [read_texpnr]
push qword [read_texpt]
push qword [read_texptl]
push qword [read_texptr]
push qword [read_texpf4503]
push qword [read_texpf0703]
push qword [read_texpfunc]
push qword [read_texptokenizer]
jmp f2423_end
read_texpf2423: dq 0
f2423_end:
push 0
pop qword [read_texpf2423]
push qword [read_texpf2423]
jmp f3423_end
read_texpf3423: dq 0
f3423_end:
push qword [read_texpfunc]
pop qword [read_texpf3423]
push qword [read_texpf3423]
call ne
push rax
pop qword [read_texpf1423]
pop qword [read_texptokenizer]
pop qword [read_texpfunc]
pop qword [read_texpf0703]
pop qword [read_texpf4503]
pop qword [read_texptr]
pop qword [read_texptl]
pop qword [read_texpt]
pop qword [read_texpnr]
pop qword [read_texpnl]
pop qword [read_texpreturn_aexp]
pop qword [read_texpreturn_func]
pop qword [read_texpreturn_block]
pop qword [read_texpreturn_string]
pop qword [read_texpl]
pop qword [read_texpf1313]
pop qword [read_texpr]
pop qword [read_texporig_l]
push qword [read_texpf1423]
call if
push rax
pop qword [read_texpf0113]
pop qword [read_texptokenizer]
pop qword [read_texpfunc]
pop qword [read_texpf0703]
pop qword [read_texpf4503]
pop qword [read_texptr]
pop qword [read_texptl]
pop qword [read_texpt]
pop qword [read_texpnr]
pop qword [read_texpnl]
pop qword [read_texpreturn_aexp]
pop qword [read_texpreturn_func]
pop qword [read_texpreturn_block]
pop qword [read_texpreturn_string]
pop qword [read_texpl]
pop qword [read_texpf1313]
pop qword [read_texpr]
pop qword [read_texporig_l]
push qword [read_texporig_l]
push qword [read_texpr]
push qword [read_texpf1313]
push qword [read_texpl]
push qword [read_texpreturn_string]
push qword [read_texpreturn_block]
push qword [read_texpreturn_func]
push qword [read_texpreturn_aexp]
push qword [read_texpnl]
push qword [read_texpnr]
push qword [read_texpt]
push qword [read_texptl]
push qword [read_texptr]
push qword [read_texpf4503]
push qword [read_texpf0703]
push qword [read_texpfunc]
push qword [read_texptokenizer]
push qword [read_texpf0113]
jmp f4423_end
read_texpf4423: dq 0
f4423_end:
push qword [read_texpr]
pop qword [read_texpf4423]
push qword [read_texpf4423]
jmp f5423_end
read_texpf5423: dq 0
f5423_end:
push qword [read_texpl]
pop qword [read_texpf5423]
push qword [read_texpf5423]
call read_const_string
push rax
pop qword [read_texplo]
pop qword [read_texphi]
pop qword [read_texpstring]
pop qword [read_texpf0113]
pop qword [read_texptokenizer]
pop qword [read_texpfunc]
pop qword [read_texpf0703]
pop qword [read_texpf4503]
pop qword [read_texptr]
pop qword [read_texptl]
pop qword [read_texpt]
pop qword [read_texpnr]
pop qword [read_texpnl]
pop qword [read_texpreturn_aexp]
pop qword [read_texpreturn_func]
pop qword [read_texpreturn_block]
pop qword [read_texpreturn_string]
pop qword [read_texpl]
pop qword [read_texpf1313]
pop qword [read_texpr]
pop qword [read_texporig_l]
jmp f6423_end
read_texpf6423: dq 0
f6423_end:
jmp f4213_end
f4213orig_l: dq 0
f4213r: dq 0
f4213f1313: dq 0
f4213l: dq 0
f4213return_string: dq 0
f4213return_block: dq 0
f4213return_func: dq 0
f4213return_aexp: dq 0
f4213nl: dq 0
f4213nr: dq 0
f4213t: dq 0
f4213tl: dq 0
f4213tr: dq 0
f4213f4503: dq 0
f4213f0703: dq 0
f4213func: dq 0
f4213tokenizer: dq 0
f4213f0113: dq 0
f4213lo: dq 0
f4213hi: dq 0
f4213string: dq 0
f4213break: dq 0
f4213:
pop qword [f4213orig_l]
pop qword [f4213r]
pop qword [f4213f1313]
pop qword [f4213l]
pop qword [f4213return_string]
pop qword [f4213return_block]
pop qword [f4213return_func]
pop qword [f4213return_aexp]
pop qword [f4213nl]
pop qword [f4213nr]
pop qword [f4213t]
pop qword [f4213tl]
pop qword [f4213tr]
pop qword [f4213f4503]
pop qword [f4213f0703]
pop qword [f4213func]
pop qword [f4213tokenizer]
pop qword [f4213f0113]
pop qword [f4213lo]
pop qword [f4213hi]
pop qword [f4213string]
pop qword [f4213break]
jmp f7423_end
f4213f7423: dq 0
f7423_end:
push qword [f4213string]
pop qword [f4213f7423]
push qword [f4213f7423]
jmp f0523_end
f4213f0523: dq 0
f0523_end:
push qword [f4213hi]
pop qword [f4213f0523]
push qword [f4213f0523]
jmp f1523_end
f4213f1523: dq 0
f1523_end:
push qword [f4213lo]
pop qword [f4213f1523]
push qword [f4213f1523]
push qword [f4213return_string]
jmp runtime_call
f4213_end:
mov rdi, 184
call malloc
mov qword [rax+8], f4213
mov rcx, [read_texporig_l]
mov qword [rax+16], rcx
mov rcx, [read_texpr]
mov qword [rax+24], rcx
mov rcx, [read_texpf1313]
mov qword [rax+32], rcx
mov rcx, [read_texpl]
mov qword [rax+40], rcx
mov rcx, [read_texpreturn_string]
mov qword [rax+48], rcx
mov rcx, [read_texpreturn_block]
mov qword [rax+56], rcx
mov rcx, [read_texpreturn_func]
mov qword [rax+64], rcx
mov rcx, [read_texpreturn_aexp]
mov qword [rax+72], rcx
mov rcx, [read_texpnl]
mov qword [rax+80], rcx
mov rcx, [read_texpnr]
mov qword [rax+88], rcx
mov rcx, [read_texpt]
mov qword [rax+96], rcx
mov rcx, [read_texptl]
mov qword [rax+104], rcx
mov rcx, [read_texptr]
mov qword [rax+112], rcx
mov rcx, [read_texpf4503]
mov qword [rax+120], rcx
mov rcx, [read_texpf0703]
mov qword [rax+128], rcx
mov rcx, [read_texpfunc]
mov qword [rax+136], rcx
mov rcx, [read_texptokenizer]
mov qword [rax+144], rcx
mov rcx, [read_texpf0113]
mov qword [rax+152], rcx
mov rcx, [read_texplo]
mov qword [rax+160], rcx
mov rcx, [read_texphi]
mov qword [rax+168], rcx
mov rcx, [read_texpstring]
mov qword [rax+176], rcx
mov qword [rax], 22
push rax
pop qword [read_texpf6423]
push qword [read_texpf6423]
jmp f2523_end
read_texpf2523: dq 0
f2523_end:
jmp f3523_end
read_texpf3523: dq 0
f3523_end:
push 0
pop qword [read_texpf3523]
push qword [read_texpf3523]
jmp f4523_end
read_texpf4523: dq 0
f4523_end:
push qword [read_texpstring]
pop qword [read_texpf4523]
push qword [read_texpf4523]
call ne
push rax
pop qword [read_texpf2523]
push qword [read_texpf2523]
call if
push rax
pop qword [read_texpf0213]
mov rsp, [read_texpf1313]
jmp f5523_end
read_texpf5523: dq 0
f5523_end:
push 0
pop qword [read_texpf5523]
pop rax
push qword [read_texpf5523]
push rax
jmp f6523_end
read_texpf6523: dq 0
f6523_end:
push qword [read_texpr]
pop qword [read_texpf6523]
pop rax
push qword [read_texpf6523]
push rax
jmp f7523_end
read_texpf7523: dq 0
f7523_end:
push qword [read_texporig_l]
pop qword [read_texpf7523]
pop rax
push qword [read_texpf7523]
push rax
pop rcx
pop rax
jmp rcx
ret
read_texp_end:
jmp print_texp_end
print_texpfl: dq 0
print_texpfr: dq 0
print_texpold_context: dq 0
print_texpids: dq 0
print_texpgl: dq 0
print_texpgr: dq 0
print_texptexp: dq 0
print_texpf1623: dq 0
print_texptexp_type: dq 0
print_texpf2353: dq 0
print_texp:
pop rax
pop qword [print_texpfl]
pop qword [print_texpfr]
pop qword [print_texpold_context]
pop qword [print_texpids]
pop qword [print_texpgl]
pop qword [print_texpgr]
pop qword [print_texptexp]
push rax
mov [print_texpf2353], rsp
push qword [print_texpfl]
push qword [print_texpfr]
push qword [print_texpold_context]
push qword [print_texpids]
push qword [print_texpgl]
push qword [print_texpgr]
push qword [print_texptexp]
push qword [print_texpf2353]
jmp f3353_end
print_texpf3353: dq 0
f3353_end:
jmp f2623_end
f2623fl: dq 0
f2623fr: dq 0
f2623old_context: dq 0
f2623ids: dq 0
f2623gl: dq 0
f2623gr: dq 0
f2623texp: dq 0
f2623f2353: dq 0
f2623break: dq 0
f2623:
pop qword [f2623fl]
pop qword [f2623fr]
pop qword [f2623old_context]
pop qword [f2623ids]
pop qword [f2623gl]
pop qword [f2623gr]
pop qword [f2623texp]
pop qword [f2623f2353]
pop qword [f2623break]
mov rsp, [f2623f2353]
jmp f4353_end
f2623f4353: dq 0
f4353_end:
push 0
pop qword [f2623f4353]
pop rax
push qword [f2623f4353]
push rax
pop rcx
pop rax
jmp rcx
f2623_end:
mov rdi, 80
call malloc
mov qword [rax+8], f2623
mov rcx, [print_texpfl]
mov qword [rax+16], rcx
mov rcx, [print_texpfr]
mov qword [rax+24], rcx
mov rcx, [print_texpold_context]
mov qword [rax+32], rcx
mov rcx, [print_texpids]
mov qword [rax+40], rcx
mov rcx, [print_texpgl]
mov qword [rax+48], rcx
mov rcx, [print_texpgr]
mov qword [rax+56], rcx
mov rcx, [print_texptexp]
mov qword [rax+64], rcx
mov rcx, [print_texpf2353]
mov qword [rax+72], rcx
mov qword [rax], 9
push rax
pop qword [print_texpf3353]
push qword [print_texpf3353]
jmp f5353_end
print_texpf5353: dq 0
f5353_end:
push qword [print_texpfl]
push qword [print_texpfr]
push qword [print_texpold_context]
push qword [print_texpids]
push qword [print_texpgl]
push qword [print_texpgr]
push qword [print_texptexp]
push qword [print_texpf2353]
jmp f6353_end
print_texpf6353: dq 0
f6353_end:
push 0
pop qword [print_texpf6353]
push qword [print_texpf6353]
jmp f7353_end
print_texpf7353: dq 0
f7353_end:
push qword [print_texptexp]
pop qword [print_texpf7353]
push qword [print_texpf7353]
call eq
push rax
pop qword [print_texpf5353]
pop qword [print_texpf2353]
pop qword [print_texptexp]
pop qword [print_texpgr]
pop qword [print_texpgl]
pop qword [print_texpids]
pop qword [print_texpold_context]
pop qword [print_texpfr]
pop qword [print_texpfl]
push qword [print_texpf5353]
call if
push rax
pop qword [print_texpf1623]
pop qword [print_texpf2353]
pop qword [print_texptexp]
pop qword [print_texpgr]
pop qword [print_texpgl]
pop qword [print_texpids]
pop qword [print_texpold_context]
pop qword [print_texpfr]
pop qword [print_texpfl]
push qword [print_texpfl]
push qword [print_texpfr]
push qword [print_texpold_context]
push qword [print_texpids]
push qword [print_texpgl]
push qword [print_texpgr]
push qword [print_texpf2353]
push qword [print_texpf1623]
push qword [print_texptexp]
call runtime_call_ret
push rax
pop qword [print_texptexp_type]
pop qword [print_texptexp]
pop qword [print_texpf1623]
pop qword [print_texpf2353]
pop qword [print_texpgr]
pop qword [print_texpgl]
pop qword [print_texpids]
pop qword [print_texpold_context]
pop qword [print_texpfr]
pop qword [print_texpfl]
jmp f0453_end
print_texpf0453: dq 0
f0453_end:
jmp f7043_end
f7043fl: dq 0
f7043fr: dq 0
f7043old_context: dq 0
f7043ids: dq 0
f7043gl: dq 0
f7043gr: dq 0
f7043f2353: dq 0
f7043f1623: dq 0
f7043texp_type: dq 0
f7043texp: dq 0
f7043break: dq 0
f7043:
pop qword [f7043fl]
pop qword [f7043fr]
pop qword [f7043old_context]
pop qword [f7043ids]
pop qword [f7043gl]
pop qword [f7043gr]
pop qword [f7043f2353]
pop qword [f7043f1623]
pop qword [f7043texp_type]
pop qword [f7043texp]
pop qword [f7043break]
jmp f1453_end
f7043f1453: dq 0
f1453_end:
jmp f7343_end
f7343fl: dq 0
f7343fr: dq 0
f7343old_context: dq 0
f7343ids: dq 0
f7343gl: dq 0
f7343gr: dq 0
f7343f2353: dq 0
f7343f1623: dq 0
f7343texp_type: dq 0
f7343texp: dq 0
f7343break: dq 0
f7343f: dq 0
f7343func: dq 0
f7343fname_l: dq 0
f7343fname_r: dq 0
f7343func_args: dq 0
f7343is_returning: dq 0
f7343cexp: dq 0
f7343f2443: dq 0
f7343context: dq 0
f7343f7443: dq 0
f7343size: dq 0
f7343f0543: dq 0
f7343f1543: dq 0
f7343f2543: dq 0
f7343f0253: dq 0
f7343f1253: dq 0
f7343f2253: dq 0
f7343f3253: dq 0
f7343:
pop qword [f7343fl]
pop qword [f7343fr]
pop qword [f7343old_context]
pop qword [f7343ids]
pop qword [f7343gl]
pop qword [f7343gr]
pop qword [f7343f2353]
pop qword [f7343f1623]
pop qword [f7343texp_type]
pop qword [f7343texp]
pop qword [f7343break]
pop qword [f7343f]
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343old_context]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343f]
call runtime_call_ret
push rax
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343old_context]
pop qword [f7343fr]
pop qword [f7343fl]
push qword [f7343func]
call runtime_call_ret
push rax
pop qword [f7343fname_l]
pop qword [f7343fname_r]
pop qword [f7343func_args]
pop qword [f7343is_returning]
pop qword [f7343cexp]
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
jmp f2453_end
f7343f2453: dq 0
f2453_end:
push qword [f7343func_args]
pop qword [f7343f2453]
push qword [f7343f2453]
jmp f3453_end
f7343f3453: dq 0
f3453_end:
push qword [f7343old_context]
pop qword [f7343f3453]
push qword [f7343f3453]
call filter_context
push rax
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
push qword [f7343old_context]
jmp f4453_end
f7343f4453: dq 0
f4453_end:
push qword [f7343func]
pop qword [f7343f4453]
push qword [f7343f4453]
jmp f5453_end
f7343f5453: dq 0
f5453_end:
push qword [f7343gr]
pop qword [f7343f5453]
push qword [f7343f5453]
jmp f6453_end
f7343f6453: dq 0
f6453_end:
push qword [f7343gl]
pop qword [f7343f6453]
push qword [f7343f6453]
jmp f7453_end
f7343f7453: dq 0
f7453_end:
push qword [f7343old_context]
pop qword [f7343f7453]
push qword [f7343f7453]
call print_function
push rax
pop qword [f7343f2443]
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
jmp f0553_end
f7343f0553: dq 0
f0553_end:
push qword [f7343old_context]
pop qword [f7343f0553]
push qword [f7343f0553]
jmp f1553_end
f7343f1553: dq 0
f1553_end:
jmp f2553_end
f7343f2553: dq 0
f2553_end:
push qword [f7343fname_r]
pop qword [f7343f2553]
push qword [f7343f2553]
jmp f3553_end
f7343f3553: dq 0
f3553_end:
push qword [f7343fname_l]
pop qword [f7343f3553]
push qword [f7343f3553]
call make_leaf
push rax
pop qword [f7343f1553]
push qword [f7343f1553]
call make_internal
push rax
pop qword [f7343context]
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
push qword [f7343old_context]
push qword [f7343f2443]
push qword [f7343context]
jmp f4553_end
f7343f4553: dq 0
f4553_end:
jmp f5553_end
f5553: db `mov rdi, `
db 0
f5553_end: push f5553
pop qword [f7343f4553]
push qword [f7343f4553]
call printf
push rax
pop qword [f7343f7443]
pop qword [f7343context]
pop qword [f7343f2443]
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
push qword [f7343old_context]
push qword [f7343f2443]
push qword [f7343context]
push qword [f7343f7443]
jmp f6553_end
f7343f6553: dq 0
f6553_end:
push qword [f7343context]
pop qword [f7343f6553]
push qword [f7343f6553]
call tree_size
push rax
pop qword [f7343size]
pop qword [f7343f7443]
pop qword [f7343context]
pop qword [f7343f2443]
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
push qword [f7343old_context]
push qword [f7343f2443]
push qword [f7343context]
push qword [f7343f7443]
push qword [f7343size]
jmp f7553_end
f7343f7553: dq 0
f7553_end:
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
push qword [f7343old_context]
push qword [f7343f2443]
push qword [f7343context]
push qword [f7343f7443]
push qword [f7343size]
jmp f0653_end
f7343f0653: dq 0
f0653_end:
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
push qword [f7343old_context]
push qword [f7343f2443]
push qword [f7343context]
push qword [f7343f7443]
push qword [f7343size]
jmp f1653_end
f7343f1653: dq 0
f1653_end:
push qword [f7343size]
pop qword [f7343f1653]
push qword [f7343f1653]
jmp f2653_end
f7343f2653: dq 0
f2653_end:
push 1
pop qword [f7343f2653]
push qword [f7343f2653]
call add
push rax
pop qword [f7343f0653]
pop qword [f7343size]
pop qword [f7343f7443]
pop qword [f7343context]
pop qword [f7343f2443]
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
push qword [f7343f0653]
jmp f3653_end
f7343f3653: dq 0
f3653_end:
push 8
pop qword [f7343f3653]
push qword [f7343f3653]
call mul
push rax
pop qword [f7343f7553]
pop qword [f7343size]
pop qword [f7343f7443]
pop qword [f7343context]
pop qword [f7343f2443]
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
push qword [f7343f7553]
call print_num
push rax
pop qword [f7343f0543]
pop qword [f7343size]
pop qword [f7343f7443]
pop qword [f7343context]
pop qword [f7343f2443]
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
push qword [f7343old_context]
push qword [f7343f2443]
push qword [f7343context]
push qword [f7343f7443]
push qword [f7343size]
push qword [f7343f0543]
jmp f4653_end
f7343f4653: dq 0
f4653_end:
jmp f5653_end
f5653: db `\ncall malloc\n`
db 0
f5653_end: push f5653
pop qword [f7343f4653]
push qword [f7343f4653]
call printf
push rax
pop qword [f7343f1543]
pop qword [f7343f0543]
pop qword [f7343size]
pop qword [f7343f7443]
pop qword [f7343context]
pop qword [f7343f2443]
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
push qword [f7343old_context]
push qword [f7343f2443]
push qword [f7343context]
push qword [f7343f7443]
push qword [f7343size]
push qword [f7343f0543]
push qword [f7343f1543]
jmp f6653_end
f7343f6653: dq 0
f6653_end:
jmp f3543_end
f3543fl: dq 0
f3543fr: dq 0
f3543ids: dq 0
f3543gl: dq 0
f3543gr: dq 0
f3543f2353: dq 0
f3543f1623: dq 0
f3543texp_type: dq 0
f3543texp: dq 0
f3543break: dq 0
f3543f: dq 0
f3543func: dq 0
f3543fname_l: dq 0
f3543fname_r: dq 0
f3543func_args: dq 0
f3543is_returning: dq 0
f3543cexp: dq 0
f3543old_context: dq 0
f3543f2443: dq 0
f3543context: dq 0
f3543f7443: dq 0
f3543size: dq 0
f3543f0543: dq 0
f3543f1543: dq 0
f3543n: dq 0
f3543l: dq 0
f3543r: dq 0
f3543f4543: dq 0
f3543f7653: dq 0
f3543:
pop rax
pop qword [f3543fl]
pop qword [f3543fr]
pop qword [f3543ids]
pop qword [f3543gl]
pop qword [f3543gr]
pop qword [f3543f2353]
pop qword [f3543f1623]
pop qword [f3543texp_type]
pop qword [f3543texp]
pop qword [f3543break]
pop qword [f3543f]
pop qword [f3543func]
pop qword [f3543fname_l]
pop qword [f3543fname_r]
pop qword [f3543func_args]
pop qword [f3543is_returning]
pop qword [f3543cexp]
pop qword [f3543old_context]
pop qword [f3543f2443]
pop qword [f3543context]
pop qword [f3543f7443]
pop qword [f3543size]
pop qword [f3543f0543]
pop qword [f3543f1543]
pop qword [f3543n]
pop qword [f3543l]
pop qword [f3543r]
push rax
mov [f3543f7653], rsp
jmp f0753_end
f3543f0753: dq 0
f0753_end:
jmp f7743_end
f7743fl: dq 0
f7743fr: dq 0
f7743ids: dq 0
f7743gl: dq 0
f7743gr: dq 0
f7743f2353: dq 0
f7743f1623: dq 0
f7743texp_type: dq 0
f7743texp: dq 0
f7743break: dq 0
f7743f: dq 0
f7743func: dq 0
f7743fname_l: dq 0
f7743fname_r: dq 0
f7743func_args: dq 0
f7743is_returning: dq 0
f7743cexp: dq 0
f7743old_context: dq 0
f7743f2443: dq 0
f7743context: dq 0
f7743f7443: dq 0
f7743size: dq 0
f7743f0543: dq 0
f7743f1543: dq 0
f7743n: dq 0
f7743l: dq 0
f7743r: dq 0
f7743f7653: dq 0
f7743f0053: dq 0
f7743f3053: dq 0
f7743f2153: dq 0
f7743f1753: dq 0
f7743:
pop rax
pop qword [f7743fl]
pop qword [f7743fr]
pop qword [f7743ids]
pop qword [f7743gl]
pop qword [f7743gr]
pop qword [f7743f2353]
pop qword [f7743f1623]
pop qword [f7743texp_type]
pop qword [f7743texp]
pop qword [f7743break]
pop qword [f7743f]
pop qword [f7743func]
pop qword [f7743fname_l]
pop qword [f7743fname_r]
pop qword [f7743func_args]
pop qword [f7743is_returning]
pop qword [f7743cexp]
pop qword [f7743old_context]
pop qword [f7743f2443]
pop qword [f7743context]
pop qword [f7743f7443]
pop qword [f7743size]
pop qword [f7743f0543]
pop qword [f7743f1543]
pop qword [f7743n]
pop qword [f7743l]
pop qword [f7743r]
pop qword [f7743f7653]
push rax
mov [f7743f1753], rsp
jmp f2753_end
f7743f2753: dq 0
f2753_end:
push qword [f7743r]
pop qword [f7743f2753]
push qword [f7743f2753]
jmp f3753_end
f7743f3753: dq 0
f3753_end:
push qword [f7743l]
pop qword [f7743f3753]
push qword [f7743f3753]
jmp f4753_end
f7743f4753: dq 0
f4753_end:
push qword [f7743fr]
pop qword [f7743f4753]
push qword [f7743f4753]
jmp f5753_end
f7743f5753: dq 0
f5753_end:
push qword [f7743fl]
pop qword [f7743f5753]
push qword [f7743f5753]
jmp f6753_end
f7743f6753: dq 0
f6753_end:
jmp f7753_end
f7753: db `mov rcx, [{}{}]\nmov qword [rax+`
db 0
f7753_end: push f7753
pop qword [f7743f6753]
push qword [f7743f6753]
call printf
push rax
pop qword [f7743f0053]
jmp f0063_end
f7743f0063: dq 0
f0063_end:
jmp f1063_end
f7743f1063: dq 0
f1063_end:
jmp f2063_end
f7743f2063: dq 0
f2063_end:
push qword [f7743n]
pop qword [f7743f2063]
push qword [f7743f2063]
jmp f3063_end
f7743f3063: dq 0
f3063_end:
push 1
pop qword [f7743f3063]
push qword [f7743f3063]
call add
push rax
pop qword [f7743f1063]
push qword [f7743f1063]
jmp f4063_end
f7743f4063: dq 0
f4063_end:
push 8
pop qword [f7743f4063]
push qword [f7743f4063]
call mul
push rax
pop qword [f7743f0063]
push qword [f7743f0063]
call print_num
push rax
pop qword [f7743f3053]
jmp f5063_end
f7743f5063: dq 0
f5063_end:
jmp f6063_end
f6063: db `], rcx\n`
db 0
f6063_end: push f6063
pop qword [f7743f5063]
push qword [f7743f5063]
call printf
push rax
pop qword [f7743f2153]
ret
f7743_end:
mov rdi, 240
call malloc
mov qword [rax+8], f7743
mov rcx, [f3543fl]
mov qword [rax+16], rcx
mov rcx, [f3543fr]
mov qword [rax+24], rcx
mov rcx, [f3543ids]
mov qword [rax+32], rcx
mov rcx, [f3543gl]
mov qword [rax+40], rcx
mov rcx, [f3543gr]
mov qword [rax+48], rcx
mov rcx, [f3543f2353]
mov qword [rax+56], rcx
mov rcx, [f3543f1623]
mov qword [rax+64], rcx
mov rcx, [f3543texp_type]
mov qword [rax+72], rcx
mov rcx, [f3543texp]
mov qword [rax+80], rcx
mov rcx, [f3543break]
mov qword [rax+88], rcx
mov rcx, [f3543f]
mov qword [rax+96], rcx
mov rcx, [f3543func]
mov qword [rax+104], rcx
mov rcx, [f3543fname_l]
mov qword [rax+112], rcx
mov rcx, [f3543fname_r]
mov qword [rax+120], rcx
mov rcx, [f3543func_args]
mov qword [rax+128], rcx
mov rcx, [f3543is_returning]
mov qword [rax+136], rcx
mov rcx, [f3543cexp]
mov qword [rax+144], rcx
mov rcx, [f3543old_context]
mov qword [rax+152], rcx
mov rcx, [f3543f2443]
mov qword [rax+160], rcx
mov rcx, [f3543context]
mov qword [rax+168], rcx
mov rcx, [f3543f7443]
mov qword [rax+176], rcx
mov rcx, [f3543size]
mov qword [rax+184], rcx
mov rcx, [f3543f0543]
mov qword [rax+192], rcx
mov rcx, [f3543f1543]
mov qword [rax+200], rcx
mov rcx, [f3543n]
mov qword [rax+208], rcx
mov rcx, [f3543l]
mov qword [rax+216], rcx
mov rcx, [f3543r]
mov qword [rax+224], rcx
mov rcx, [f3543f7653]
mov qword [rax+232], rcx
mov qword [rax], 29
push rax
pop qword [f3543f0753]
push qword [f3543f0753]
jmp f7063_end
f3543f7063: dq 0
f7063_end:
jmp f0643_end
f0643fl: dq 0
f0643fr: dq 0
f0643ids: dq 0
f0643gl: dq 0
f0643gr: dq 0
f0643f2353: dq 0
f0643f1623: dq 0
f0643texp_type: dq 0
f0643texp: dq 0
f0643break: dq 0
f0643f: dq 0
f0643func: dq 0
f0643fname_l: dq 0
f0643fname_r: dq 0
f0643func_args: dq 0
f0643is_returning: dq 0
f0643cexp: dq 0
f0643old_context: dq 0
f0643f2443: dq 0
f0643context: dq 0
f0643f7443: dq 0
f0643size: dq 0
f0643f0543: dq 0
f0643f1543: dq 0
f0643n: dq 0
f0643l: dq 0
f0643r: dq 0
f0643f7653: dq 0
f0643f1643: dq 0
f0643f4643: dq 0
f0643f3743: dq 0
f0643f0163: dq 0
f0643:
pop rax
pop qword [f0643fl]
pop qword [f0643fr]
pop qword [f0643ids]
pop qword [f0643gl]
pop qword [f0643gr]
pop qword [f0643f2353]
pop qword [f0643f1623]
pop qword [f0643texp_type]
pop qword [f0643texp]
pop qword [f0643break]
pop qword [f0643f]
pop qword [f0643func]
pop qword [f0643fname_l]
pop qword [f0643fname_r]
pop qword [f0643func_args]
pop qword [f0643is_returning]
pop qword [f0643cexp]
pop qword [f0643old_context]
pop qword [f0643f2443]
pop qword [f0643context]
pop qword [f0643f7443]
pop qword [f0643size]
pop qword [f0643f0543]
pop qword [f0643f1543]
pop qword [f0643n]
pop qword [f0643l]
pop qword [f0643r]
pop qword [f0643f7653]
push rax
mov [f0643f0163], rsp
jmp f1163_end
f0643f1163: dq 0
f1163_end:
jmp f2163_end
f2163: db `mov qword [rax+`
db 0
f2163_end: push f2163
pop qword [f0643f1163]
push qword [f0643f1163]
call printf
push rax
pop qword [f0643f1643]
jmp f3163_end
f0643f3163: dq 0
f3163_end:
jmp f4163_end
f0643f4163: dq 0
f4163_end:
jmp f5163_end
f0643f5163: dq 0
f5163_end:
push qword [f0643n]
pop qword [f0643f5163]
push qword [f0643f5163]
jmp f6163_end
f0643f6163: dq 0
f6163_end:
push 1
pop qword [f0643f6163]
push qword [f0643f6163]
call add
push rax
pop qword [f0643f4163]
push qword [f0643f4163]
jmp f7163_end
f0643f7163: dq 0
f7163_end:
push 8
pop qword [f0643f7163]
push qword [f0643f7163]
call mul
push rax
pop qword [f0643f3163]
push qword [f0643f3163]
call print_num
push rax
pop qword [f0643f4643]
jmp f0263_end
f0643f0263: dq 0
f0263_end:
push qword [f0643r]
pop qword [f0643f0263]
push qword [f0643f0263]
jmp f1263_end
f0643f1263: dq 0
f1263_end:
push qword [f0643l]
pop qword [f0643f1263]
push qword [f0643f1263]
jmp f2263_end
f0643f2263: dq 0
f2263_end:
jmp f3263_end
f3263: db `], {}\n`
db 0
f3263_end: push f3263
pop qword [f0643f2263]
push qword [f0643f2263]
call printf
push rax
pop qword [f0643f3743]
ret
f0643_end:
mov rdi, 240
call malloc
mov qword [rax+8], f0643
mov rcx, [f3543fl]
mov qword [rax+16], rcx
mov rcx, [f3543fr]
mov qword [rax+24], rcx
mov rcx, [f3543ids]
mov qword [rax+32], rcx
mov rcx, [f3543gl]
mov qword [rax+40], rcx
mov rcx, [f3543gr]
mov qword [rax+48], rcx
mov rcx, [f3543f2353]
mov qword [rax+56], rcx
mov rcx, [f3543f1623]
mov qword [rax+64], rcx
mov rcx, [f3543texp_type]
mov qword [rax+72], rcx
mov rcx, [f3543texp]
mov qword [rax+80], rcx
mov rcx, [f3543break]
mov qword [rax+88], rcx
mov rcx, [f3543f]
mov qword [rax+96], rcx
mov rcx, [f3543func]
mov qword [rax+104], rcx
mov rcx, [f3543fname_l]
mov qword [rax+112], rcx
mov rcx, [f3543fname_r]
mov qword [rax+120], rcx
mov rcx, [f3543func_args]
mov qword [rax+128], rcx
mov rcx, [f3543is_returning]
mov qword [rax+136], rcx
mov rcx, [f3543cexp]
mov qword [rax+144], rcx
mov rcx, [f3543old_context]
mov qword [rax+152], rcx
mov rcx, [f3543f2443]
mov qword [rax+160], rcx
mov rcx, [f3543context]
mov qword [rax+168], rcx
mov rcx, [f3543f7443]
mov qword [rax+176], rcx
mov rcx, [f3543size]
mov qword [rax+184], rcx
mov rcx, [f3543f0543]
mov qword [rax+192], rcx
mov rcx, [f3543f1543]
mov qword [rax+200], rcx
mov rcx, [f3543n]
mov qword [rax+208], rcx
mov rcx, [f3543l]
mov qword [rax+216], rcx
mov rcx, [f3543r]
mov qword [rax+224], rcx
mov rcx, [f3543f7653]
mov qword [rax+232], rcx
mov qword [rax], 29
push rax
pop qword [f3543f7063]
push qword [f3543f7063]
jmp f4263_end
f3543f4263: dq 0
f4263_end:
jmp f5263_end
f3543f5263: dq 0
f5263_end:
push qword [f3543fname_l]
pop qword [f3543f5263]
push qword [f3543f5263]
jmp f6263_end
f3543f6263: dq 0
f6263_end:
push qword [f3543l]
pop qword [f3543f6263]
push qword [f3543f6263]
call eq
push rax
pop qword [f3543f4263]
push qword [f3543f4263]
call if_else_ret
push rax
pop qword [f3543f4543]
ret
f3543_end:
mov rdi, 208
call malloc
mov qword [rax+8], f3543
mov rcx, [f7343fl]
mov qword [rax+16], rcx
mov rcx, [f7343fr]
mov qword [rax+24], rcx
mov rcx, [f7343ids]
mov qword [rax+32], rcx
mov rcx, [f7343gl]
mov qword [rax+40], rcx
mov rcx, [f7343gr]
mov qword [rax+48], rcx
mov rcx, [f7343f2353]
mov qword [rax+56], rcx
mov rcx, [f7343f1623]
mov qword [rax+64], rcx
mov rcx, [f7343texp_type]
mov qword [rax+72], rcx
mov rcx, [f7343texp]
mov qword [rax+80], rcx
mov rcx, [f7343break]
mov qword [rax+88], rcx
mov rcx, [f7343f]
mov qword [rax+96], rcx
mov rcx, [f7343func]
mov qword [rax+104], rcx
mov rcx, [f7343fname_l]
mov qword [rax+112], rcx
mov rcx, [f7343fname_r]
mov qword [rax+120], rcx
mov rcx, [f7343func_args]
mov qword [rax+128], rcx
mov rcx, [f7343is_returning]
mov qword [rax+136], rcx
mov rcx, [f7343cexp]
mov qword [rax+144], rcx
mov rcx, [f7343old_context]
mov qword [rax+152], rcx
mov rcx, [f7343f2443]
mov qword [rax+160], rcx
mov rcx, [f7343context]
mov qword [rax+168], rcx
mov rcx, [f7343f7443]
mov qword [rax+176], rcx
mov rcx, [f7343size]
mov qword [rax+184], rcx
mov rcx, [f7343f0543]
mov qword [rax+192], rcx
mov rcx, [f7343f1543]
mov qword [rax+200], rcx
mov qword [rax], 25
push rax
pop qword [f7343f6653]
push qword [f7343f6653]
jmp f7263_end
f7343f7263: dq 0
f7263_end:
push qword [f7343context]
pop qword [f7343f7263]
push qword [f7343f7263]
call map_tree_iota
push rax
pop qword [f7343f2543]
pop qword [f7343f1543]
pop qword [f7343f0543]
pop qword [f7343size]
pop qword [f7343f7443]
pop qword [f7343context]
pop qword [f7343f2443]
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
push qword [f7343old_context]
push qword [f7343f2443]
push qword [f7343context]
push qword [f7343f7443]
push qword [f7343size]
push qword [f7343f0543]
push qword [f7343f1543]
push qword [f7343f2543]
jmp f0363_end
f7343f0363: dq 0
f0363_end:
jmp f1363_end
f1363: db `mov qword [rax], `
db 0
f1363_end: push f1363
pop qword [f7343f0363]
push qword [f7343f0363]
call printf
push rax
pop qword [f7343f0253]
pop qword [f7343f2543]
pop qword [f7343f1543]
pop qword [f7343f0543]
pop qword [f7343size]
pop qword [f7343f7443]
pop qword [f7343context]
pop qword [f7343f2443]
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
push qword [f7343old_context]
push qword [f7343f2443]
push qword [f7343context]
push qword [f7343f7443]
push qword [f7343size]
push qword [f7343f0543]
push qword [f7343f1543]
push qword [f7343f2543]
push qword [f7343f0253]
jmp f2363_end
f7343f2363: dq 0
f2363_end:
push qword [f7343size]
pop qword [f7343f2363]
push qword [f7343f2363]
call print_num
push rax
pop qword [f7343f1253]
pop qword [f7343f0253]
pop qword [f7343f2543]
pop qword [f7343f1543]
pop qword [f7343f0543]
pop qword [f7343size]
pop qword [f7343f7443]
pop qword [f7343context]
pop qword [f7343f2443]
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
push qword [f7343old_context]
push qword [f7343f2443]
push qword [f7343context]
push qword [f7343f7443]
push qword [f7343size]
push qword [f7343f0543]
push qword [f7343f1543]
push qword [f7343f2543]
push qword [f7343f0253]
push qword [f7343f1253]
jmp f3363_end
f7343f3363: dq 0
f3363_end:
jmp f4363_end
f4363: db `\npush rax\n`
db 0
f4363_end: push f4363
pop qword [f7343f3363]
push qword [f7343f3363]
call printf
push rax
pop qword [f7343f2253]
pop qword [f7343f1253]
pop qword [f7343f0253]
pop qword [f7343f2543]
pop qword [f7343f1543]
pop qword [f7343f0543]
pop qword [f7343size]
pop qword [f7343f7443]
pop qword [f7343context]
pop qword [f7343f2443]
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
push qword [f7343fl]
push qword [f7343fr]
push qword [f7343ids]
push qword [f7343gl]
push qword [f7343gr]
push qword [f7343f2353]
push qword [f7343f1623]
push qword [f7343texp_type]
push qword [f7343texp]
push qword [f7343break]
push qword [f7343f]
push qword [f7343func]
push qword [f7343fname_l]
push qword [f7343fname_r]
push qword [f7343func_args]
push qword [f7343is_returning]
push qword [f7343cexp]
push qword [f7343old_context]
push qword [f7343f2443]
push qword [f7343context]
push qword [f7343f7443]
push qword [f7343size]
push qword [f7343f0543]
push qword [f7343f1543]
push qword [f7343f2543]
push qword [f7343f0253]
push qword [f7343f1253]
push qword [f7343f2253]
jmp f5363_end
f7343f5363: dq 0
f5363_end:
jmp f4253_end
f4253fl: dq 0
f4253fr: dq 0
f4253ids: dq 0
f4253gl: dq 0
f4253gr: dq 0
f4253f2353: dq 0
f4253f1623: dq 0
f4253texp_type: dq 0
f4253texp: dq 0
f4253break: dq 0
f4253f: dq 0
f4253func: dq 0
f4253fname_l: dq 0
f4253fname_r: dq 0
f4253func_args: dq 0
f4253is_returning: dq 0
f4253cexp: dq 0
f4253old_context: dq 0
f4253f2443: dq 0
f4253context: dq 0
f4253f7443: dq 0
f4253size: dq 0
f4253f0543: dq 0
f4253f1543: dq 0
f4253f2543: dq 0
f4253f0253: dq 0
f4253f1253: dq 0
f4253f2253: dq 0
f4253l: dq 0
f4253r: dq 0
f4253f5253: dq 0
f4253f6363: dq 0
f4253:
pop rax
pop qword [f4253fl]
pop qword [f4253fr]
pop qword [f4253ids]
pop qword [f4253gl]
pop qword [f4253gr]
pop qword [f4253f2353]
pop qword [f4253f1623]
pop qword [f4253texp_type]
pop qword [f4253texp]
pop qword [f4253break]
pop qword [f4253f]
pop qword [f4253func]
pop qword [f4253fname_l]
pop qword [f4253fname_r]
pop qword [f4253func_args]
pop qword [f4253is_returning]
pop qword [f4253cexp]
pop qword [f4253old_context]
pop qword [f4253f2443]
pop qword [f4253context]
pop qword [f4253f7443]
pop qword [f4253size]
pop qword [f4253f0543]
pop qword [f4253f1543]
pop qword [f4253f2543]
pop qword [f4253f0253]
pop qword [f4253f1253]
pop qword [f4253f2253]
pop qword [f4253l]
pop qword [f4253r]
push rax
mov [f4253f6363], rsp
push qword [f4253fl]
push qword [f4253fr]
push qword [f4253ids]
push qword [f4253gl]
push qword [f4253gr]
push qword [f4253f2353]
push qword [f4253f1623]
push qword [f4253texp_type]
push qword [f4253texp]
push qword [f4253break]
push qword [f4253f]
push qword [f4253func]
push qword [f4253fname_l]
push qword [f4253fname_r]
push qword [f4253func_args]
push qword [f4253is_returning]
push qword [f4253cexp]
push qword [f4253old_context]
push qword [f4253f2443]
push qword [f4253context]
push qword [f4253f7443]
push qword [f4253size]
push qword [f4253f0543]
push qword [f4253f1543]
push qword [f4253f2543]
push qword [f4253f0253]
push qword [f4253f1253]
push qword [f4253f2253]
push qword [f4253l]
push qword [f4253r]
push qword [f4253f6363]
jmp f7363_end
f4253f7363: dq 0
f7363_end:
push qword [f4253r]
pop qword [f4253f7363]
push qword [f4253f7363]
jmp f0463_end
f4253f0463: dq 0
f0463_end:
push qword [f4253l]
pop qword [f4253f0463]
push qword [f4253f0463]
jmp f1463_end
f4253f1463: dq 0
f1463_end:
push qword [f4253fr]
pop qword [f4253f1463]
push qword [f4253f1463]
jmp f2463_end
f4253f2463: dq 0
f2463_end:
push qword [f4253fl]
pop qword [f4253f2463]
push qword [f4253f2463]
jmp f3463_end
f4253f3463: dq 0
f3463_end:
jmp f4463_end
f4463: db `pop qword [{}{}]\n`
db 0
f4463_end: push f4463
pop qword [f4253f3463]
push qword [f4253f3463]
call printf
push rax
pop qword [f4253f5253]
pop qword [f4253f6363]
pop qword [f4253r]
pop qword [f4253l]
pop qword [f4253f2253]
pop qword [f4253f1253]
pop qword [f4253f0253]
pop qword [f4253f2543]
pop qword [f4253f1543]
pop qword [f4253f0543]
pop qword [f4253size]
pop qword [f4253f7443]
pop qword [f4253context]
pop qword [f4253f2443]
pop qword [f4253old_context]
pop qword [f4253cexp]
pop qword [f4253is_returning]
pop qword [f4253func_args]
pop qword [f4253fname_r]
pop qword [f4253fname_l]
pop qword [f4253func]
pop qword [f4253f]
pop qword [f4253break]
pop qword [f4253texp]
pop qword [f4253texp_type]
pop qword [f4253f1623]
pop qword [f4253f2353]
pop qword [f4253gr]
pop qword [f4253gl]
pop qword [f4253ids]
pop qword [f4253fr]
pop qword [f4253fl]
ret
f4253_end:
mov rdi, 240
call malloc
mov qword [rax+8], f4253
mov rcx, [f7343fl]
mov qword [rax+16], rcx
mov rcx, [f7343fr]
mov qword [rax+24], rcx
mov rcx, [f7343ids]
mov qword [rax+32], rcx
mov rcx, [f7343gl]
mov qword [rax+40], rcx
mov rcx, [f7343gr]
mov qword [rax+48], rcx
mov rcx, [f7343f2353]
mov qword [rax+56], rcx
mov rcx, [f7343f1623]
mov qword [rax+64], rcx
mov rcx, [f7343texp_type]
mov qword [rax+72], rcx
mov rcx, [f7343texp]
mov qword [rax+80], rcx
mov rcx, [f7343break]
mov qword [rax+88], rcx
mov rcx, [f7343f]
mov qword [rax+96], rcx
mov rcx, [f7343func]
mov qword [rax+104], rcx
mov rcx, [f7343fname_l]
mov qword [rax+112], rcx
mov rcx, [f7343fname_r]
mov qword [rax+120], rcx
mov rcx, [f7343func_args]
mov qword [rax+128], rcx
mov rcx, [f7343is_returning]
mov qword [rax+136], rcx
mov rcx, [f7343cexp]
mov qword [rax+144], rcx
mov rcx, [f7343old_context]
mov qword [rax+152], rcx
mov rcx, [f7343f2443]
mov qword [rax+160], rcx
mov rcx, [f7343context]
mov qword [rax+168], rcx
mov rcx, [f7343f7443]
mov qword [rax+176], rcx
mov rcx, [f7343size]
mov qword [rax+184], rcx
mov rcx, [f7343f0543]
mov qword [rax+192], rcx
mov rcx, [f7343f1543]
mov qword [rax+200], rcx
mov rcx, [f7343f2543]
mov qword [rax+208], rcx
mov rcx, [f7343f0253]
mov qword [rax+216], rcx
mov rcx, [f7343f1253]
mov qword [rax+224], rcx
mov rcx, [f7343f2253]
mov qword [rax+232], rcx
mov qword [rax], 29
push rax
pop qword [f7343f5363]
push qword [f7343f5363]
jmp f5463_end
f7343f5463: dq 0
f5463_end:
push qword [f7343ids]
pop qword [f7343f5463]
push qword [f7343f5463]
call map_tree
push rax
pop qword [f7343f3253]
pop qword [f7343f2253]
pop qword [f7343f1253]
pop qword [f7343f0253]
pop qword [f7343f2543]
pop qword [f7343f1543]
pop qword [f7343f0543]
pop qword [f7343size]
pop qword [f7343f7443]
pop qword [f7343context]
pop qword [f7343f2443]
pop qword [f7343old_context]
pop qword [f7343cexp]
pop qword [f7343is_returning]
pop qword [f7343func_args]
pop qword [f7343fname_r]
pop qword [f7343fname_l]
pop qword [f7343func]
pop qword [f7343f]
pop qword [f7343break]
pop qword [f7343texp]
pop qword [f7343texp_type]
pop qword [f7343f1623]
pop qword [f7343f2353]
pop qword [f7343gr]
pop qword [f7343gl]
pop qword [f7343ids]
pop qword [f7343fr]
pop qword [f7343fl]
mov rsp, [f7343f2353]
jmp f6463_end
f7343f6463: dq 0
f6463_end:
push 0
pop qword [f7343f6463]
pop rax
push qword [f7343f6463]
push rax
pop rcx
pop rax
jmp rcx
f7343_end:
mov rdi, 104
call malloc
mov qword [rax+8], f7343
mov rcx, [f7043fl]
mov qword [rax+16], rcx
mov rcx, [f7043fr]
mov qword [rax+24], rcx
mov rcx, [f7043old_context]
mov qword [rax+32], rcx
mov rcx, [f7043ids]
mov qword [rax+40], rcx
mov rcx, [f7043gl]
mov qword [rax+48], rcx
mov rcx, [f7043gr]
mov qword [rax+56], rcx
mov rcx, [f7043f2353]
mov qword [rax+64], rcx
mov rcx, [f7043f1623]
mov qword [rax+72], rcx
mov rcx, [f7043texp_type]
mov qword [rax+80], rcx
mov rcx, [f7043texp]
mov qword [rax+88], rcx
mov rcx, [f7043break]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [f7043f1453]
push qword [f7043f1453]
jmp f7463_end
f7043f7463: dq 0
f7463_end:
jmp f5243_end
f5243fl: dq 0
f5243fr: dq 0
f5243old_context: dq 0
f5243ids: dq 0
f5243gl: dq 0
f5243gr: dq 0
f5243f2353: dq 0
f5243f1623: dq 0
f5243texp_type: dq 0
f5243texp: dq 0
f5243break: dq 0
f5243block: dq 0
f5243cexp: dq 0
f5243f6243: dq 0
f5243f2343: dq 0
f5243f3343: dq 0
f5243:
pop qword [f5243fl]
pop qword [f5243fr]
pop qword [f5243old_context]
pop qword [f5243ids]
pop qword [f5243gl]
pop qword [f5243gr]
pop qword [f5243f2353]
pop qword [f5243f1623]
pop qword [f5243texp_type]
pop qword [f5243texp]
pop qword [f5243break]
pop qword [f5243block]
push qword [f5243fl]
push qword [f5243fr]
push qword [f5243old_context]
push qword [f5243ids]
push qword [f5243gl]
push qword [f5243gr]
push qword [f5243f2353]
push qword [f5243f1623]
push qword [f5243texp_type]
push qword [f5243texp]
push qword [f5243break]
push qword [f5243block]
push qword [f5243block]
call runtime_call_ret
push rax
pop qword [f5243cexp]
pop qword [f5243block]
pop qword [f5243break]
pop qword [f5243texp]
pop qword [f5243texp_type]
pop qword [f5243f1623]
pop qword [f5243f2353]
pop qword [f5243gr]
pop qword [f5243gl]
pop qword [f5243ids]
pop qword [f5243old_context]
pop qword [f5243fr]
pop qword [f5243fl]
push qword [f5243fl]
push qword [f5243fr]
push qword [f5243old_context]
push qword [f5243ids]
push qword [f5243gl]
push qword [f5243gr]
push qword [f5243f2353]
push qword [f5243f1623]
push qword [f5243texp_type]
push qword [f5243texp]
push qword [f5243break]
push qword [f5243block]
push qword [f5243cexp]
jmp f0563_end
f5243f0563: dq 0
f0563_end:
push qword [f5243cexp]
pop qword [f5243f0563]
push qword [f5243f0563]
jmp f1563_end
f5243f1563: dq 0
f1563_end:
push qword [f5243gr]
pop qword [f5243f1563]
push qword [f5243f1563]
jmp f2563_end
f5243f2563: dq 0
f2563_end:
push qword [f5243gl]
pop qword [f5243f2563]
push qword [f5243f2563]
jmp f3563_end
f5243f3563: dq 0
f3563_end:
jmp f7243_end
f7243fl: dq 0
f7243fr: dq 0
f7243old_context: dq 0
f7243ids: dq 0
f7243gl: dq 0
f7243gr: dq 0
f7243f2353: dq 0
f7243f1623: dq 0
f7243texp_type: dq 0
f7243texp: dq 0
f7243break: dq 0
f7243block: dq 0
f7243cexp: dq 0
f7243a: dq 0
f7243b: dq 0
f7243:
pop qword [f7243fl]
pop qword [f7243fr]
pop qword [f7243old_context]
pop qword [f7243ids]
pop qword [f7243gl]
pop qword [f7243gr]
pop qword [f7243f2353]
pop qword [f7243f1623]
pop qword [f7243texp_type]
pop qword [f7243texp]
pop qword [f7243break]
pop qword [f7243block]
pop qword [f7243cexp]
pop qword [f7243a]
pop qword [f7243b]
push qword [f7243a]
jmp runtime_call
f7243_end:
mov rdi, 120
call malloc
mov qword [rax+8], f7243
mov rcx, [f5243fl]
mov qword [rax+16], rcx
mov rcx, [f5243fr]
mov qword [rax+24], rcx
mov rcx, [f5243old_context]
mov qword [rax+32], rcx
mov rcx, [f5243ids]
mov qword [rax+40], rcx
mov rcx, [f5243gl]
mov qword [rax+48], rcx
mov rcx, [f5243gr]
mov qword [rax+56], rcx
mov rcx, [f5243f2353]
mov qword [rax+64], rcx
mov rcx, [f5243f1623]
mov qword [rax+72], rcx
mov rcx, [f5243texp_type]
mov qword [rax+80], rcx
mov rcx, [f5243texp]
mov qword [rax+88], rcx
mov rcx, [f5243break]
mov qword [rax+96], rcx
mov rcx, [f5243block]
mov qword [rax+104], rcx
mov rcx, [f5243cexp]
mov qword [rax+112], rcx
mov qword [rax], 14
push rax
pop qword [f5243f3563]
push qword [f5243f3563]
jmp f4563_end
f5243f4563: dq 0
f4563_end:
push qword [f5243old_context]
pop qword [f5243f4563]
push qword [f5243f4563]
jmp f5563_end
f5243f5563: dq 0
f5563_end:
push qword [f5243fr]
pop qword [f5243f5563]
push qword [f5243f5563]
jmp f6563_end
f5243f6563: dq 0
f6563_end:
push qword [f5243fl]
pop qword [f5243f6563]
push qword [f5243f6563]
call print_cexp
push rax
pop qword [f5243f6243]
pop qword [f5243cexp]
pop qword [f5243block]
pop qword [f5243break]
pop qword [f5243texp]
pop qword [f5243texp_type]
pop qword [f5243f1623]
pop qword [f5243f2353]
pop qword [f5243gr]
pop qword [f5243gl]
pop qword [f5243ids]
pop qword [f5243old_context]
pop qword [f5243fr]
pop qword [f5243fl]
push qword [f5243fl]
push qword [f5243fr]
push qword [f5243old_context]
push qword [f5243ids]
push qword [f5243gl]
push qword [f5243gr]
push qword [f5243f2353]
push qword [f5243f1623]
push qword [f5243texp_type]
push qword [f5243texp]
push qword [f5243break]
push qword [f5243block]
push qword [f5243cexp]
push qword [f5243f6243]
jmp f7563_end
f5243f7563: dq 0
f7563_end:
jmp f0663_end
f0663: db `push rax\n`
db 0
f0663_end: push f0663
pop qword [f5243f7563]
push qword [f5243f7563]
call printf
push rax
pop qword [f5243f2343]
pop qword [f5243f6243]
pop qword [f5243cexp]
pop qword [f5243block]
pop qword [f5243break]
pop qword [f5243texp]
pop qword [f5243texp_type]
pop qword [f5243f1623]
pop qword [f5243f2353]
pop qword [f5243gr]
pop qword [f5243gl]
pop qword [f5243ids]
pop qword [f5243old_context]
pop qword [f5243fr]
pop qword [f5243fl]
push qword [f5243fl]
push qword [f5243fr]
push qword [f5243old_context]
push qword [f5243ids]
push qword [f5243gl]
push qword [f5243gr]
push qword [f5243f2353]
push qword [f5243f1623]
push qword [f5243texp_type]
push qword [f5243texp]
push qword [f5243break]
push qword [f5243block]
push qword [f5243cexp]
push qword [f5243f6243]
push qword [f5243f2343]
jmp f1663_end
f5243f1663: dq 0
f1663_end:
jmp f4343_end
f4343fl: dq 0
f4343fr: dq 0
f4343old_context: dq 0
f4343ids: dq 0
f4343gl: dq 0
f4343gr: dq 0
f4343f2353: dq 0
f4343f1623: dq 0
f4343texp_type: dq 0
f4343texp: dq 0
f4343break: dq 0
f4343block: dq 0
f4343cexp: dq 0
f4343f6243: dq 0
f4343f2343: dq 0
f4343l: dq 0
f4343r: dq 0
f4343f2663: dq 0
f4343:
pop rax
pop qword [f4343fl]
pop qword [f4343fr]
pop qword [f4343old_context]
pop qword [f4343ids]
pop qword [f4343gl]
pop qword [f4343gr]
pop qword [f4343f2353]
pop qword [f4343f1623]
pop qword [f4343texp_type]
pop qword [f4343texp]
pop qword [f4343break]
pop qword [f4343block]
pop qword [f4343cexp]
pop qword [f4343f6243]
pop qword [f4343f2343]
pop qword [f4343l]
pop qword [f4343r]
push rax
mov [f4343f2663], rsp
mov rsp, [f4343f2663]
jmp f3663_end
f4343f3663: dq 0
f3663_end:
push qword [f4343fl]
push qword [f4343fr]
push qword [f4343old_context]
push qword [f4343ids]
push qword [f4343gl]
push qword [f4343gr]
push qword [f4343f2353]
push qword [f4343f1623]
push qword [f4343texp_type]
push qword [f4343texp]
push qword [f4343break]
push qword [f4343block]
push qword [f4343cexp]
push qword [f4343f6243]
push qword [f4343f2343]
push qword [f4343l]
push qword [f4343r]
push qword [f4343f2663]
jmp f4663_end
f4343f4663: dq 0
f4663_end:
push qword [f4343r]
pop qword [f4343f4663]
push qword [f4343f4663]
jmp f5663_end
f4343f5663: dq 0
f5663_end:
push qword [f4343l]
pop qword [f4343f5663]
push qword [f4343f5663]
jmp f6663_end
f4343f6663: dq 0
f6663_end:
push qword [f4343fr]
pop qword [f4343f6663]
push qword [f4343f6663]
jmp f7663_end
f4343f7663: dq 0
f7663_end:
push qword [f4343fl]
pop qword [f4343f7663]
push qword [f4343f7663]
jmp f0763_end
f4343f0763: dq 0
f0763_end:
jmp f1763_end
f1763: db `pop qword [{}{}]\n`
db 0
f1763_end: push f1763
pop qword [f4343f0763]
push qword [f4343f0763]
call printf
push rax
pop qword [f4343f3663]
pop qword [f4343f2663]
pop qword [f4343r]
pop qword [f4343l]
pop qword [f4343f2343]
pop qword [f4343f6243]
pop qword [f4343cexp]
pop qword [f4343block]
pop qword [f4343break]
pop qword [f4343texp]
pop qword [f4343texp_type]
pop qword [f4343f1623]
pop qword [f4343f2353]
pop qword [f4343gr]
pop qword [f4343gl]
pop qword [f4343ids]
pop qword [f4343old_context]
pop qword [f4343fr]
pop qword [f4343fl]
pop rax
push qword [f4343f3663]
push rax
pop rcx
pop rax
jmp rcx
ret
f4343_end:
mov rdi, 136
call malloc
mov qword [rax+8], f4343
mov rcx, [f5243fl]
mov qword [rax+16], rcx
mov rcx, [f5243fr]
mov qword [rax+24], rcx
mov rcx, [f5243old_context]
mov qword [rax+32], rcx
mov rcx, [f5243ids]
mov qword [rax+40], rcx
mov rcx, [f5243gl]
mov qword [rax+48], rcx
mov rcx, [f5243gr]
mov qword [rax+56], rcx
mov rcx, [f5243f2353]
mov qword [rax+64], rcx
mov rcx, [f5243f1623]
mov qword [rax+72], rcx
mov rcx, [f5243texp_type]
mov qword [rax+80], rcx
mov rcx, [f5243texp]
mov qword [rax+88], rcx
mov rcx, [f5243break]
mov qword [rax+96], rcx
mov rcx, [f5243block]
mov qword [rax+104], rcx
mov rcx, [f5243cexp]
mov qword [rax+112], rcx
mov rcx, [f5243f6243]
mov qword [rax+120], rcx
mov rcx, [f5243f2343]
mov qword [rax+128], rcx
mov qword [rax], 16
push rax
pop qword [f5243f1663]
push qword [f5243f1663]
jmp f2763_end
f5243f2763: dq 0
f2763_end:
push qword [f5243ids]
pop qword [f5243f2763]
push qword [f5243f2763]
call map_tree
push rax
pop qword [f5243f3343]
pop qword [f5243f2343]
pop qword [f5243f6243]
pop qword [f5243cexp]
pop qword [f5243block]
pop qword [f5243break]
pop qword [f5243texp]
pop qword [f5243texp_type]
pop qword [f5243f1623]
pop qword [f5243f2353]
pop qword [f5243gr]
pop qword [f5243gl]
pop qword [f5243ids]
pop qword [f5243old_context]
pop qword [f5243fr]
pop qword [f5243fl]
mov rsp, [f5243f2353]
jmp f3763_end
f5243f3763: dq 0
f3763_end:
push 0
pop qword [f5243f3763]
pop rax
push qword [f5243f3763]
push rax
pop rcx
pop rax
jmp rcx
f5243_end:
mov rdi, 104
call malloc
mov qword [rax+8], f5243
mov rcx, [f7043fl]
mov qword [rax+16], rcx
mov rcx, [f7043fr]
mov qword [rax+24], rcx
mov rcx, [f7043old_context]
mov qword [rax+32], rcx
mov rcx, [f7043ids]
mov qword [rax+40], rcx
mov rcx, [f7043gl]
mov qword [rax+48], rcx
mov rcx, [f7043gr]
mov qword [rax+56], rcx
mov rcx, [f7043f2353]
mov qword [rax+64], rcx
mov rcx, [f7043f1623]
mov qword [rax+72], rcx
mov rcx, [f7043texp_type]
mov qword [rax+80], rcx
mov rcx, [f7043texp]
mov qword [rax+88], rcx
mov rcx, [f7043break]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [f7043f7463]
push qword [f7043f7463]
jmp f4763_end
f7043f4763: dq 0
f4763_end:
jmp f7143_end
f7143fl: dq 0
f7143fr: dq 0
f7143old_context: dq 0
f7143ids: dq 0
f7143gl: dq 0
f7143gr: dq 0
f7143f2353: dq 0
f7143f1623: dq 0
f7143texp_type: dq 0
f7143texp: dq 0
f7143break: dq 0
f7143aexp: dq 0
f7143a: dq 0
f7143b: dq 0
f7143f0243: dq 0
f7143f1243: dq 0
f7143:
pop qword [f7143fl]
pop qword [f7143fr]
pop qword [f7143old_context]
pop qword [f7143ids]
pop qword [f7143gl]
pop qword [f7143gr]
pop qword [f7143f2353]
pop qword [f7143f1623]
pop qword [f7143texp_type]
pop qword [f7143texp]
pop qword [f7143break]
pop qword [f7143aexp]
push qword [f7143fl]
push qword [f7143fr]
push qword [f7143old_context]
push qword [f7143ids]
push qword [f7143gl]
push qword [f7143gr]
push qword [f7143f2353]
push qword [f7143f1623]
push qword [f7143texp_type]
push qword [f7143texp]
push qword [f7143break]
push qword [f7143aexp]
push qword [f7143aexp]
call runtime_call_ret
push rax
pop qword [f7143a]
pop qword [f7143b]
pop qword [f7143aexp]
pop qword [f7143break]
pop qword [f7143texp]
pop qword [f7143texp_type]
pop qword [f7143f1623]
pop qword [f7143f2353]
pop qword [f7143gr]
pop qword [f7143gl]
pop qword [f7143ids]
pop qword [f7143old_context]
pop qword [f7143fr]
pop qword [f7143fl]
push qword [f7143fl]
push qword [f7143fr]
push qword [f7143old_context]
push qword [f7143ids]
push qword [f7143gl]
push qword [f7143gr]
push qword [f7143f2353]
push qword [f7143f1623]
push qword [f7143texp_type]
push qword [f7143texp]
push qword [f7143break]
push qword [f7143aexp]
push qword [f7143a]
push qword [f7143b]
jmp f5763_end
f7143f5763: dq 0
f5763_end:
push qword [f7143b]
pop qword [f7143f5763]
push qword [f7143f5763]
jmp f6763_end
f7143f6763: dq 0
f6763_end:
push qword [f7143a]
pop qword [f7143f6763]
push qword [f7143f6763]
jmp f7763_end
f7143f7763: dq 0
f7763_end:
push qword [f7143fr]
pop qword [f7143f7763]
push qword [f7143f7763]
jmp f0073_end
f7143f0073: dq 0
f0073_end:
push qword [f7143fl]
pop qword [f7143f0073]
push qword [f7143f0073]
jmp f1073_end
f7143f1073: dq 0
f1073_end:
push qword [f7143old_context]
pop qword [f7143f1073]
push qword [f7143f1073]
call print_aexp
push rax
pop qword [f7143f0243]
pop qword [f7143b]
pop qword [f7143a]
pop qword [f7143aexp]
pop qword [f7143break]
pop qword [f7143texp]
pop qword [f7143texp_type]
pop qword [f7143f1623]
pop qword [f7143f2353]
pop qword [f7143gr]
pop qword [f7143gl]
pop qword [f7143ids]
pop qword [f7143old_context]
pop qword [f7143fr]
pop qword [f7143fl]
push qword [f7143fl]
push qword [f7143fr]
push qword [f7143old_context]
push qword [f7143ids]
push qword [f7143gl]
push qword [f7143gr]
push qword [f7143f2353]
push qword [f7143f1623]
push qword [f7143texp_type]
push qword [f7143texp]
push qword [f7143break]
push qword [f7143aexp]
push qword [f7143a]
push qword [f7143b]
push qword [f7143f0243]
jmp f2073_end
f7143f2073: dq 0
f2073_end:
jmp f2243_end
f2243fl: dq 0
f2243fr: dq 0
f2243old_context: dq 0
f2243ids: dq 0
f2243gl: dq 0
f2243gr: dq 0
f2243f2353: dq 0
f2243f1623: dq 0
f2243texp_type: dq 0
f2243texp: dq 0
f2243break: dq 0
f2243aexp: dq 0
f2243a: dq 0
f2243b: dq 0
f2243f0243: dq 0
f2243l: dq 0
f2243r: dq 0
f2243f3073: dq 0
f2243:
pop rax
pop qword [f2243fl]
pop qword [f2243fr]
pop qword [f2243old_context]
pop qword [f2243ids]
pop qword [f2243gl]
pop qword [f2243gr]
pop qword [f2243f2353]
pop qword [f2243f1623]
pop qword [f2243texp_type]
pop qword [f2243texp]
pop qword [f2243break]
pop qword [f2243aexp]
pop qword [f2243a]
pop qword [f2243b]
pop qword [f2243f0243]
pop qword [f2243l]
pop qword [f2243r]
push rax
mov [f2243f3073], rsp
mov rsp, [f2243f3073]
jmp f4073_end
f2243f4073: dq 0
f4073_end:
push qword [f2243fl]
push qword [f2243fr]
push qword [f2243old_context]
push qword [f2243ids]
push qword [f2243gl]
push qword [f2243gr]
push qword [f2243f2353]
push qword [f2243f1623]
push qword [f2243texp_type]
push qword [f2243texp]
push qword [f2243break]
push qword [f2243aexp]
push qword [f2243a]
push qword [f2243b]
push qword [f2243f0243]
push qword [f2243l]
push qword [f2243r]
push qword [f2243f3073]
jmp f5073_end
f2243f5073: dq 0
f5073_end:
push qword [f2243r]
pop qword [f2243f5073]
push qword [f2243f5073]
jmp f6073_end
f2243f6073: dq 0
f6073_end:
push qword [f2243l]
pop qword [f2243f6073]
push qword [f2243f6073]
jmp f7073_end
f2243f7073: dq 0
f7073_end:
push qword [f2243fr]
pop qword [f2243f7073]
push qword [f2243f7073]
jmp f0173_end
f2243f0173: dq 0
f0173_end:
push qword [f2243fl]
pop qword [f2243f0173]
push qword [f2243f0173]
jmp f1173_end
f2243f1173: dq 0
f1173_end:
jmp f2173_end
f2173: db `pop qword [{}{}]\n`
db 0
f2173_end: push f2173
pop qword [f2243f1173]
push qword [f2243f1173]
call printf
push rax
pop qword [f2243f4073]
pop qword [f2243f3073]
pop qword [f2243r]
pop qword [f2243l]
pop qword [f2243f0243]
pop qword [f2243b]
pop qword [f2243a]
pop qword [f2243aexp]
pop qword [f2243break]
pop qword [f2243texp]
pop qword [f2243texp_type]
pop qword [f2243f1623]
pop qword [f2243f2353]
pop qword [f2243gr]
pop qword [f2243gl]
pop qword [f2243ids]
pop qword [f2243old_context]
pop qword [f2243fr]
pop qword [f2243fl]
pop rax
push qword [f2243f4073]
push rax
pop rcx
pop rax
jmp rcx
ret
f2243_end:
mov rdi, 136
call malloc
mov qword [rax+8], f2243
mov rcx, [f7143fl]
mov qword [rax+16], rcx
mov rcx, [f7143fr]
mov qword [rax+24], rcx
mov rcx, [f7143old_context]
mov qword [rax+32], rcx
mov rcx, [f7143ids]
mov qword [rax+40], rcx
mov rcx, [f7143gl]
mov qword [rax+48], rcx
mov rcx, [f7143gr]
mov qword [rax+56], rcx
mov rcx, [f7143f2353]
mov qword [rax+64], rcx
mov rcx, [f7143f1623]
mov qword [rax+72], rcx
mov rcx, [f7143texp_type]
mov qword [rax+80], rcx
mov rcx, [f7143texp]
mov qword [rax+88], rcx
mov rcx, [f7143break]
mov qword [rax+96], rcx
mov rcx, [f7143aexp]
mov qword [rax+104], rcx
mov rcx, [f7143a]
mov qword [rax+112], rcx
mov rcx, [f7143b]
mov qword [rax+120], rcx
mov rcx, [f7143f0243]
mov qword [rax+128], rcx
mov qword [rax], 16
push rax
pop qword [f7143f2073]
push qword [f7143f2073]
jmp f3173_end
f7143f3173: dq 0
f3173_end:
push qword [f7143ids]
pop qword [f7143f3173]
push qword [f7143f3173]
call map_tree
push rax
pop qword [f7143f1243]
pop qword [f7143f0243]
pop qword [f7143b]
pop qword [f7143a]
pop qword [f7143aexp]
pop qword [f7143break]
pop qword [f7143texp]
pop qword [f7143texp_type]
pop qword [f7143f1623]
pop qword [f7143f2353]
pop qword [f7143gr]
pop qword [f7143gl]
pop qword [f7143ids]
pop qword [f7143old_context]
pop qword [f7143fr]
pop qword [f7143fl]
mov rsp, [f7143f2353]
jmp f4173_end
f7143f4173: dq 0
f4173_end:
push 0
pop qword [f7143f4173]
pop rax
push qword [f7143f4173]
push rax
pop rcx
pop rax
jmp rcx
f7143_end:
mov rdi, 104
call malloc
mov qword [rax+8], f7143
mov rcx, [f7043fl]
mov qword [rax+16], rcx
mov rcx, [f7043fr]
mov qword [rax+24], rcx
mov rcx, [f7043old_context]
mov qword [rax+32], rcx
mov rcx, [f7043ids]
mov qword [rax+40], rcx
mov rcx, [f7043gl]
mov qword [rax+48], rcx
mov rcx, [f7043gr]
mov qword [rax+56], rcx
mov rcx, [f7043f2353]
mov qword [rax+64], rcx
mov rcx, [f7043f1623]
mov qword [rax+72], rcx
mov rcx, [f7043texp_type]
mov qword [rax+80], rcx
mov rcx, [f7043texp]
mov qword [rax+88], rcx
mov rcx, [f7043break]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [f7043f4763]
push qword [f7043f4763]
jmp f5173_end
f7043f5173: dq 0
f5173_end:
jmp f1143_end
f1143fl: dq 0
f1143fr: dq 0
f1143old_context: dq 0
f1143ids: dq 0
f1143gl: dq 0
f1143gr: dq 0
f1143f2353: dq 0
f1143f1623: dq 0
f1143texp_type: dq 0
f1143texp: dq 0
f1143break: dq 0
f1143string: dq 0
f1143f2143: dq 0
f1143f3143: dq 0
f1143:
pop qword [f1143fl]
pop qword [f1143fr]
pop qword [f1143old_context]
pop qword [f1143ids]
pop qword [f1143gl]
pop qword [f1143gr]
pop qword [f1143f2353]
pop qword [f1143f1623]
pop qword [f1143texp_type]
pop qword [f1143texp]
pop qword [f1143break]
pop qword [f1143string]
push qword [f1143fl]
push qword [f1143fr]
push qword [f1143old_context]
push qword [f1143ids]
push qword [f1143gl]
push qword [f1143gr]
push qword [f1143f2353]
push qword [f1143f1623]
push qword [f1143texp_type]
push qword [f1143texp]
push qword [f1143break]
push qword [f1143string]
jmp f6173_end
f1143f6173: dq 0
f6173_end:
push qword [f1143string]
pop qword [f1143f6173]
push qword [f1143f6173]
call print_const_string
push rax
pop qword [f1143f2143]
pop qword [f1143string]
pop qword [f1143break]
pop qword [f1143texp]
pop qword [f1143texp_type]
pop qword [f1143f1623]
pop qword [f1143f2353]
pop qword [f1143gr]
pop qword [f1143gl]
pop qword [f1143ids]
pop qword [f1143old_context]
pop qword [f1143fr]
pop qword [f1143fl]
push qword [f1143fl]
push qword [f1143fr]
push qword [f1143old_context]
push qword [f1143ids]
push qword [f1143gl]
push qword [f1143gr]
push qword [f1143f2353]
push qword [f1143f1623]
push qword [f1143texp_type]
push qword [f1143texp]
push qword [f1143break]
push qword [f1143string]
push qword [f1143f2143]
jmp f7173_end
f1143f7173: dq 0
f7173_end:
jmp f4143_end
f4143fl: dq 0
f4143fr: dq 0
f4143old_context: dq 0
f4143ids: dq 0
f4143gl: dq 0
f4143gr: dq 0
f4143f2353: dq 0
f4143f1623: dq 0
f4143texp_type: dq 0
f4143texp: dq 0
f4143break: dq 0
f4143string: dq 0
f4143f2143: dq 0
f4143l: dq 0
f4143r: dq 0
f4143f0273: dq 0
f4143:
pop rax
pop qword [f4143fl]
pop qword [f4143fr]
pop qword [f4143old_context]
pop qword [f4143ids]
pop qword [f4143gl]
pop qword [f4143gr]
pop qword [f4143f2353]
pop qword [f4143f1623]
pop qword [f4143texp_type]
pop qword [f4143texp]
pop qword [f4143break]
pop qword [f4143string]
pop qword [f4143f2143]
pop qword [f4143l]
pop qword [f4143r]
push rax
mov [f4143f0273], rsp
mov rsp, [f4143f0273]
jmp f1273_end
f4143f1273: dq 0
f1273_end:
push qword [f4143fl]
push qword [f4143fr]
push qword [f4143old_context]
push qword [f4143ids]
push qword [f4143gl]
push qword [f4143gr]
push qword [f4143f2353]
push qword [f4143f1623]
push qword [f4143texp_type]
push qword [f4143texp]
push qword [f4143break]
push qword [f4143string]
push qword [f4143f2143]
push qword [f4143l]
push qword [f4143r]
push qword [f4143f0273]
jmp f2273_end
f4143f2273: dq 0
f2273_end:
push qword [f4143r]
pop qword [f4143f2273]
push qword [f4143f2273]
jmp f3273_end
f4143f3273: dq 0
f3273_end:
push qword [f4143l]
pop qword [f4143f3273]
push qword [f4143f3273]
jmp f4273_end
f4143f4273: dq 0
f4273_end:
push qword [f4143fr]
pop qword [f4143f4273]
push qword [f4143f4273]
jmp f5273_end
f4143f5273: dq 0
f5273_end:
push qword [f4143fl]
pop qword [f4143f5273]
push qword [f4143f5273]
jmp f6273_end
f4143f6273: dq 0
f6273_end:
jmp f7273_end
f7273: db `pop qword [{}{}]\n`
db 0
f7273_end: push f7273
pop qword [f4143f6273]
push qword [f4143f6273]
call printf
push rax
pop qword [f4143f1273]
pop qword [f4143f0273]
pop qword [f4143r]
pop qword [f4143l]
pop qword [f4143f2143]
pop qword [f4143string]
pop qword [f4143break]
pop qword [f4143texp]
pop qword [f4143texp_type]
pop qword [f4143f1623]
pop qword [f4143f2353]
pop qword [f4143gr]
pop qword [f4143gl]
pop qword [f4143ids]
pop qword [f4143old_context]
pop qword [f4143fr]
pop qword [f4143fl]
pop rax
push qword [f4143f1273]
push rax
pop rcx
pop rax
jmp rcx
ret
f4143_end:
mov rdi, 120
call malloc
mov qword [rax+8], f4143
mov rcx, [f1143fl]
mov qword [rax+16], rcx
mov rcx, [f1143fr]
mov qword [rax+24], rcx
mov rcx, [f1143old_context]
mov qword [rax+32], rcx
mov rcx, [f1143ids]
mov qword [rax+40], rcx
mov rcx, [f1143gl]
mov qword [rax+48], rcx
mov rcx, [f1143gr]
mov qword [rax+56], rcx
mov rcx, [f1143f2353]
mov qword [rax+64], rcx
mov rcx, [f1143f1623]
mov qword [rax+72], rcx
mov rcx, [f1143texp_type]
mov qword [rax+80], rcx
mov rcx, [f1143texp]
mov qword [rax+88], rcx
mov rcx, [f1143break]
mov qword [rax+96], rcx
mov rcx, [f1143string]
mov qword [rax+104], rcx
mov rcx, [f1143f2143]
mov qword [rax+112], rcx
mov qword [rax], 14
push rax
pop qword [f1143f7173]
push qword [f1143f7173]
jmp f0373_end
f1143f0373: dq 0
f0373_end:
push qword [f1143ids]
pop qword [f1143f0373]
push qword [f1143f0373]
call map_tree
push rax
pop qword [f1143f3143]
pop qword [f1143f2143]
pop qword [f1143string]
pop qword [f1143break]
pop qword [f1143texp]
pop qword [f1143texp_type]
pop qword [f1143f1623]
pop qword [f1143f2353]
pop qword [f1143gr]
pop qword [f1143gl]
pop qword [f1143ids]
pop qword [f1143old_context]
pop qword [f1143fr]
pop qword [f1143fl]
mov rsp, [f1143f2353]
jmp f1373_end
f1143f1373: dq 0
f1373_end:
push 0
pop qword [f1143f1373]
pop rax
push qword [f1143f1373]
push rax
pop rcx
pop rax
jmp rcx
f1143_end:
mov rdi, 104
call malloc
mov qword [rax+8], f1143
mov rcx, [f7043fl]
mov qword [rax+16], rcx
mov rcx, [f7043fr]
mov qword [rax+24], rcx
mov rcx, [f7043old_context]
mov qword [rax+32], rcx
mov rcx, [f7043ids]
mov qword [rax+40], rcx
mov rcx, [f7043gl]
mov qword [rax+48], rcx
mov rcx, [f7043gr]
mov qword [rax+56], rcx
mov rcx, [f7043f2353]
mov qword [rax+64], rcx
mov rcx, [f7043f1623]
mov qword [rax+72], rcx
mov rcx, [f7043texp_type]
mov qword [rax+80], rcx
mov rcx, [f7043texp]
mov qword [rax+88], rcx
mov rcx, [f7043break]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [f7043f5173]
push qword [f7043f5173]
push qword [f7043texp]
jmp runtime_call
f7043_end:
mov rdi, 96
call malloc
mov qword [rax+8], f7043
mov rcx, [print_texpfl]
mov qword [rax+16], rcx
mov rcx, [print_texpfr]
mov qword [rax+24], rcx
mov rcx, [print_texpold_context]
mov qword [rax+32], rcx
mov rcx, [print_texpids]
mov qword [rax+40], rcx
mov rcx, [print_texpgl]
mov qword [rax+48], rcx
mov rcx, [print_texpgr]
mov qword [rax+56], rcx
mov rcx, [print_texpf2353]
mov qword [rax+64], rcx
mov rcx, [print_texpf1623]
mov qword [rax+72], rcx
mov rcx, [print_texptexp_type]
mov qword [rax+80], rcx
mov rcx, [print_texptexp]
mov qword [rax+88], rcx
mov qword [rax], 11
push rax
pop qword [print_texpf0453]
push qword [print_texpf0453]
call callcc
ret
print_texp_end:
jmp texp_to_function_end
texp_to_functiontexp: dq 0
texp_to_functiontexp_type: dq 0
texp_to_functionf3373: dq 0
texp_to_functionf0673: dq 0
texp_to_function:
pop rax
pop qword [texp_to_functiontexp]
push rax
mov [texp_to_functionf0673], rsp
push qword [texp_to_functionf0673]
push qword [texp_to_functiontexp]
call runtime_call_ret
push rax
pop qword [texp_to_functiontexp_type]
pop qword [texp_to_functiontexp]
pop qword [texp_to_functionf0673]
push qword [texp_to_functionf0673]
push qword [texp_to_functiontexp_type]
push qword [texp_to_functiontexp]
jmp f1673_end
texp_to_functionf1673: dq 0
f1673_end:
jmp f4373_end
f4373f0673: dq 0
f4373texp_type: dq 0
f4373texp: dq 0
f4373break: dq 0
f4373:
pop qword [f4373f0673]
pop qword [f4373texp_type]
pop qword [f4373texp]
pop qword [f4373break]
jmp f2673_end
f4373f2673: dq 0
f2673_end:
jmp f4573_end
f4573f0673: dq 0
f4573texp_type: dq 0
f4573texp: dq 0
f4573break: dq 0
f4573f: dq 0
f4573func: dq 0
f4573:
pop qword [f4573f0673]
pop qword [f4573texp_type]
pop qword [f4573texp]
pop qword [f4573break]
pop qword [f4573f]
push qword [f4573f0673]
push qword [f4573texp_type]
push qword [f4573texp]
push qword [f4573break]
push qword [f4573f]
push qword [f4573f]
call runtime_call_ret
push rax
pop qword [f4573func]
pop qword [f4573f]
pop qword [f4573break]
pop qword [f4573texp]
pop qword [f4573texp_type]
pop qword [f4573f0673]
mov rsp, [f4573f0673]
jmp f3673_end
f4573f3673: dq 0
f3673_end:
push qword [f4573func]
pop qword [f4573f3673]
pop rax
push qword [f4573f3673]
push rax
pop rcx
pop rax
jmp rcx
f4573_end:
mov rdi, 48
call malloc
mov qword [rax+8], f4573
mov rcx, [f4373f0673]
mov qword [rax+16], rcx
mov rcx, [f4373texp_type]
mov qword [rax+24], rcx
mov rcx, [f4373texp]
mov qword [rax+32], rcx
mov rcx, [f4373break]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [f4373f2673]
push qword [f4373f2673]
jmp f4673_end
f4373f4673: dq 0
f4673_end:
jmp f2573_end
f2573f0673: dq 0
f2573texp_type: dq 0
f2573texp: dq 0
f2573break: dq 0
f2573block: dq 0
f2573:
pop qword [f2573f0673]
pop qword [f2573texp_type]
pop qword [f2573texp]
pop qword [f2573break]
pop qword [f2573block]
mov rsp, [f2573f0673]
jmp f5673_end
f2573f5673: dq 0
f5673_end:
push 0
pop qword [f2573f5673]
pop rax
push qword [f2573f5673]
push rax
pop rcx
pop rax
jmp rcx
f2573_end:
mov rdi, 48
call malloc
mov qword [rax+8], f2573
mov rcx, [f4373f0673]
mov qword [rax+16], rcx
mov rcx, [f4373texp_type]
mov qword [rax+24], rcx
mov rcx, [f4373texp]
mov qword [rax+32], rcx
mov rcx, [f4373break]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [f4373f4673]
push qword [f4373f4673]
jmp f6673_end
f4373f6673: dq 0
f6673_end:
jmp f0573_end
f0573f0673: dq 0
f0573texp_type: dq 0
f0573texp: dq 0
f0573break: dq 0
f0573aexp: dq 0
f0573:
pop qword [f0573f0673]
pop qword [f0573texp_type]
pop qword [f0573texp]
pop qword [f0573break]
pop qword [f0573aexp]
mov rsp, [f0573f0673]
jmp f7673_end
f0573f7673: dq 0
f7673_end:
push 0
pop qword [f0573f7673]
pop rax
push qword [f0573f7673]
push rax
pop rcx
pop rax
jmp rcx
f0573_end:
mov rdi, 48
call malloc
mov qword [rax+8], f0573
mov rcx, [f4373f0673]
mov qword [rax+16], rcx
mov rcx, [f4373texp_type]
mov qword [rax+24], rcx
mov rcx, [f4373texp]
mov qword [rax+32], rcx
mov rcx, [f4373break]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [f4373f6673]
push qword [f4373f6673]
jmp f0773_end
f4373f0773: dq 0
f0773_end:
jmp f6473_end
f6473f0673: dq 0
f6473texp_type: dq 0
f6473texp: dq 0
f6473break: dq 0
f6473string: dq 0
f6473:
pop qword [f6473f0673]
pop qword [f6473texp_type]
pop qword [f6473texp]
pop qword [f6473break]
pop qword [f6473string]
mov rsp, [f6473f0673]
jmp f1773_end
f6473f1773: dq 0
f1773_end:
push 0
pop qword [f6473f1773]
pop rax
push qword [f6473f1773]
push rax
pop rcx
pop rax
jmp rcx
f6473_end:
mov rdi, 48
call malloc
mov qword [rax+8], f6473
mov rcx, [f4373f0673]
mov qword [rax+16], rcx
mov rcx, [f4373texp_type]
mov qword [rax+24], rcx
mov rcx, [f4373texp]
mov qword [rax+32], rcx
mov rcx, [f4373break]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [f4373f0773]
push qword [f4373f0773]
push qword [f4373texp]
jmp runtime_call
f4373_end:
mov rdi, 40
call malloc
mov qword [rax+8], f4373
mov rcx, [texp_to_functionf0673]
mov qword [rax+16], rcx
mov rcx, [texp_to_functiontexp_type]
mov qword [rax+24], rcx
mov rcx, [texp_to_functiontexp]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [texp_to_functionf1673]
push qword [texp_to_functionf1673]
jmp f2773_end
texp_to_functionf2773: dq 0
f2773_end:
push qword [texp_to_functionf0673]
push qword [texp_to_functiontexp_type]
push qword [texp_to_functiontexp]
jmp f3773_end
texp_to_functionf3773: dq 0
f3773_end:
push qword [texp_func]
pop qword [texp_to_functionf3773]
push qword [texp_to_functionf3773]
jmp f4773_end
texp_to_functionf4773: dq 0
f4773_end:
push qword [texp_to_functiontexp_type]
pop qword [texp_to_functionf4773]
push qword [texp_to_functionf4773]
call eq
push rax
pop qword [texp_to_functionf2773]
pop qword [texp_to_functiontexp]
pop qword [texp_to_functiontexp_type]
pop qword [texp_to_functionf0673]
push qword [texp_to_functionf2773]
call if
push rax
pop qword [texp_to_functionf3373]
pop qword [texp_to_functiontexp]
pop qword [texp_to_functiontexp_type]
pop qword [texp_to_functionf0673]
mov rsp, [texp_to_functionf0673]
jmp f5773_end
texp_to_functionf5773: dq 0
f5773_end:
push 0
pop qword [texp_to_functionf5773]
pop rax
push qword [texp_to_functionf5773]
push rax
pop rcx
pop rax
jmp rcx
ret
texp_to_function_end:
jmp read_until_end
read_untilret: dq 0
read_untilc: dq 0
read_untill: dq 0
read_untilr: dq 0
read_untillb: dq 0
read_untilf7773: dq 0
read_until:
pop qword [read_untilret]
pop qword [read_untilc]
pop qword [read_untill]
pop qword [read_untilr]
push qword [read_untilret]
push qword [read_untilc]
push qword [read_untill]
push qword [read_untilr]
jmp f7004_end
read_untilf7004: dq 0
f7004_end:
push qword [read_untill]
pop qword [read_untilf7004]
push qword [read_untilf7004]
call deref_byte
push rax
pop qword [read_untillb]
pop qword [read_untilr]
pop qword [read_untill]
pop qword [read_untilc]
pop qword [read_untilret]
jmp f0104_end
read_untilf0104: dq 0
f0104_end:
jmp f1004_end
f1004ret: dq 0
f1004c: dq 0
f1004l: dq 0
f1004r: dq 0
f1004lb: dq 0
f1004break: dq 0
f1004:
pop qword [f1004ret]
pop qword [f1004c]
pop qword [f1004l]
pop qword [f1004r]
pop qword [f1004lb]
pop qword [f1004break]
jmp f1104_end
f1004f1104: dq 0
f1104_end:
push qword [f1004r]
pop qword [f1004f1104]
push qword [f1004f1104]
jmp f2104_end
f1004f2104: dq 0
f2104_end:
push qword [f1004l]
pop qword [f1004f2104]
push qword [f1004f2104]
jmp f3104_end
f1004f3104: dq 0
f3104_end:
push qword [f1004ret]
pop qword [f1004f3104]
push qword [f1004f3104]
jmp return
f1004_end:
mov rdi, 56
call malloc
mov qword [rax+8], f1004
mov rcx, [read_untilret]
mov qword [rax+16], rcx
mov rcx, [read_untilc]
mov qword [rax+24], rcx
mov rcx, [read_untill]
mov qword [rax+32], rcx
mov rcx, [read_untilr]
mov qword [rax+40], rcx
mov rcx, [read_untillb]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [read_untilf0104]
push qword [read_untilf0104]
jmp f4104_end
read_untilf4104: dq 0
f4104_end:
push qword [read_untilret]
push qword [read_untilc]
push qword [read_untill]
push qword [read_untilr]
push qword [read_untillb]
jmp f5104_end
read_untilf5104: dq 0
f5104_end:
push qword [read_untilc]
pop qword [read_untilf5104]
push qword [read_untilf5104]
jmp f6104_end
read_untilf6104: dq 0
f6104_end:
push qword [read_untillb]
pop qword [read_untilf6104]
push qword [read_untilf6104]
call eq
push rax
pop qword [read_untilf4104]
pop qword [read_untillb]
pop qword [read_untilr]
pop qword [read_untill]
pop qword [read_untilc]
pop qword [read_untilret]
push qword [read_untilf4104]
call if
push rax
pop qword [read_untilf7773]
jmp f7104_end
read_untilf7104: dq 0
f7104_end:
push qword [read_untilr]
pop qword [read_untilf7104]
push qword [read_untilf7104]
jmp f0204_end
read_untilf0204: dq 0
f0204_end:
push qword [read_untilret]
push qword [read_untilc]
push qword [read_untill]
push qword [read_untilr]
push qword [read_untillb]
push qword [read_untilf7773]
jmp f1204_end
read_untilf1204: dq 0
f1204_end:
push 1
pop qword [read_untilf1204]
push qword [read_untilf1204]
jmp f2204_end
read_untilf2204: dq 0
f2204_end:
push qword [read_untill]
pop qword [read_untilf2204]
push qword [read_untilf2204]
call add
push rax
pop qword [read_untilf0204]
pop qword [read_untilf7773]
pop qword [read_untillb]
pop qword [read_untilr]
pop qword [read_untill]
pop qword [read_untilc]
pop qword [read_untilret]
push qword [read_untilf0204]
jmp f3204_end
read_untilf3204: dq 0
f3204_end:
push qword [read_untilc]
pop qword [read_untilf3204]
push qword [read_untilf3204]
jmp f4204_end
read_untilf4204: dq 0
f4204_end:
push qword [read_untilret]
pop qword [read_untilf4204]
push qword [read_untilf4204]
jmp read_until
read_until_end:
jmp print_const_string_end
print_const_stringret: dq 0
print_const_stringstr: dq 0
print_const_stringl_start: dq 0
print_const_stringl_end: dq 0
print_const_stringil: dq 0
print_const_stringir: dq 0
print_const_stringf6204: dq 0
print_const_stringf7204: dq 0
print_const_stringf0304: dq 0
print_const_stringf1304: dq 0
print_const_stringf2304: dq 0
print_const_string:
pop qword [print_const_stringret]
pop qword [print_const_stringstr]
push qword [print_const_stringret]
push qword [print_const_stringstr]
push qword [print_const_stringstr]
call runtime_call_ret
push rax
pop qword [print_const_stringl_start]
pop qword [print_const_stringl_end]
pop qword [print_const_stringstr]
pop qword [print_const_stringret]
push qword [print_const_stringret]
push qword [print_const_stringstr]
push qword [print_const_stringl_start]
push qword [print_const_stringl_end]
call gen_label
push rax
pop qword [print_const_stringil]
pop qword [print_const_stringir]
pop qword [print_const_stringl_end]
pop qword [print_const_stringl_start]
pop qword [print_const_stringstr]
pop qword [print_const_stringret]
push qword [print_const_stringret]
push qword [print_const_stringstr]
push qword [print_const_stringl_start]
push qword [print_const_stringl_end]
push qword [print_const_stringil]
push qword [print_const_stringir]
jmp f5304_end
print_const_stringf5304: dq 0
f5304_end:
push qword [print_const_stringir]
pop qword [print_const_stringf5304]
push qword [print_const_stringf5304]
jmp f6304_end
print_const_stringf6304: dq 0
f6304_end:
push qword [print_const_stringil]
pop qword [print_const_stringf6304]
push qword [print_const_stringf6304]
jmp f7304_end
print_const_stringf7304: dq 0
f7304_end:
push qword [print_const_stringir]
pop qword [print_const_stringf7304]
push qword [print_const_stringf7304]
jmp f0404_end
print_const_stringf0404: dq 0
f0404_end:
push qword [print_const_stringil]
pop qword [print_const_stringf0404]
push qword [print_const_stringf0404]
jmp f1404_end
print_const_stringf1404: dq 0
f1404_end:
jmp f2404_end
f2404: db `jmp {}_end\n{}: db `
db 0
f2404_end: push f2404
pop qword [print_const_stringf1404]
push qword [print_const_stringf1404]
call printf
push rax
pop qword [print_const_stringf6204]
pop qword [print_const_stringir]
pop qword [print_const_stringil]
pop qword [print_const_stringl_end]
pop qword [print_const_stringl_start]
pop qword [print_const_stringstr]
pop qword [print_const_stringret]
push qword [print_const_stringret]
push qword [print_const_stringstr]
push qword [print_const_stringl_start]
push qword [print_const_stringl_end]
push qword [print_const_stringil]
push qword [print_const_stringir]
push qword [print_const_stringf6204]
jmp f3404_end
print_const_stringf3404: dq 0
f3404_end:
push 96
pop qword [print_const_stringf3404]
push qword [print_const_stringf3404]
call print_char
push rax
pop qword [print_const_stringf7204]
pop qword [print_const_stringf6204]
pop qword [print_const_stringir]
pop qword [print_const_stringil]
pop qword [print_const_stringl_end]
pop qword [print_const_stringl_start]
pop qword [print_const_stringstr]
pop qword [print_const_stringret]
push qword [print_const_stringret]
push qword [print_const_stringstr]
push qword [print_const_stringl_start]
push qword [print_const_stringl_end]
push qword [print_const_stringil]
push qword [print_const_stringir]
push qword [print_const_stringf6204]
push qword [print_const_stringf7204]
jmp f4404_end
print_const_stringf4404: dq 0
f4404_end:
push qword [print_const_stringl_end]
pop qword [print_const_stringf4404]
push qword [print_const_stringf4404]
jmp f5404_end
print_const_stringf5404: dq 0
f5404_end:
push qword [print_const_stringl_start]
pop qword [print_const_stringf5404]
push qword [print_const_stringf5404]
jmp f6404_end
print_const_stringf6404: dq 0
f6404_end:
jmp f7404_end
f7404: db `{}`
db 0
f7404_end: push f7404
pop qword [print_const_stringf6404]
push qword [print_const_stringf6404]
call printf
push rax
pop qword [print_const_stringf0304]
pop qword [print_const_stringf7204]
pop qword [print_const_stringf6204]
pop qword [print_const_stringir]
pop qword [print_const_stringil]
pop qword [print_const_stringl_end]
pop qword [print_const_stringl_start]
pop qword [print_const_stringstr]
pop qword [print_const_stringret]
push qword [print_const_stringret]
push qword [print_const_stringstr]
push qword [print_const_stringl_start]
push qword [print_const_stringl_end]
push qword [print_const_stringil]
push qword [print_const_stringir]
push qword [print_const_stringf6204]
push qword [print_const_stringf7204]
push qword [print_const_stringf0304]
jmp f0504_end
print_const_stringf0504: dq 0
f0504_end:
push 96
pop qword [print_const_stringf0504]
push qword [print_const_stringf0504]
call print_char
push rax
pop qword [print_const_stringf1304]
pop qword [print_const_stringf0304]
pop qword [print_const_stringf7204]
pop qword [print_const_stringf6204]
pop qword [print_const_stringir]
pop qword [print_const_stringil]
pop qword [print_const_stringl_end]
pop qword [print_const_stringl_start]
pop qword [print_const_stringstr]
pop qword [print_const_stringret]
push qword [print_const_stringret]
push qword [print_const_stringstr]
push qword [print_const_stringl_start]
push qword [print_const_stringl_end]
push qword [print_const_stringil]
push qword [print_const_stringir]
push qword [print_const_stringf6204]
push qword [print_const_stringf7204]
push qword [print_const_stringf0304]
push qword [print_const_stringf1304]
jmp f1504_end
print_const_stringf1504: dq 0
f1504_end:
push qword [print_const_stringir]
pop qword [print_const_stringf1504]
push qword [print_const_stringf1504]
jmp f2504_end
print_const_stringf2504: dq 0
f2504_end:
push qword [print_const_stringil]
pop qword [print_const_stringf2504]
push qword [print_const_stringf2504]
jmp f3504_end
print_const_stringf3504: dq 0
f3504_end:
push qword [print_const_stringir]
pop qword [print_const_stringf3504]
push qword [print_const_stringf3504]
jmp f4504_end
print_const_stringf4504: dq 0
f4504_end:
push qword [print_const_stringil]
pop qword [print_const_stringf4504]
push qword [print_const_stringf4504]
jmp f5504_end
print_const_stringf5504: dq 0
f5504_end:
jmp f6504_end
f6504: db `\ndb 0\n{}_end: push {}\n`
db 0
f6504_end: push f6504
pop qword [print_const_stringf5504]
push qword [print_const_stringf5504]
call printf
push rax
pop qword [print_const_stringf2304]
pop qword [print_const_stringf1304]
pop qword [print_const_stringf0304]
pop qword [print_const_stringf7204]
pop qword [print_const_stringf6204]
pop qword [print_const_stringir]
pop qword [print_const_stringil]
pop qword [print_const_stringl_end]
pop qword [print_const_stringl_start]
pop qword [print_const_stringstr]
pop qword [print_const_stringret]
jmp f7504_end
print_const_stringf7504: dq 0
f7504_end:
push 0
pop qword [print_const_stringf7504]
push qword [print_const_stringf7504]
jmp f0604_end
print_const_stringf0604: dq 0
f0604_end:
push qword [print_const_stringret]
pop qword [print_const_stringf0604]
push qword [print_const_stringf0604]
jmp return
print_const_string_end:
jmp print_aexp_end
print_aexpret: dq 0
print_aexpcomb_args: dq 0
print_aexpfname_l: dq 0
print_aexpfname_r: dq 0
print_aexpl: dq 0
print_aexpr: dq 0
print_aexpdig: dq 0
print_aexpres: dq 0
print_aexpf2604: dq 0
print_aexpf5014: dq 0
print_aexpf2214: dq 0
print_aexp:
pop qword [print_aexpret]
pop qword [print_aexpcomb_args]
pop qword [print_aexpfname_l]
pop qword [print_aexpfname_r]
pop qword [print_aexpl]
pop qword [print_aexpr]
push qword [print_aexpret]
push qword [print_aexpcomb_args]
push qword [print_aexpfname_l]
push qword [print_aexpfname_r]
push qword [print_aexpl]
push qword [print_aexpr]
jmp f7214_end
print_aexpf7214: dq 0
f7214_end:
push qword [print_aexpl]
pop qword [print_aexpf7214]
push qword [print_aexpf7214]
call deref_byte
push rax
pop qword [print_aexpdig]
pop qword [print_aexpr]
pop qword [print_aexpl]
pop qword [print_aexpfname_r]
pop qword [print_aexpfname_l]
pop qword [print_aexpcomb_args]
pop qword [print_aexpret]
push qword [print_aexpret]
push qword [print_aexpcomb_args]
push qword [print_aexpfname_l]
push qword [print_aexpfname_r]
push qword [print_aexpl]
push qword [print_aexpr]
push qword [print_aexpdig]
jmp f0314_end
print_aexpf0314: dq 0
f0314_end:
push qword [print_aexpdig]
pop qword [print_aexpf0314]
push qword [print_aexpf0314]
call is_alpha
push rax
pop qword [print_aexpres]
pop qword [print_aexpdig]
pop qword [print_aexpr]
pop qword [print_aexpl]
pop qword [print_aexpfname_r]
pop qword [print_aexpfname_l]
pop qword [print_aexpcomb_args]
pop qword [print_aexpret]
jmp f1314_end
print_aexpf1314: dq 0
f1314_end:
jmp f6604_end
f6604ret: dq 0
f6604comb_args: dq 0
f6604fname_l: dq 0
f6604fname_r: dq 0
f6604l: dq 0
f6604r: dq 0
f6604dig: dq 0
f6604res: dq 0
f6604break_o: dq 0
f6604bool: dq 0
f6604f1704: dq 0
f6604:
pop qword [f6604ret]
pop qword [f6604comb_args]
pop qword [f6604fname_l]
pop qword [f6604fname_r]
pop qword [f6604l]
pop qword [f6604r]
pop qword [f6604dig]
pop qword [f6604res]
pop qword [f6604break_o]
jmp f2314_end
f6604f2314: dq 0
f2314_end:
push qword [f6604r]
pop qword [f6604f2314]
push qword [f6604f2314]
jmp f3314_end
f6604f3314: dq 0
f3314_end:
push qword [f6604l]
pop qword [f6604f3314]
push qword [f6604f3314]
jmp f4314_end
f6604f4314: dq 0
f4314_end:
push qword [f6604comb_args]
pop qword [f6604f4314]
push qword [f6604f4314]
call search_tree
push rax
pop qword [f6604bool]
jmp f5314_end
f6604f5314: dq 0
f5314_end:
jmp f3704_end
f3704ret: dq 0
f3704comb_args: dq 0
f3704fname_l: dq 0
f3704fname_r: dq 0
f3704l: dq 0
f3704r: dq 0
f3704dig: dq 0
f3704res: dq 0
f3704break_o: dq 0
f3704bool: dq 0
f3704break: dq 0
f3704f4704: dq 0
f3704:
pop qword [f3704ret]
pop qword [f3704comb_args]
pop qword [f3704fname_l]
pop qword [f3704fname_r]
pop qword [f3704l]
pop qword [f3704r]
pop qword [f3704dig]
pop qword [f3704res]
pop qword [f3704break_o]
pop qword [f3704bool]
pop qword [f3704break]
jmp f6314_end
f3704f6314: dq 0
f6314_end:
push qword [f3704r]
pop qword [f3704f6314]
push qword [f3704f6314]
jmp f7314_end
f3704f7314: dq 0
f7314_end:
push qword [f3704l]
pop qword [f3704f7314]
push qword [f3704f7314]
jmp f0414_end
f3704f0414: dq 0
f0414_end:
push qword [f3704fname_r]
pop qword [f3704f0414]
push qword [f3704f0414]
jmp f1414_end
f3704f1414: dq 0
f1414_end:
push qword [f3704fname_l]
pop qword [f3704f1414]
push qword [f3704f1414]
jmp f2414_end
f3704f2414: dq 0
f2414_end:
jmp f3414_end
f3414: db `push qword [{}{}]\n`
db 0
f3414_end: push f3414
pop qword [f3704f2414]
push qword [f3704f2414]
call printf
push rax
pop qword [f3704f4704]
jmp f4414_end
f3704f4414: dq 0
f4414_end:
push 0
pop qword [f3704f4414]
push qword [f3704f4414]
jmp f5414_end
f3704f5414: dq 0
f5414_end:
push qword [f3704ret]
pop qword [f3704f5414]
push qword [f3704f5414]
jmp return
f3704_end:
mov rdi, 96
call malloc
mov qword [rax+8], f3704
mov rcx, [f6604ret]
mov qword [rax+16], rcx
mov rcx, [f6604comb_args]
mov qword [rax+24], rcx
mov rcx, [f6604fname_l]
mov qword [rax+32], rcx
mov rcx, [f6604fname_r]
mov qword [rax+40], rcx
mov rcx, [f6604l]
mov qword [rax+48], rcx
mov rcx, [f6604r]
mov qword [rax+56], rcx
mov rcx, [f6604dig]
mov qword [rax+64], rcx
mov rcx, [f6604res]
mov qword [rax+72], rcx
mov rcx, [f6604break_o]
mov qword [rax+80], rcx
mov rcx, [f6604bool]
mov qword [rax+88], rcx
mov qword [rax], 11
push rax
pop qword [f6604f5314]
push qword [f6604f5314]
jmp f6414_end
f6604f6414: dq 0
f6414_end:
push qword [f6604bool]
pop qword [f6604f6414]
push qword [f6604f6414]
call if
push rax
pop qword [f6604f1704]
push qword [f6604break_o]
jmp runtime_call
f6604_end:
mov rdi, 80
call malloc
mov qword [rax+8], f6604
mov rcx, [print_aexpret]
mov qword [rax+16], rcx
mov rcx, [print_aexpcomb_args]
mov qword [rax+24], rcx
mov rcx, [print_aexpfname_l]
mov qword [rax+32], rcx
mov rcx, [print_aexpfname_r]
mov qword [rax+40], rcx
mov rcx, [print_aexpl]
mov qword [rax+48], rcx
mov rcx, [print_aexpr]
mov qword [rax+56], rcx
mov rcx, [print_aexpdig]
mov qword [rax+64], rcx
mov rcx, [print_aexpres]
mov qword [rax+72], rcx
mov qword [rax], 9
push rax
pop qword [print_aexpf1314]
push qword [print_aexpf1314]
jmp f7414_end
print_aexpf7414: dq 0
f7414_end:
jmp f0514_end
print_aexpf0514: dq 0
f0514_end:
push 1
pop qword [print_aexpf0514]
push qword [print_aexpf0514]
jmp f1514_end
print_aexpf1514: dq 0
f1514_end:
push qword [print_aexpres]
pop qword [print_aexpf1514]
push qword [print_aexpf1514]
call eq
push rax
pop qword [print_aexpf7414]
push qword [print_aexpf7414]
call if
push rax
pop qword [print_aexpf2604]
jmp f2514_end
print_aexpf2514: dq 0
f2514_end:
jmp f3114_end
f3114ret: dq 0
f3114comb_args: dq 0
f3114fname_l: dq 0
f3114fname_r: dq 0
f3114l: dq 0
f3114r: dq 0
f3114dig: dq 0
f3114res: dq 0
f3114f2604: dq 0
f3114break: dq 0
f3114f4114: dq 0
f3114:
pop qword [f3114ret]
pop qword [f3114comb_args]
pop qword [f3114fname_l]
pop qword [f3114fname_r]
pop qword [f3114l]
pop qword [f3114r]
pop qword [f3114dig]
pop qword [f3114res]
pop qword [f3114f2604]
pop qword [f3114break]
jmp f3514_end
f3114f3514: dq 0
f3514_end:
push qword [f3114r]
pop qword [f3114f3514]
push qword [f3114f3514]
jmp f4514_end
f3114f4514: dq 0
f4514_end:
push qword [f3114l]
pop qword [f3114f4514]
push qword [f3114f4514]
jmp f5514_end
f3114f5514: dq 0
f5514_end:
jmp f6514_end
f6514: db `push {}\n`
db 0
f6514_end: push f6514
pop qword [f3114f5514]
push qword [f3114f5514]
call printf
push rax
pop qword [f3114f4114]
jmp f7514_end
f3114f7514: dq 0
f7514_end:
push 0
pop qword [f3114f7514]
push qword [f3114f7514]
jmp f0614_end
f3114f0614: dq 0
f0614_end:
push qword [f3114ret]
pop qword [f3114f0614]
push qword [f3114f0614]
jmp return
f3114_end:
mov rdi, 88
call malloc
mov qword [rax+8], f3114
mov rcx, [print_aexpret]
mov qword [rax+16], rcx
mov rcx, [print_aexpcomb_args]
mov qword [rax+24], rcx
mov rcx, [print_aexpfname_l]
mov qword [rax+32], rcx
mov rcx, [print_aexpfname_r]
mov qword [rax+40], rcx
mov rcx, [print_aexpl]
mov qword [rax+48], rcx
mov rcx, [print_aexpr]
mov qword [rax+56], rcx
mov rcx, [print_aexpdig]
mov qword [rax+64], rcx
mov rcx, [print_aexpres]
mov qword [rax+72], rcx
mov rcx, [print_aexpf2604]
mov qword [rax+80], rcx
mov qword [rax], 10
push rax
pop qword [print_aexpf2514]
push qword [print_aexpf2514]
jmp f1614_end
print_aexpf1614: dq 0
f1614_end:
jmp f2614_end
print_aexpf2614: dq 0
f2614_end:
push 1
pop qword [print_aexpf2614]
push qword [print_aexpf2614]
jmp f3614_end
print_aexpf3614: dq 0
f3614_end:
jmp f4614_end
print_aexpf4614: dq 0
f4614_end:
push qword [print_aexpdig]
pop qword [print_aexpf4614]
push qword [print_aexpf4614]
call is_digit
push rax
pop qword [print_aexpf3614]
push qword [print_aexpf3614]
call eq
push rax
pop qword [print_aexpf1614]
push qword [print_aexpf1614]
call if
push rax
pop qword [print_aexpf5014]
jmp f5614_end
print_aexpf5614: dq 0
f5614_end:
push qword [print_aexpr]
pop qword [print_aexpf5614]
push qword [print_aexpf5614]
jmp f6614_end
print_aexpf6614: dq 0
f6614_end:
push qword [print_aexpl]
pop qword [print_aexpf6614]
push qword [print_aexpf6614]
jmp f7614_end
print_aexpf7614: dq 0
f7614_end:
jmp f0714_end
f0714: db `push qword [{}]\n`
db 0
f0714_end: push f0714
pop qword [print_aexpf7614]
push qword [print_aexpf7614]
call printf
push rax
pop qword [print_aexpf2214]
jmp f1714_end
print_aexpf1714: dq 0
f1714_end:
push 0
pop qword [print_aexpf1714]
push qword [print_aexpf1714]
jmp f2714_end
print_aexpf2714: dq 0
f2714_end:
push qword [print_aexpret]
pop qword [print_aexpf2714]
push qword [print_aexpf2714]
jmp return
print_aexp_end:
jmp read_cexp_end
read_cexporig_tokenizer: dq 0
read_cexpassign: dq 0
read_cexptokenizer: dq 0
read_cexpf4714: dq 0
read_cexpcexp: dq 0
read_cexpf4024: dq 0
read_cexp:
pop rax
pop qword [read_cexporig_tokenizer]
push rax
mov [read_cexpf4024], rsp
push qword [read_cexporig_tokenizer]
push qword [read_cexpf4024]
jmp f5024_end
read_cexpf5024: dq 0
f5024_end:
push qword [read_cexporig_tokenizer]
pop qword [read_cexpf5024]
push qword [read_cexpf5024]
call read_assignment
push rax
pop qword [read_cexpassign]
pop qword [read_cexptokenizer]
pop qword [read_cexpf4024]
pop qword [read_cexporig_tokenizer]
jmp f6024_end
read_cexpf6024: dq 0
f6024_end:
jmp f6714_end
f6714orig_tokenizer: dq 0
f6714f4024: dq 0
f6714assign: dq 0
f6714tokenizer: dq 0
f6714break: dq 0
f6714:
pop qword [f6714orig_tokenizer]
pop qword [f6714f4024]
pop qword [f6714assign]
pop qword [f6714tokenizer]
pop qword [f6714break]
mov rsp, [f6714f4024]
jmp f7024_end
f6714f7024: dq 0
f7024_end:
push qword [f6714orig_tokenizer]
pop qword [f6714f7024]
pop rax
push qword [f6714f7024]
push rax
jmp f0124_end
f6714f0124: dq 0
f0124_end:
push 0
pop qword [f6714f0124]
pop rax
push qword [f6714f0124]
push rax
pop rcx
pop rax
jmp rcx
f6714_end:
mov rdi, 48
call malloc
mov qword [rax+8], f6714
mov rcx, [read_cexporig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_cexpf4024]
mov qword [rax+24], rcx
mov rcx, [read_cexpassign]
mov qword [rax+32], rcx
mov rcx, [read_cexptokenizer]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [read_cexpf6024]
push qword [read_cexpf6024]
jmp f1124_end
read_cexpf1124: dq 0
f1124_end:
push qword [read_cexporig_tokenizer]
push qword [read_cexpf4024]
push qword [read_cexpassign]
push qword [read_cexptokenizer]
jmp f2124_end
read_cexpf2124: dq 0
f2124_end:
push 0
pop qword [read_cexpf2124]
push qword [read_cexpf2124]
jmp f3124_end
read_cexpf3124: dq 0
f3124_end:
push qword [read_cexpassign]
pop qword [read_cexpf3124]
push qword [read_cexpf3124]
call eq
push rax
pop qword [read_cexpf1124]
pop qword [read_cexptokenizer]
pop qword [read_cexpassign]
pop qword [read_cexpf4024]
pop qword [read_cexporig_tokenizer]
push qword [read_cexpf1124]
call if
push rax
pop qword [read_cexpf4714]
push qword [read_cexporig_tokenizer]
push qword [read_cexpf4024]
push qword [read_cexpassign]
push qword [read_cexpf4714]
jmp f4124_end
read_cexpf4124: dq 0
f4124_end:
push qword [read_cexptokenizer]
pop qword [read_cexpf4124]
push qword [read_cexpf4124]
call read_cexp
push rax
pop qword [read_cexpcexp]
pop qword [read_cexptokenizer]
pop qword [read_cexpf4714]
pop qword [read_cexpassign]
pop qword [read_cexpf4024]
pop qword [read_cexporig_tokenizer]
mov rsp, [read_cexpf4024]
jmp f5124_end
read_cexpf5124: dq 0
f5124_end:
push qword [read_cexptokenizer]
pop qword [read_cexpf5124]
pop rax
push qword [read_cexpf5124]
push rax
jmp f6124_end
read_cexpf6124: dq 0
f6124_end:
jmp f1024_end
f1024orig_tokenizer: dq 0
f1024f4024: dq 0
f1024assign: dq 0
f1024f4714: dq 0
f1024cexp: dq 0
f1024tokenizer: dq 0
f1024f7124: dq 0
f1024:
pop rax
pop qword [f1024orig_tokenizer]
pop qword [f1024f4024]
pop qword [f1024assign]
pop qword [f1024f4714]
pop qword [f1024cexp]
pop qword [f1024tokenizer]
push rax
mov [f1024f7124], rsp
mov rsp, [f1024f7124]
jmp f0224_end
f1024f0224: dq 0
f0224_end:
push qword [f1024cexp]
pop qword [f1024f0224]
pop rax
push qword [f1024f0224]
push rax
jmp f1224_end
f1024f1224: dq 0
f1224_end:
push qword [f1024assign]
pop qword [f1024f1224]
pop rax
push qword [f1024f1224]
push rax
pop rcx
pop rax
jmp rcx
ret
f1024_end:
mov rdi, 64
call malloc
mov qword [rax+8], f1024
mov rcx, [read_cexporig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_cexpf4024]
mov qword [rax+24], rcx
mov rcx, [read_cexpassign]
mov qword [rax+32], rcx
mov rcx, [read_cexpf4714]
mov qword [rax+40], rcx
mov rcx, [read_cexpcexp]
mov qword [rax+48], rcx
mov rcx, [read_cexptokenizer]
mov qword [rax+56], rcx
mov qword [rax], 7
push rax
pop qword [read_cexpf6124]
pop rax
push qword [read_cexpf6124]
push rax
pop rcx
pop rax
jmp rcx
ret
read_cexp_end:
jmp filter_context_end
filter_contextret: dq 0
filter_contextold_context: dq 0
filter_contextids: dq 0
filter_contextcontext: dq 0
filter_context:
pop qword [filter_contextret]
pop qword [filter_contextold_context]
pop qword [filter_contextids]
push qword [filter_contextret]
push qword [filter_contextold_context]
push qword [filter_contextids]
jmp f0424_end
filter_contextf0424: dq 0
f0424_end:
jmp f3224_end
f3224ret: dq 0
f3224old_context: dq 0
f3224ids: dq 0
f3224l: dq 0
f3224r: dq 0
f3224f4224: dq 0
f3224f1424: dq 0
f3224:
pop rax
pop qword [f3224ret]
pop qword [f3224old_context]
pop qword [f3224ids]
pop qword [f3224l]
pop qword [f3224r]
push rax
mov [f3224f1424], rsp
jmp f2424_end
f3224f2424: dq 0
f2424_end:
jmp f0324_end
f0324ret: dq 0
f0324old_context: dq 0
f0324ids: dq 0
f0324l: dq 0
f0324r: dq 0
f0324f1424: dq 0
f0324break: dq 0
f0324:
pop qword [f0324ret]
pop qword [f0324old_context]
pop qword [f0324ids]
pop qword [f0324l]
pop qword [f0324r]
pop qword [f0324f1424]
pop qword [f0324break]
mov rsp, [f0324f1424]
jmp f3424_end
f0324f3424: dq 0
f3424_end:
push qword [f0324ret]
push qword [f0324old_context]
push qword [f0324ids]
push qword [f0324l]
push qword [f0324r]
push qword [f0324f1424]
push qword [f0324break]
call make_nil
push rax
pop qword [f0324f3424]
pop qword [f0324break]
pop qword [f0324f1424]
pop qword [f0324r]
pop qword [f0324l]
pop qword [f0324ids]
pop qword [f0324old_context]
pop qword [f0324ret]
pop rax
push qword [f0324f3424]
push rax
pop rcx
pop rax
jmp rcx
f0324_end:
mov rdi, 64
call malloc
mov qword [rax+8], f0324
mov rcx, [f3224ret]
mov qword [rax+16], rcx
mov rcx, [f3224old_context]
mov qword [rax+24], rcx
mov rcx, [f3224ids]
mov qword [rax+32], rcx
mov rcx, [f3224l]
mov qword [rax+40], rcx
mov rcx, [f3224r]
mov qword [rax+48], rcx
mov rcx, [f3224f1424]
mov qword [rax+56], rcx
mov qword [rax], 7
push rax
pop qword [f3224f2424]
push qword [f3224f2424]
jmp f4424_end
f3224f4424: dq 0
f4424_end:
jmp f5424_end
f3224f5424: dq 0
f5424_end:
push qword [f3224r]
pop qword [f3224f5424]
push qword [f3224f5424]
jmp f6424_end
f3224f6424: dq 0
f6424_end:
push qword [f3224l]
pop qword [f3224f6424]
push qword [f3224f6424]
jmp f7424_end
f3224f7424: dq 0
f7424_end:
push qword [f3224ids]
pop qword [f3224f7424]
push qword [f3224f7424]
call search_tree
push rax
pop qword [f3224f4424]
push qword [f3224f4424]
call if
push rax
pop qword [f3224f4224]
mov rsp, [f3224f1424]
jmp f0524_end
f3224f0524: dq 0
f0524_end:
jmp f1524_end
f3224f1524: dq 0
f1524_end:
push qword [f3224r]
pop qword [f3224f1524]
push qword [f3224f1524]
jmp f2524_end
f3224f2524: dq 0
f2524_end:
push qword [f3224l]
pop qword [f3224f2524]
push qword [f3224f2524]
call make_leaf
push rax
pop qword [f3224f0524]
pop rax
push qword [f3224f0524]
push rax
pop rcx
pop rax
jmp rcx
ret
f3224_end:
mov rdi, 40
call malloc
mov qword [rax+8], f3224
mov rcx, [filter_contextret]
mov qword [rax+16], rcx
mov rcx, [filter_contextold_context]
mov qword [rax+24], rcx
mov rcx, [filter_contextids]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [filter_contextf0424]
push qword [filter_contextf0424]
jmp f3524_end
filter_contextf3524: dq 0
f3524_end:
push qword [filter_contextold_context]
pop qword [filter_contextf3524]
push qword [filter_contextf3524]
call map_tree
push rax
pop qword [filter_contextcontext]
pop qword [filter_contextids]
pop qword [filter_contextold_context]
pop qword [filter_contextret]
jmp f4524_end
filter_contextf4524: dq 0
f4524_end:
push qword [filter_contextcontext]
pop qword [filter_contextf4524]
push qword [filter_contextf4524]
jmp f5524_end
filter_contextf5524: dq 0
f5524_end:
push qword [filter_contextret]
pop qword [filter_contextf5524]
push qword [filter_contextf5524]
jmp return
filter_context_end:
jmp merge_context_end
merge_contextret: dq 0
merge_contextold_context: dq 0
merge_contextids: dq 0
merge_contextcontext: dq 0
merge_context:
pop qword [merge_contextret]
pop qword [merge_contextold_context]
pop qword [merge_contextids]
push qword [merge_contextret]
push qword [merge_contextold_context]
push qword [merge_contextids]
jmp f3624_end
merge_contextf3624: dq 0
f3624_end:
push qword [merge_contextids]
pop qword [merge_contextf3624]
push qword [merge_contextf3624]
jmp f4624_end
merge_contextf4624: dq 0
f4624_end:
push qword [merge_contextold_context]
pop qword [merge_contextf4624]
push qword [merge_contextf4624]
call filter_context
push rax
pop qword [merge_contextcontext]
pop qword [merge_contextids]
pop qword [merge_contextold_context]
pop qword [merge_contextret]
jmp f5624_end
merge_contextf5624: dq 0
f5624_end:
jmp f6624_end
merge_contextf6624: dq 0
f6624_end:
push qword [merge_contextids]
pop qword [merge_contextf6624]
push qword [merge_contextf6624]
jmp f7624_end
merge_contextf7624: dq 0
f7624_end:
push qword [merge_contextcontext]
pop qword [merge_contextf7624]
push qword [merge_contextf7624]
call make_internal
push rax
pop qword [merge_contextf5624]
push qword [merge_contextf5624]
jmp f0724_end
merge_contextf0724: dq 0
f0724_end:
push qword [merge_contextret]
pop qword [merge_contextf0724]
push qword [merge_contextf0724]
jmp return
merge_context_end:
jmp print_cexp_end
print_cexpret: dq 0
print_cexpfl: dq 0
print_cexpfr: dq 0
print_cexpcontext: dq 0
print_cexpis_returning: dq 0
print_cexpgl: dq 0
print_cexpgr: dq 0
print_cexpcexp: dq 0
print_cexpassign: dq 0
print_cexpf2724: dq 0
print_cexpf3724: dq 0
print_cexpassign_vars: dq 0
print_cexpf3034: dq 0
print_cexp:
pop qword [print_cexpret]
pop qword [print_cexpfl]
pop qword [print_cexpfr]
pop qword [print_cexpcontext]
pop qword [print_cexpis_returning]
pop qword [print_cexpgl]
pop qword [print_cexpgr]
pop qword [print_cexpcexp]
push qword [print_cexpret]
push qword [print_cexpfl]
push qword [print_cexpfr]
push qword [print_cexpcontext]
push qword [print_cexpis_returning]
push qword [print_cexpgl]
push qword [print_cexpgr]
push qword [print_cexpcexp]
call runtime_call_ret
push rax
pop qword [print_cexpassign]
pop qword [print_cexpcexp]
pop qword [print_cexpgr]
pop qword [print_cexpgl]
pop qword [print_cexpis_returning]
pop qword [print_cexpcontext]
pop qword [print_cexpfr]
pop qword [print_cexpfl]
pop qword [print_cexpret]
push qword [print_cexpret]
push qword [print_cexpfl]
push qword [print_cexpfr]
push qword [print_cexpcontext]
push qword [print_cexpis_returning]
push qword [print_cexpgl]
push qword [print_cexpgr]
push qword [print_cexpassign]
push qword [print_cexpcexp]
jmp f6034_end
print_cexpf6034: dq 0
f6034_end:
push qword [print_cexpassign]
pop qword [print_cexpf6034]
push qword [print_cexpf6034]
jmp f7034_end
print_cexpf7034: dq 0
f7034_end:
push qword [print_cexpgr]
pop qword [print_cexpf7034]
push qword [print_cexpf7034]
jmp f0134_end
print_cexpf0134: dq 0
f0134_end:
push qword [print_cexpgl]
pop qword [print_cexpf0134]
push qword [print_cexpf0134]
jmp f1134_end
print_cexpf1134: dq 0
f1134_end:
push qword [print_cexpis_returning]
pop qword [print_cexpf1134]
push qword [print_cexpf1134]
jmp f2134_end
print_cexpf2134: dq 0
f2134_end:
push qword [print_cexpcontext]
pop qword [print_cexpf2134]
push qword [print_cexpf2134]
jmp f3134_end
print_cexpf3134: dq 0
f3134_end:
push qword [print_cexpfr]
pop qword [print_cexpf3134]
push qword [print_cexpf3134]
jmp f4134_end
print_cexpf4134: dq 0
f4134_end:
push qword [print_cexpfl]
pop qword [print_cexpf4134]
push qword [print_cexpf4134]
call print_assignment
push rax
pop qword [print_cexpf2724]
pop qword [print_cexpcexp]
pop qword [print_cexpassign]
pop qword [print_cexpgr]
pop qword [print_cexpgl]
pop qword [print_cexpis_returning]
pop qword [print_cexpcontext]
pop qword [print_cexpfr]
pop qword [print_cexpfl]
pop qword [print_cexpret]
jmp f5134_end
print_cexpf5134: dq 0
f5134_end:
jmp f7724_end
f7724ret: dq 0
f7724fl: dq 0
f7724fr: dq 0
f7724context: dq 0
f7724is_returning: dq 0
f7724gl: dq 0
f7724gr: dq 0
f7724assign: dq 0
f7724cexp: dq 0
f7724f2724: dq 0
f7724break: dq 0
f7724:
pop qword [f7724ret]
pop qword [f7724fl]
pop qword [f7724fr]
pop qword [f7724context]
pop qword [f7724is_returning]
pop qword [f7724gl]
pop qword [f7724gr]
pop qword [f7724assign]
pop qword [f7724cexp]
pop qword [f7724f2724]
pop qword [f7724break]
jmp f6134_end
f7724f6134: dq 0
f6134_end:
push 0
pop qword [f7724f6134]
push qword [f7724f6134]
jmp f7134_end
f7724f7134: dq 0
f7134_end:
push qword [f7724ret]
pop qword [f7724f7134]
push qword [f7724f7134]
jmp return
f7724_end:
mov rdi, 96
call malloc
mov qword [rax+8], f7724
mov rcx, [print_cexpret]
mov qword [rax+16], rcx
mov rcx, [print_cexpfl]
mov qword [rax+24], rcx
mov rcx, [print_cexpfr]
mov qword [rax+32], rcx
mov rcx, [print_cexpcontext]
mov qword [rax+40], rcx
mov rcx, [print_cexpis_returning]
mov qword [rax+48], rcx
mov rcx, [print_cexpgl]
mov qword [rax+56], rcx
mov rcx, [print_cexpgr]
mov qword [rax+64], rcx
mov rcx, [print_cexpassign]
mov qword [rax+72], rcx
mov rcx, [print_cexpcexp]
mov qword [rax+80], rcx
mov rcx, [print_cexpf2724]
mov qword [rax+88], rcx
mov qword [rax], 11
push rax
pop qword [print_cexpf5134]
push qword [print_cexpf5134]
jmp f0234_end
print_cexpf0234: dq 0
f0234_end:
jmp f1234_end
print_cexpf1234: dq 0
f1234_end:
push 0
pop qword [print_cexpf1234]
push qword [print_cexpf1234]
jmp f2234_end
print_cexpf2234: dq 0
f2234_end:
push qword [print_cexpcexp]
pop qword [print_cexpf2234]
push qword [print_cexpf2234]
call eq
push rax
pop qword [print_cexpf0234]
push qword [print_cexpf0234]
call if
push rax
pop qword [print_cexpf3724]
push qword [print_cexpret]
push qword [print_cexpfl]
push qword [print_cexpfr]
push qword [print_cexpcontext]
push qword [print_cexpis_returning]
push qword [print_cexpgl]
push qword [print_cexpgr]
push qword [print_cexpassign]
push qword [print_cexpcexp]
push qword [print_cexpf2724]
push qword [print_cexpf3724]
jmp f3234_end
print_cexpf3234: dq 0
f3234_end:
push qword [print_cexpassign]
pop qword [print_cexpf3234]
push qword [print_cexpf3234]
call get_assignment_vars
push rax
pop qword [print_cexpassign_vars]
pop qword [print_cexpf3724]
pop qword [print_cexpf2724]
pop qword [print_cexpcexp]
pop qword [print_cexpassign]
pop qword [print_cexpgr]
pop qword [print_cexpgl]
pop qword [print_cexpis_returning]
pop qword [print_cexpcontext]
pop qword [print_cexpfr]
pop qword [print_cexpfl]
pop qword [print_cexpret]
push qword [print_cexpret]
push qword [print_cexpfl]
push qword [print_cexpfr]
push qword [print_cexpcontext]
push qword [print_cexpis_returning]
push qword [print_cexpgl]
push qword [print_cexpgr]
push qword [print_cexpassign]
push qword [print_cexpcexp]
push qword [print_cexpf2724]
push qword [print_cexpf3724]
push qword [print_cexpassign_vars]
jmp f4234_end
print_cexpf4234: dq 0
f4234_end:
push qword [print_cexpcexp]
pop qword [print_cexpf4234]
push qword [print_cexpf4234]
jmp f5234_end
print_cexpf5234: dq 0
f5234_end:
push qword [print_cexpgr]
pop qword [print_cexpf5234]
push qword [print_cexpf5234]
jmp f6234_end
print_cexpf6234: dq 0
f6234_end:
push qword [print_cexpgl]
pop qword [print_cexpf6234]
push qword [print_cexpf6234]
jmp f7234_end
print_cexpf7234: dq 0
f7234_end:
push qword [print_cexpis_returning]
pop qword [print_cexpf7234]
push qword [print_cexpf7234]
jmp f0334_end
print_cexpf0334: dq 0
f0334_end:
push qword [print_cexpret]
push qword [print_cexpfl]
push qword [print_cexpfr]
push qword [print_cexpcontext]
push qword [print_cexpis_returning]
push qword [print_cexpgl]
push qword [print_cexpgr]
push qword [print_cexpassign]
push qword [print_cexpcexp]
push qword [print_cexpf2724]
push qword [print_cexpf3724]
push qword [print_cexpassign_vars]
jmp f1334_end
print_cexpf1334: dq 0
f1334_end:
push qword [print_cexpassign_vars]
pop qword [print_cexpf1334]
push qword [print_cexpf1334]
jmp f2334_end
print_cexpf2334: dq 0
f2334_end:
push qword [print_cexpcontext]
pop qword [print_cexpf2334]
push qword [print_cexpf2334]
call merge_context
push rax
pop qword [print_cexpf0334]
pop qword [print_cexpassign_vars]
pop qword [print_cexpf3724]
pop qword [print_cexpf2724]
pop qword [print_cexpcexp]
pop qword [print_cexpassign]
pop qword [print_cexpgr]
pop qword [print_cexpgl]
pop qword [print_cexpis_returning]
pop qword [print_cexpcontext]
pop qword [print_cexpfr]
pop qword [print_cexpfl]
pop qword [print_cexpret]
push qword [print_cexpf0334]
jmp f3334_end
print_cexpf3334: dq 0
f3334_end:
push qword [print_cexpfr]
pop qword [print_cexpf3334]
push qword [print_cexpf3334]
jmp f4334_end
print_cexpf4334: dq 0
f4334_end:
push qword [print_cexpfl]
pop qword [print_cexpf4334]
push qword [print_cexpf4334]
call print_cexp
push rax
pop qword [print_cexpf3034]
pop qword [print_cexpassign_vars]
pop qword [print_cexpf3724]
pop qword [print_cexpf2724]
pop qword [print_cexpcexp]
pop qword [print_cexpassign]
pop qword [print_cexpgr]
pop qword [print_cexpgl]
pop qword [print_cexpis_returning]
pop qword [print_cexpcontext]
pop qword [print_cexpfr]
pop qword [print_cexpfl]
pop qword [print_cexpret]
jmp f5334_end
print_cexpf5334: dq 0
f5334_end:
push 0
pop qword [print_cexpf5334]
push qword [print_cexpf5334]
jmp f6334_end
print_cexpf6334: dq 0
f6334_end:
push qword [print_cexpret]
pop qword [print_cexpf6334]
push qword [print_cexpf6334]
jmp return
print_cexp_end:
jmp get_cexp_vars_end
get_cexp_varsret: dq 0
get_cexp_varscexp: dq 0
get_cexp_varsassign: dq 0
get_cexp_varsids: dq 0
get_cexp_varsf0434: dq 0
get_cexp_varsids2: dq 0
get_cexp_vars:
pop qword [get_cexp_varsret]
pop qword [get_cexp_varscexp]
push qword [get_cexp_varsret]
push qword [get_cexp_varscexp]
call runtime_call_ret
push rax
pop qword [get_cexp_varsassign]
pop qword [get_cexp_varscexp]
pop qword [get_cexp_varsret]
push qword [get_cexp_varsret]
push qword [get_cexp_varsassign]
push qword [get_cexp_varscexp]
jmp f4534_end
get_cexp_varsf4534: dq 0
f4534_end:
push qword [get_cexp_varsassign]
pop qword [get_cexp_varsf4534]
push qword [get_cexp_varsf4534]
call get_assignment_vars
push rax
pop qword [get_cexp_varsids]
pop qword [get_cexp_varscexp]
pop qword [get_cexp_varsassign]
pop qword [get_cexp_varsret]
jmp f5534_end
get_cexp_varsf5534: dq 0
f5534_end:
jmp f4434_end
f4434ret: dq 0
f4434assign: dq 0
f4434cexp: dq 0
f4434ids: dq 0
f4434break: dq 0
f4434:
pop qword [f4434ret]
pop qword [f4434assign]
pop qword [f4434cexp]
pop qword [f4434ids]
pop qword [f4434break]
jmp f6534_end
f4434f6534: dq 0
f6534_end:
push qword [f4434ids]
pop qword [f4434f6534]
push qword [f4434f6534]
jmp f7534_end
f4434f7534: dq 0
f7534_end:
push qword [f4434ret]
pop qword [f4434f7534]
push qword [f4434f7534]
jmp return
f4434_end:
mov rdi, 48
call malloc
mov qword [rax+8], f4434
mov rcx, [get_cexp_varsret]
mov qword [rax+16], rcx
mov rcx, [get_cexp_varsassign]
mov qword [rax+24], rcx
mov rcx, [get_cexp_varscexp]
mov qword [rax+32], rcx
mov rcx, [get_cexp_varsids]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [get_cexp_varsf5534]
push qword [get_cexp_varsf5534]
jmp f0634_end
get_cexp_varsf0634: dq 0
f0634_end:
jmp f1634_end
get_cexp_varsf1634: dq 0
f1634_end:
push 0
pop qword [get_cexp_varsf1634]
push qword [get_cexp_varsf1634]
jmp f2634_end
get_cexp_varsf2634: dq 0
f2634_end:
push qword [get_cexp_varscexp]
pop qword [get_cexp_varsf2634]
push qword [get_cexp_varsf2634]
call eq
push rax
pop qword [get_cexp_varsf0634]
push qword [get_cexp_varsf0634]
call if
push rax
pop qword [get_cexp_varsf0434]
push qword [get_cexp_varsret]
push qword [get_cexp_varsassign]
push qword [get_cexp_varscexp]
push qword [get_cexp_varsids]
push qword [get_cexp_varsf0434]
jmp f3634_end
get_cexp_varsf3634: dq 0
f3634_end:
push qword [get_cexp_varscexp]
pop qword [get_cexp_varsf3634]
push qword [get_cexp_varsf3634]
call get_cexp_vars
push rax
pop qword [get_cexp_varsids2]
pop qword [get_cexp_varsf0434]
pop qword [get_cexp_varsids]
pop qword [get_cexp_varscexp]
pop qword [get_cexp_varsassign]
pop qword [get_cexp_varsret]
push qword [get_cexp_varsret]
push qword [get_cexp_varsassign]
push qword [get_cexp_varscexp]
push qword [get_cexp_varsids]
push qword [get_cexp_varsf0434]
jmp f4634_end
get_cexp_varsf4634: dq 0
f4634_end:
push qword [get_cexp_varsids]
pop qword [get_cexp_varsf4634]
push qword [get_cexp_varsf4634]
jmp f5634_end
get_cexp_varsf5634: dq 0
f5634_end:
push qword [get_cexp_varsids2]
pop qword [get_cexp_varsf5634]
push qword [get_cexp_varsf5634]
call filter_context
push rax
pop qword [get_cexp_varsids2]
pop qword [get_cexp_varsf0434]
pop qword [get_cexp_varsids]
pop qword [get_cexp_varscexp]
pop qword [get_cexp_varsassign]
pop qword [get_cexp_varsret]
jmp f6634_end
get_cexp_varsf6634: dq 0
f6634_end:
jmp f7634_end
get_cexp_varsf7634: dq 0
f7634_end:
push qword [get_cexp_varsids2]
pop qword [get_cexp_varsf7634]
push qword [get_cexp_varsf7634]
jmp f0734_end
get_cexp_varsf0734: dq 0
f0734_end:
push qword [get_cexp_varsids]
pop qword [get_cexp_varsf0734]
push qword [get_cexp_varsf0734]
call make_internal
push rax
pop qword [get_cexp_varsf6634]
push qword [get_cexp_varsf6634]
jmp f1734_end
get_cexp_varsf1734: dq 0
f1734_end:
push qword [get_cexp_varsret]
pop qword [get_cexp_varsf1734]
push qword [get_cexp_varsf1734]
jmp return
get_cexp_vars_end:
jmp read_eq_if_end
read_eq_ifret: dq 0
read_eq_ifneed: dq 0
read_eq_ifl: dq 0
read_eq_ifr: dq 0
read_eq_iff3734: dq 0
read_eq_if:
pop qword [read_eq_ifret]
pop qword [read_eq_ifneed]
pop qword [read_eq_ifl]
pop qword [read_eq_ifr]
jmp f7144_end
read_eq_iff7144: dq 0
f7144_end:
jmp f5734_end
f5734ret: dq 0
f5734need: dq 0
f5734l: dq 0
f5734r: dq 0
f5734break: dq 0
f5734t: dq 0
f5734tl: dq 0
f5734tr: dq 0
f5734f0044: dq 0
f5734:
pop qword [f5734ret]
pop qword [f5734need]
pop qword [f5734l]
pop qword [f5734r]
pop qword [f5734break]
jmp f0244_end
f5734f0244: dq 0
f0244_end:
push qword [f5734r]
pop qword [f5734f0244]
push qword [f5734f0244]
jmp f1244_end
f5734f1244: dq 0
f1244_end:
push qword [f5734l]
pop qword [f5734f1244]
push qword [f5734f1244]
call read_token
push rax
pop qword [f5734l]
pop qword [f5734r]
pop qword [f5734t]
pop qword [f5734tl]
pop qword [f5734tr]
jmp f2244_end
f5734f2244: dq 0
f2244_end:
jmp f6044_end
f6044ret: dq 0
f6044need: dq 0
f6044l: dq 0
f6044r: dq 0
f6044t: dq 0
f6044tl: dq 0
f6044tr: dq 0
f6044break: dq 0
f6044:
pop qword [f6044ret]
pop qword [f6044need]
pop qword [f6044l]
pop qword [f6044r]
pop qword [f6044t]
pop qword [f6044tl]
pop qword [f6044tr]
pop qword [f6044break]
jmp f3244_end
f6044f3244: dq 0
f3244_end:
push 0
pop qword [f6044f3244]
push qword [f6044f3244]
jmp f4244_end
f6044f4244: dq 0
f4244_end:
push 0
pop qword [f6044f4244]
push qword [f6044f4244]
jmp return
f6044_end:
mov rdi, 72
call malloc
mov qword [rax+8], f6044
mov rcx, [f5734ret]
mov qword [rax+16], rcx
mov rcx, [f5734need]
mov qword [rax+24], rcx
mov rcx, [f5734l]
mov qword [rax+32], rcx
mov rcx, [f5734r]
mov qword [rax+40], rcx
mov rcx, [f5734t]
mov qword [rax+48], rcx
mov rcx, [f5734tl]
mov qword [rax+56], rcx
mov rcx, [f5734tr]
mov qword [rax+64], rcx
mov qword [rax], 8
push rax
pop qword [f5734f2244]
push qword [f5734f2244]
jmp f5244_end
f5734f5244: dq 0
f5244_end:
jmp f6244_end
f5734f6244: dq 0
f6244_end:
jmp f7244_end
f5734f7244: dq 0
f7244_end:
push qword [f5734tl]
pop qword [f5734f7244]
push qword [f5734f7244]
jmp f0344_end
f5734f0344: dq 0
f0344_end:
jmp f1344_end
f1344: db `=`
db 0
f1344_end: push f1344
pop qword [f5734f0344]
push qword [f5734f0344]
call matches
push rax
pop qword [f5734f6244]
push qword [f5734f6244]
call not
push rax
pop qword [f5734f5244]
push qword [f5734f5244]
call if
push rax
pop qword [f5734f0044]
jmp f2344_end
f5734f2344: dq 0
f2344_end:
push qword [f5734r]
pop qword [f5734f2344]
push qword [f5734f2344]
jmp f3344_end
f5734f3344: dq 0
f3344_end:
push qword [f5734l]
pop qword [f5734f3344]
push qword [f5734f3344]
jmp f4344_end
f5734f4344: dq 0
f4344_end:
push qword [f5734ret]
pop qword [f5734f4344]
push qword [f5734f4344]
jmp return
f5734_end:
mov rdi, 48
call malloc
mov qword [rax+8], f5734
mov rcx, [read_eq_ifret]
mov qword [rax+16], rcx
mov rcx, [read_eq_ifneed]
mov qword [rax+24], rcx
mov rcx, [read_eq_ifl]
mov qword [rax+32], rcx
mov rcx, [read_eq_ifr]
mov qword [rax+40], rcx
mov qword [rax], 5
push rax
pop qword [read_eq_iff7144]
push qword [read_eq_iff7144]
jmp f5344_end
read_eq_iff5344: dq 0
f5344_end:
push qword [read_eq_ifneed]
pop qword [read_eq_iff5344]
push qword [read_eq_iff5344]
call if
push rax
pop qword [read_eq_iff3734]
jmp f6344_end
read_eq_iff6344: dq 0
f6344_end:
push qword [read_eq_ifr]
pop qword [read_eq_iff6344]
push qword [read_eq_iff6344]
jmp f7344_end
read_eq_iff7344: dq 0
f7344_end:
push qword [read_eq_ifl]
pop qword [read_eq_iff7344]
push qword [read_eq_iff7344]
jmp f0444_end
read_eq_iff0444: dq 0
f0444_end:
push qword [read_eq_ifret]
pop qword [read_eq_iff0444]
push qword [read_eq_iff0444]
jmp return
read_eq_if_end:
jmp read_assign_left_end
read_assign_leftorig_tokenizer: dq 0
read_assign_leftorig_l: dq 0
read_assign_leftr: dq 0
read_assign_leftl: dq 0
read_assign_leftids: dq 0
read_assign_lefttokenizer: dq 0
read_assign_leftnl: dq 0
read_assign_leftnr: dq 0
read_assign_leftt: dq 0
read_assign_lefttl: dq 0
read_assign_lefttr: dq 0
read_assign_leftf2444: dq 0
read_assign_leftf6444: dq 0
read_assign_left:
pop rax
pop qword [read_assign_leftorig_tokenizer]
push rax
mov [read_assign_leftf6444], rsp
push qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftf6444]
jmp f7444_end
read_assign_leftf7444: dq 0
f7444_end:
push qword [read_assign_leftorig_tokenizer]
pop qword [read_assign_leftf7444]
push qword [read_assign_leftf7444]
call tokenizer_to_lr
push rax
pop qword [read_assign_leftorig_l]
pop qword [read_assign_leftr]
pop qword [read_assign_leftf6444]
pop qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftorig_l]
pop qword [read_assign_leftl]
push qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftf6444]
push qword [read_assign_leftorig_l]
push qword [read_assign_leftr]
push qword [read_assign_leftl]
jmp f0544_end
read_assign_leftf0544: dq 0
f0544_end:
push qword [read_assign_leftorig_tokenizer]
pop qword [read_assign_leftf0544]
push qword [read_assign_leftf0544]
call read_id_list
push rax
pop qword [read_assign_leftids]
pop qword [read_assign_lefttokenizer]
pop qword [read_assign_leftl]
pop qword [read_assign_leftr]
pop qword [read_assign_leftorig_l]
pop qword [read_assign_leftf6444]
pop qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftf6444]
push qword [read_assign_leftorig_l]
push qword [read_assign_leftids]
push qword [read_assign_lefttokenizer]
jmp f1544_end
read_assign_leftf1544: dq 0
f1544_end:
push qword [read_assign_lefttokenizer]
pop qword [read_assign_leftf1544]
push qword [read_assign_leftf1544]
call tokenizer_to_lr
push rax
pop qword [read_assign_leftl]
pop qword [read_assign_leftr]
pop qword [read_assign_lefttokenizer]
pop qword [read_assign_leftids]
pop qword [read_assign_leftorig_l]
pop qword [read_assign_leftf6444]
pop qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftf6444]
push qword [read_assign_leftorig_l]
push qword [read_assign_leftids]
push qword [read_assign_lefttokenizer]
push qword [read_assign_leftl]
push qword [read_assign_leftr]
jmp f2544_end
read_assign_leftf2544: dq 0
f2544_end:
push qword [read_assign_leftr]
pop qword [read_assign_leftf2544]
push qword [read_assign_leftf2544]
jmp f3544_end
read_assign_leftf3544: dq 0
f3544_end:
push qword [read_assign_leftl]
pop qword [read_assign_leftf3544]
push qword [read_assign_leftf3544]
call read_token
push rax
pop qword [read_assign_leftnl]
pop qword [read_assign_leftnr]
pop qword [read_assign_leftt]
pop qword [read_assign_lefttl]
pop qword [read_assign_lefttr]
pop qword [read_assign_leftr]
pop qword [read_assign_leftl]
pop qword [read_assign_lefttokenizer]
pop qword [read_assign_leftids]
pop qword [read_assign_leftorig_l]
pop qword [read_assign_leftf6444]
pop qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftf6444]
push qword [read_assign_leftorig_l]
push qword [read_assign_leftids]
push qword [read_assign_lefttokenizer]
push qword [read_assign_leftl]
push qword [read_assign_leftr]
push qword [read_assign_leftnl]
push qword [read_assign_leftnr]
push qword [read_assign_leftt]
push qword [read_assign_lefttl]
push qword [read_assign_lefttr]
jmp f4544_end
read_assign_leftf4544: dq 0
f4544_end:
jmp f3444_end
f3444orig_tokenizer: dq 0
f3444f6444: dq 0
f3444orig_l: dq 0
f3444ids: dq 0
f3444tokenizer: dq 0
f3444l: dq 0
f3444r: dq 0
f3444nl: dq 0
f3444nr: dq 0
f3444t: dq 0
f3444tl: dq 0
f3444tr: dq 0
f3444break: dq 0
f3444il: dq 0
f3444ir: dq 0
f3444:
pop qword [f3444orig_tokenizer]
pop qword [f3444f6444]
pop qword [f3444orig_l]
pop qword [f3444ids]
pop qword [f3444tokenizer]
pop qword [f3444l]
pop qword [f3444r]
pop qword [f3444nl]
pop qword [f3444nr]
pop qword [f3444t]
pop qword [f3444tl]
pop qword [f3444tr]
pop qword [f3444break]
push qword [f3444orig_tokenizer]
push qword [f3444f6444]
push qword [f3444orig_l]
push qword [f3444ids]
push qword [f3444tokenizer]
push qword [f3444l]
push qword [f3444r]
push qword [f3444nl]
push qword [f3444nr]
push qword [f3444t]
push qword [f3444tl]
push qword [f3444tr]
push qword [f3444break]
call gen_label
push rax
pop qword [f3444il]
pop qword [f3444ir]
pop qword [f3444break]
pop qword [f3444tr]
pop qword [f3444tl]
pop qword [f3444t]
pop qword [f3444nr]
pop qword [f3444nl]
pop qword [f3444r]
pop qword [f3444l]
pop qword [f3444tokenizer]
pop qword [f3444ids]
pop qword [f3444orig_l]
pop qword [f3444f6444]
pop qword [f3444orig_tokenizer]
mov rsp, [f3444f6444]
jmp f5544_end
f3444f5544: dq 0
f5544_end:
push qword [f3444orig_tokenizer]
push qword [f3444f6444]
push qword [f3444orig_l]
push qword [f3444ids]
push qword [f3444tokenizer]
push qword [f3444l]
push qword [f3444r]
push qword [f3444nl]
push qword [f3444nr]
push qword [f3444t]
push qword [f3444tl]
push qword [f3444tr]
push qword [f3444break]
push qword [f3444il]
push qword [f3444ir]
jmp f6544_end
f3444f6544: dq 0
f6544_end:
push qword [f3444ir]
pop qword [f3444f6544]
push qword [f3444f6544]
jmp f7544_end
f3444f7544: dq 0
f7544_end:
push qword [f3444il]
pop qword [f3444f7544]
push qword [f3444f7544]
call make_leaf
push rax
pop qword [f3444f5544]
pop qword [f3444ir]
pop qword [f3444il]
pop qword [f3444break]
pop qword [f3444tr]
pop qword [f3444tl]
pop qword [f3444t]
pop qword [f3444nr]
pop qword [f3444nl]
pop qword [f3444r]
pop qword [f3444l]
pop qword [f3444tokenizer]
pop qword [f3444ids]
pop qword [f3444orig_l]
pop qword [f3444f6444]
pop qword [f3444orig_tokenizer]
pop rax
push qword [f3444f5544]
push rax
jmp f0644_end
f3444f0644: dq 0
f0644_end:
push qword [f3444r]
pop qword [f3444f0644]
pop rax
push qword [f3444f0644]
push rax
jmp f1644_end
f3444f1644: dq 0
f1644_end:
push qword [f3444orig_l]
pop qword [f3444f1644]
pop rax
push qword [f3444f1644]
push rax
pop rcx
pop rax
jmp rcx
f3444_end:
mov rdi, 112
call malloc
mov qword [rax+8], f3444
mov rcx, [read_assign_leftorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_assign_leftf6444]
mov qword [rax+24], rcx
mov rcx, [read_assign_leftorig_l]
mov qword [rax+32], rcx
mov rcx, [read_assign_leftids]
mov qword [rax+40], rcx
mov rcx, [read_assign_lefttokenizer]
mov qword [rax+48], rcx
mov rcx, [read_assign_leftl]
mov qword [rax+56], rcx
mov rcx, [read_assign_leftr]
mov qword [rax+64], rcx
mov rcx, [read_assign_leftnl]
mov qword [rax+72], rcx
mov rcx, [read_assign_leftnr]
mov qword [rax+80], rcx
mov rcx, [read_assign_leftt]
mov qword [rax+88], rcx
mov rcx, [read_assign_lefttl]
mov qword [rax+96], rcx
mov rcx, [read_assign_lefttr]
mov qword [rax+104], rcx
mov qword [rax], 13
push rax
pop qword [read_assign_leftf4544]
push qword [read_assign_leftf4544]
jmp f2644_end
read_assign_leftf2644: dq 0
f2644_end:
push qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftf6444]
push qword [read_assign_leftorig_l]
push qword [read_assign_leftids]
push qword [read_assign_lefttokenizer]
push qword [read_assign_leftl]
push qword [read_assign_leftr]
push qword [read_assign_leftnl]
push qword [read_assign_leftnr]
push qword [read_assign_leftt]
push qword [read_assign_lefttl]
push qword [read_assign_lefttr]
jmp f3644_end
read_assign_leftf3644: dq 0
f3644_end:
push qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftf6444]
push qword [read_assign_leftorig_l]
push qword [read_assign_leftids]
push qword [read_assign_lefttokenizer]
push qword [read_assign_leftl]
push qword [read_assign_leftr]
push qword [read_assign_leftnl]
push qword [read_assign_leftnr]
push qword [read_assign_leftt]
push qword [read_assign_lefttl]
push qword [read_assign_lefttr]
jmp f4644_end
read_assign_leftf4644: dq 0
f4644_end:
push qword [read_assign_lefttl]
pop qword [read_assign_leftf4644]
push qword [read_assign_leftf4644]
jmp f5644_end
read_assign_leftf5644: dq 0
f5644_end:
jmp f6644_end
f6644: db `=`
db 0
f6644_end: push f6644
pop qword [read_assign_leftf5644]
push qword [read_assign_leftf5644]
call matches
push rax
pop qword [read_assign_leftf3644]
pop qword [read_assign_lefttr]
pop qword [read_assign_lefttl]
pop qword [read_assign_leftt]
pop qword [read_assign_leftnr]
pop qword [read_assign_leftnl]
pop qword [read_assign_leftr]
pop qword [read_assign_leftl]
pop qword [read_assign_lefttokenizer]
pop qword [read_assign_leftids]
pop qword [read_assign_leftorig_l]
pop qword [read_assign_leftf6444]
pop qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftf3644]
call not
push rax
pop qword [read_assign_leftf2644]
pop qword [read_assign_lefttr]
pop qword [read_assign_lefttl]
pop qword [read_assign_leftt]
pop qword [read_assign_leftnr]
pop qword [read_assign_leftnl]
pop qword [read_assign_leftr]
pop qword [read_assign_leftl]
pop qword [read_assign_lefttokenizer]
pop qword [read_assign_leftids]
pop qword [read_assign_leftorig_l]
pop qword [read_assign_leftf6444]
pop qword [read_assign_leftorig_tokenizer]
push qword [read_assign_leftf2644]
call if
push rax
pop qword [read_assign_leftf2444]
pop qword [read_assign_lefttr]
pop qword [read_assign_lefttl]
pop qword [read_assign_leftt]
pop qword [read_assign_leftnr]
pop qword [read_assign_leftnl]
pop qword [read_assign_leftr]
pop qword [read_assign_leftl]
pop qword [read_assign_lefttokenizer]
pop qword [read_assign_leftids]
pop qword [read_assign_leftorig_l]
pop qword [read_assign_leftf6444]
pop qword [read_assign_leftorig_tokenizer]
mov rsp, [read_assign_leftf6444]
jmp f7644_end
read_assign_leftf7644: dq 0
f7644_end:
push qword [read_assign_leftids]
pop qword [read_assign_leftf7644]
pop rax
push qword [read_assign_leftf7644]
push rax
jmp f0744_end
read_assign_leftf0744: dq 0
f0744_end:
push qword [read_assign_leftnr]
pop qword [read_assign_leftf0744]
pop rax
push qword [read_assign_leftf0744]
push rax
jmp f1744_end
read_assign_leftf1744: dq 0
f1744_end:
push qword [read_assign_leftnl]
pop qword [read_assign_leftf1744]
pop rax
push qword [read_assign_leftf1744]
push rax
pop rcx
pop rax
jmp rcx
ret
read_assign_left_end:
jmp read_assign_val_end
read_assign_valorig_tokenizer: dq 0
read_assign_valorig_l: dq 0
read_assign_valr: dq 0
read_assign_vall: dq 0
read_assign_valids: dq 0
read_assign_valf3744: dq 0
read_assign_valcall_exp: dq 0
read_assign_valt: dq 0
read_assign_valtl: dq 0
read_assign_valtr: dq 0
read_assign_valf0054: dq 0
read_assign_valf4154: dq 0
read_assign_val:
pop rax
pop qword [read_assign_valorig_tokenizer]
push rax
mov [read_assign_valf4154], rsp
push qword [read_assign_valorig_tokenizer]
push qword [read_assign_valf4154]
jmp f5154_end
read_assign_valf5154: dq 0
f5154_end:
push qword [read_assign_valorig_tokenizer]
pop qword [read_assign_valf5154]
push qword [read_assign_valf5154]
call tokenizer_to_lr
push rax
pop qword [read_assign_valorig_l]
pop qword [read_assign_valr]
pop qword [read_assign_valf4154]
pop qword [read_assign_valorig_tokenizer]
push qword [read_assign_valorig_tokenizer]
push qword [read_assign_valf4154]
push qword [read_assign_valorig_l]
jmp f6154_end
read_assign_valf6154: dq 0
f6154_end:
push qword [read_assign_valorig_tokenizer]
pop qword [read_assign_valf6154]
push qword [read_assign_valf6154]
call read_assign_left
push rax
pop qword [read_assign_vall]
pop qword [read_assign_valr]
pop qword [read_assign_valids]
pop qword [read_assign_valorig_l]
pop qword [read_assign_valf4154]
pop qword [read_assign_valorig_tokenizer]
jmp f7154_end
read_assign_valf7154: dq 0
f7154_end:
jmp f5744_end
f5744orig_tokenizer: dq 0
f5744f4154: dq 0
f5744orig_l: dq 0
f5744l: dq 0
f5744r: dq 0
f5744ids: dq 0
f5744break: dq 0
f5744:
pop qword [f5744orig_tokenizer]
pop qword [f5744f4154]
pop qword [f5744orig_l]
pop qword [f5744l]
pop qword [f5744r]
pop qword [f5744ids]
pop qword [f5744break]
mov rsp, [f5744f4154]
jmp f0254_end
f5744f0254: dq 0
f0254_end:
push qword [f5744orig_tokenizer]
pop qword [f5744f0254]
pop rax
push qword [f5744f0254]
push rax
jmp f1254_end
f5744f1254: dq 0
f1254_end:
push 0
pop qword [f5744f1254]
pop rax
push qword [f5744f1254]
push rax
pop rcx
pop rax
jmp rcx
f5744_end:
mov rdi, 64
call malloc
mov qword [rax+8], f5744
mov rcx, [read_assign_valorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_assign_valf4154]
mov qword [rax+24], rcx
mov rcx, [read_assign_valorig_l]
mov qword [rax+32], rcx
mov rcx, [read_assign_vall]
mov qword [rax+40], rcx
mov rcx, [read_assign_valr]
mov qword [rax+48], rcx
mov rcx, [read_assign_valids]
mov qword [rax+56], rcx
mov qword [rax], 7
push rax
pop qword [read_assign_valf7154]
push qword [read_assign_valf7154]
jmp f2254_end
read_assign_valf2254: dq 0
f2254_end:
push qword [read_assign_valorig_tokenizer]
push qword [read_assign_valf4154]
push qword [read_assign_valorig_l]
push qword [read_assign_vall]
push qword [read_assign_valr]
push qword [read_assign_valids]
jmp f3254_end
read_assign_valf3254: dq 0
f3254_end:
push qword [read_assign_vall]
pop qword [read_assign_valf3254]
push qword [read_assign_valf3254]
jmp f4254_end
read_assign_valf4254: dq 0
f4254_end:
push 0
pop qword [read_assign_valf4254]
push qword [read_assign_valf4254]
call eq
push rax
pop qword [read_assign_valf2254]
pop qword [read_assign_valids]
pop qword [read_assign_valr]
pop qword [read_assign_vall]
pop qword [read_assign_valorig_l]
pop qword [read_assign_valf4154]
pop qword [read_assign_valorig_tokenizer]
push qword [read_assign_valf2254]
call if
push rax
pop qword [read_assign_valf3744]
push qword [read_assign_valorig_tokenizer]
push qword [read_assign_valf4154]
push qword [read_assign_valorig_l]
push qword [read_assign_valids]
push qword [read_assign_valf3744]
jmp f5254_end
read_assign_valf5254: dq 0
f5254_end:
push qword [read_assign_valr]
pop qword [read_assign_valf5254]
push qword [read_assign_valf5254]
jmp f6254_end
read_assign_valf6254: dq 0
f6254_end:
push qword [read_assign_vall]
pop qword [read_assign_valf6254]
push qword [read_assign_valf6254]
call read_call_expression
push rax
pop qword [read_assign_vall]
pop qword [read_assign_valr]
pop qword [read_assign_valcall_exp]
pop qword [read_assign_valf3744]
pop qword [read_assign_valids]
pop qword [read_assign_valorig_l]
pop qword [read_assign_valf4154]
pop qword [read_assign_valorig_tokenizer]
push qword [read_assign_valorig_tokenizer]
push qword [read_assign_valf4154]
push qword [read_assign_valorig_l]
push qword [read_assign_valids]
push qword [read_assign_valf3744]
push qword [read_assign_valcall_exp]
jmp f7254_end
read_assign_valf7254: dq 0
f7254_end:
push qword [read_assign_valr]
pop qword [read_assign_valf7254]
push qword [read_assign_valf7254]
jmp f0354_end
read_assign_valf0354: dq 0
f0354_end:
push qword [read_assign_vall]
pop qword [read_assign_valf0354]
push qword [read_assign_valf0354]
call read_token
push rax
pop qword [read_assign_vall]
pop qword [read_assign_valr]
pop qword [read_assign_valt]
pop qword [read_assign_valtl]
pop qword [read_assign_valtr]
pop qword [read_assign_valcall_exp]
pop qword [read_assign_valf3744]
pop qword [read_assign_valids]
pop qword [read_assign_valorig_l]
pop qword [read_assign_valf4154]
pop qword [read_assign_valorig_tokenizer]
jmp f1354_end
read_assign_valf1354: dq 0
f1354_end:
jmp f6054_end
f6054orig_tokenizer: dq 0
f6054f4154: dq 0
f6054orig_l: dq 0
f6054ids: dq 0
f6054f3744: dq 0
f6054call_exp: dq 0
f6054l: dq 0
f6054r: dq 0
f6054t: dq 0
f6054tl: dq 0
f6054tr: dq 0
f6054break: dq 0
f6054:
pop qword [f6054orig_tokenizer]
pop qword [f6054f4154]
pop qword [f6054orig_l]
pop qword [f6054ids]
pop qword [f6054f3744]
pop qword [f6054call_exp]
pop qword [f6054l]
pop qword [f6054r]
pop qword [f6054t]
pop qword [f6054tl]
pop qword [f6054tr]
pop qword [f6054break]
mov rsp, [f6054f4154]
jmp f2354_end
f6054f2354: dq 0
f2354_end:
push qword [f6054orig_tokenizer]
pop qword [f6054f2354]
pop rax
push qword [f6054f2354]
push rax
jmp f3354_end
f6054f3354: dq 0
f3354_end:
push 0
pop qword [f6054f3354]
pop rax
push qword [f6054f3354]
push rax
pop rcx
pop rax
jmp rcx
f6054_end:
mov rdi, 104
call malloc
mov qword [rax+8], f6054
mov rcx, [read_assign_valorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_assign_valf4154]
mov qword [rax+24], rcx
mov rcx, [read_assign_valorig_l]
mov qword [rax+32], rcx
mov rcx, [read_assign_valids]
mov qword [rax+40], rcx
mov rcx, [read_assign_valf3744]
mov qword [rax+48], rcx
mov rcx, [read_assign_valcall_exp]
mov qword [rax+56], rcx
mov rcx, [read_assign_vall]
mov qword [rax+64], rcx
mov rcx, [read_assign_valr]
mov qword [rax+72], rcx
mov rcx, [read_assign_valt]
mov qword [rax+80], rcx
mov rcx, [read_assign_valtl]
mov qword [rax+88], rcx
mov rcx, [read_assign_valtr]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [read_assign_valf1354]
push qword [read_assign_valf1354]
jmp f4354_end
read_assign_valf4354: dq 0
f4354_end:
jmp f5354_end
read_assign_valf5354: dq 0
f5354_end:
jmp f6354_end
read_assign_valf6354: dq 0
f6354_end:
push qword [read_assign_valtl]
pop qword [read_assign_valf6354]
push qword [read_assign_valf6354]
jmp f7354_end
read_assign_valf7354: dq 0
f7354_end:
jmp f0454_end
f0454: db `;`
db 0
f0454_end: push f0454
pop qword [read_assign_valf7354]
push qword [read_assign_valf7354]
call matches
push rax
pop qword [read_assign_valf5354]
push qword [read_assign_valf5354]
call not
push rax
pop qword [read_assign_valf4354]
push qword [read_assign_valf4354]
call if
push rax
pop qword [read_assign_valf0054]
mov rsp, [read_assign_valf4154]
jmp f1454_end
read_assign_valf1454: dq 0
f1454_end:
push qword [read_assign_valorig_tokenizer]
push qword [read_assign_valf4154]
push qword [read_assign_valorig_l]
push qword [read_assign_valids]
push qword [read_assign_valf3744]
push qword [read_assign_valcall_exp]
push qword [read_assign_vall]
push qword [read_assign_valr]
push qword [read_assign_valt]
push qword [read_assign_valtl]
push qword [read_assign_valtr]
push qword [read_assign_valf0054]
jmp f2454_end
read_assign_valf2454: dq 0
f2454_end:
push qword [read_assign_valr]
pop qword [read_assign_valf2454]
push qword [read_assign_valf2454]
jmp f3454_end
read_assign_valf3454: dq 0
f3454_end:
push qword [read_assign_vall]
pop qword [read_assign_valf3454]
push qword [read_assign_valf3454]
call make_tokenizer
push rax
pop qword [read_assign_valf1454]
pop qword [read_assign_valf0054]
pop qword [read_assign_valtr]
pop qword [read_assign_valtl]
pop qword [read_assign_valt]
pop qword [read_assign_valr]
pop qword [read_assign_vall]
pop qword [read_assign_valcall_exp]
pop qword [read_assign_valf3744]
pop qword [read_assign_valids]
pop qword [read_assign_valorig_l]
pop qword [read_assign_valf4154]
pop qword [read_assign_valorig_tokenizer]
pop rax
push qword [read_assign_valf1454]
push rax
jmp f4454_end
read_assign_valf4454: dq 0
f4454_end:
jmp f1154_end
f1154orig_tokenizer: dq 0
f1154f4154: dq 0
f1154orig_l: dq 0
f1154ids: dq 0
f1154f3744: dq 0
f1154call_exp: dq 0
f1154l: dq 0
f1154r: dq 0
f1154t: dq 0
f1154tl: dq 0
f1154tr: dq 0
f1154f0054: dq 0
f1154f5454: dq 0
f1154:
pop rax
pop qword [f1154orig_tokenizer]
pop qword [f1154f4154]
pop qword [f1154orig_l]
pop qword [f1154ids]
pop qword [f1154f3744]
pop qword [f1154call_exp]
pop qword [f1154l]
pop qword [f1154r]
pop qword [f1154t]
pop qword [f1154tl]
pop qword [f1154tr]
pop qword [f1154f0054]
push rax
mov [f1154f5454], rsp
mov rsp, [f1154f5454]
jmp f6454_end
f1154f6454: dq 0
f6454_end:
push qword [f1154call_exp]
pop qword [f1154f6454]
pop rax
push qword [f1154f6454]
push rax
jmp f7454_end
f1154f7454: dq 0
f7454_end:
push qword [f1154ids]
pop qword [f1154f7454]
pop rax
push qword [f1154f7454]
push rax
pop rcx
pop rax
jmp rcx
ret
f1154_end:
mov rdi, 112
call malloc
mov qword [rax+8], f1154
mov rcx, [read_assign_valorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_assign_valf4154]
mov qword [rax+24], rcx
mov rcx, [read_assign_valorig_l]
mov qword [rax+32], rcx
mov rcx, [read_assign_valids]
mov qword [rax+40], rcx
mov rcx, [read_assign_valf3744]
mov qword [rax+48], rcx
mov rcx, [read_assign_valcall_exp]
mov qword [rax+56], rcx
mov rcx, [read_assign_vall]
mov qword [rax+64], rcx
mov rcx, [read_assign_valr]
mov qword [rax+72], rcx
mov rcx, [read_assign_valt]
mov qword [rax+80], rcx
mov rcx, [read_assign_valtl]
mov qword [rax+88], rcx
mov rcx, [read_assign_valtr]
mov qword [rax+96], rcx
mov rcx, [read_assign_valf0054]
mov qword [rax+104], rcx
mov qword [rax], 13
push rax
pop qword [read_assign_valf4454]
pop rax
push qword [read_assign_valf4454]
push rax
pop rcx
pop rax
jmp rcx
ret
read_assign_val_end:
jmp assign_return_end
assign_return: dq 0
assign_return_end:
push 1
pop qword [assign_return]
jmp assign_application_end
assign_application: dq 0
assign_application_end:
push 2
pop qword [assign_application]
jmp assign_statement_end
assign_statement: dq 0
assign_statement_end:
push 3
pop qword [assign_statement]
jmp read_assignment_end
read_assignmentorig_tokenizer: dq 0
read_assignmentorig_l: dq 0
read_assignmentr: dq 0
read_assignmenttoken: dq 0
read_assignmenttokenizer: dq 0
read_assignmentnl: dq 0
read_assignmentnr: dq 0
read_assignmentf1554: dq 0
read_assignmentassign: dq 0
read_assignmentf0654: dq 0
read_assignmentl: dq 0
read_assignmentcexp: dq 0
read_assignmentf5654: dq 0
read_assignmentf5754: dq 0
read_assignment:
pop rax
pop qword [read_assignmentorig_tokenizer]
push rax
mov [read_assignmentf5754], rsp
push qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf5754]
jmp f6754_end
read_assignmentf6754: dq 0
f6754_end:
push qword [read_assignmentorig_tokenizer]
pop qword [read_assignmentf6754]
push qword [read_assignmentf6754]
call tokenizer_to_lr
push rax
pop qword [read_assignmentorig_l]
pop qword [read_assignmentr]
pop qword [read_assignmentf5754]
pop qword [read_assignmentorig_tokenizer]
push qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf5754]
push qword [read_assignmentorig_l]
push qword [read_assignmentr]
push qword [read_assignmentorig_tokenizer]
call runtime_call_ret
push rax
pop qword [read_assignmenttoken]
pop qword [read_assignmenttokenizer]
pop qword [read_assignmentr]
pop qword [read_assignmentorig_l]
pop qword [read_assignmentf5754]
pop qword [read_assignmentorig_tokenizer]
push qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf5754]
push qword [read_assignmentorig_l]
push qword [read_assignmentr]
push qword [read_assignmenttoken]
push qword [read_assignmenttokenizer]
jmp f7754_end
read_assignmentf7754: dq 0
f7754_end:
push qword [read_assignmenttokenizer]
pop qword [read_assignmentf7754]
push qword [read_assignmentf7754]
call tokenizer_to_lr
push rax
pop qword [read_assignmentnl]
pop qword [read_assignmentnr]
pop qword [read_assignmenttokenizer]
pop qword [read_assignmenttoken]
pop qword [read_assignmentr]
pop qword [read_assignmentorig_l]
pop qword [read_assignmentf5754]
pop qword [read_assignmentorig_tokenizer]
push qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf5754]
push qword [read_assignmentorig_l]
push qword [read_assignmentr]
push qword [read_assignmenttoken]
push qword [read_assignmenttokenizer]
push qword [read_assignmentnl]
push qword [read_assignmentnr]
jmp f0064_end
read_assignmentf0064: dq 0
f0064_end:
jmp f2554_end
f2554orig_tokenizer: dq 0
f2554f5754: dq 0
f2554orig_l: dq 0
f2554r: dq 0
f2554token: dq 0
f2554tokenizer: dq 0
f2554nl: dq 0
f2554nr: dq 0
f2554break: dq 0
f2554l: dq 0
f2554call_exps: dq 0
f2554:
pop qword [f2554orig_tokenizer]
pop qword [f2554f5754]
pop qword [f2554orig_l]
pop qword [f2554r]
pop qword [f2554token]
pop qword [f2554tokenizer]
pop qword [f2554nl]
pop qword [f2554nr]
pop qword [f2554break]
push qword [f2554orig_tokenizer]
push qword [f2554f5754]
push qword [f2554orig_l]
push qword [f2554token]
push qword [f2554tokenizer]
push qword [f2554nl]
push qword [f2554nr]
push qword [f2554break]
jmp f1064_end
f2554f1064: dq 0
f1064_end:
push qword [f2554nr]
pop qword [f2554f1064]
push qword [f2554f1064]
jmp f2064_end
f2554f2064: dq 0
f2064_end:
push qword [f2554nl]
pop qword [f2554f2064]
push qword [f2554f2064]
call read_call_exp_list
push rax
pop qword [f2554l]
pop qword [f2554r]
pop qword [f2554call_exps]
pop qword [f2554break]
pop qword [f2554nr]
pop qword [f2554nl]
pop qword [f2554tokenizer]
pop qword [f2554token]
pop qword [f2554orig_l]
pop qword [f2554f5754]
pop qword [f2554orig_tokenizer]
mov rsp, [f2554f5754]
jmp f3064_end
f2554f3064: dq 0
f3064_end:
push qword [f2554orig_tokenizer]
push qword [f2554f5754]
push qword [f2554orig_l]
push qword [f2554token]
push qword [f2554tokenizer]
push qword [f2554nl]
push qword [f2554nr]
push qword [f2554break]
push qword [f2554l]
push qword [f2554r]
push qword [f2554call_exps]
jmp f4064_end
f2554f4064: dq 0
f4064_end:
push qword [f2554r]
pop qword [f2554f4064]
push qword [f2554f4064]
jmp f5064_end
f2554f5064: dq 0
f5064_end:
push qword [f2554l]
pop qword [f2554f5064]
push qword [f2554f5064]
call make_tokenizer
push rax
pop qword [f2554f3064]
pop qword [f2554call_exps]
pop qword [f2554r]
pop qword [f2554l]
pop qword [f2554break]
pop qword [f2554nr]
pop qword [f2554nl]
pop qword [f2554tokenizer]
pop qword [f2554token]
pop qword [f2554orig_l]
pop qword [f2554f5754]
pop qword [f2554orig_tokenizer]
pop rax
push qword [f2554f3064]
push rax
jmp f6064_end
f2554f6064: dq 0
f6064_end:
jmp f3554_end
f3554orig_tokenizer: dq 0
f3554f5754: dq 0
f3554orig_l: dq 0
f3554token: dq 0
f3554tokenizer: dq 0
f3554nl: dq 0
f3554nr: dq 0
f3554break: dq 0
f3554l: dq 0
f3554r: dq 0
f3554call_exps: dq 0
f3554f7064: dq 0
f3554:
pop rax
pop qword [f3554orig_tokenizer]
pop qword [f3554f5754]
pop qword [f3554orig_l]
pop qword [f3554token]
pop qword [f3554tokenizer]
pop qword [f3554nl]
pop qword [f3554nr]
pop qword [f3554break]
pop qword [f3554l]
pop qword [f3554r]
pop qword [f3554call_exps]
push rax
mov [f3554f7064], rsp
mov rsp, [f3554f7064]
jmp f0164_end
f3554f0164: dq 0
f0164_end:
jmp f4554_end
f4554orig_tokenizer: dq 0
f4554f5754: dq 0
f4554orig_l: dq 0
f4554token: dq 0
f4554tokenizer: dq 0
f4554nl: dq 0
f4554nr: dq 0
f4554break: dq 0
f4554l: dq 0
f4554r: dq 0
f4554call_exps: dq 0
f4554f7064: dq 0
f4554f1164: dq 0
f4554:
pop rax
pop qword [f4554orig_tokenizer]
pop qword [f4554f5754]
pop qword [f4554orig_l]
pop qword [f4554token]
pop qword [f4554tokenizer]
pop qword [f4554nl]
pop qword [f4554nr]
pop qword [f4554break]
pop qword [f4554l]
pop qword [f4554r]
pop qword [f4554call_exps]
pop qword [f4554f7064]
push rax
mov [f4554f1164], rsp
mov rsp, [f4554f1164]
jmp f2164_end
f4554f2164: dq 0
f2164_end:
push qword [f4554call_exps]
pop qword [f4554f2164]
pop rax
push qword [f4554f2164]
push rax
pop rcx
pop rax
jmp rcx
ret
f4554_end:
mov rdi, 112
call malloc
mov qword [rax+8], f4554
mov rcx, [f3554orig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [f3554f5754]
mov qword [rax+24], rcx
mov rcx, [f3554orig_l]
mov qword [rax+32], rcx
mov rcx, [f3554token]
mov qword [rax+40], rcx
mov rcx, [f3554tokenizer]
mov qword [rax+48], rcx
mov rcx, [f3554nl]
mov qword [rax+56], rcx
mov rcx, [f3554nr]
mov qword [rax+64], rcx
mov rcx, [f3554break]
mov qword [rax+72], rcx
mov rcx, [f3554l]
mov qword [rax+80], rcx
mov rcx, [f3554r]
mov qword [rax+88], rcx
mov rcx, [f3554call_exps]
mov qword [rax+96], rcx
mov rcx, [f3554f7064]
mov qword [rax+104], rcx
mov qword [rax], 13
push rax
pop qword [f3554f0164]
pop rax
push qword [f3554f0164]
push rax
jmp f3164_end
f3554f3164: dq 0
f3164_end:
push qword [assign_return]
pop qword [f3554f3164]
pop rax
push qword [f3554f3164]
push rax
pop rcx
pop rax
jmp rcx
ret
f3554_end:
mov rdi, 104
call malloc
mov qword [rax+8], f3554
mov rcx, [f2554orig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [f2554f5754]
mov qword [rax+24], rcx
mov rcx, [f2554orig_l]
mov qword [rax+32], rcx
mov rcx, [f2554token]
mov qword [rax+40], rcx
mov rcx, [f2554tokenizer]
mov qword [rax+48], rcx
mov rcx, [f2554nl]
mov qword [rax+56], rcx
mov rcx, [f2554nr]
mov qword [rax+64], rcx
mov rcx, [f2554break]
mov qword [rax+72], rcx
mov rcx, [f2554l]
mov qword [rax+80], rcx
mov rcx, [f2554r]
mov qword [rax+88], rcx
mov rcx, [f2554call_exps]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [f2554f6064]
pop rax
push qword [f2554f6064]
push rax
pop rcx
pop rax
jmp rcx
f2554_end:
mov rdi, 80
call malloc
mov qword [rax+8], f2554
mov rcx, [read_assignmentorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_assignmentf5754]
mov qword [rax+24], rcx
mov rcx, [read_assignmentorig_l]
mov qword [rax+32], rcx
mov rcx, [read_assignmentr]
mov qword [rax+40], rcx
mov rcx, [read_assignmenttoken]
mov qword [rax+48], rcx
mov rcx, [read_assignmenttokenizer]
mov qword [rax+56], rcx
mov rcx, [read_assignmentnl]
mov qword [rax+64], rcx
mov rcx, [read_assignmentnr]
mov qword [rax+72], rcx
mov qword [rax], 9
push rax
pop qword [read_assignmentf0064]
push qword [read_assignmentf0064]
jmp f4164_end
read_assignmentf4164: dq 0
f4164_end:
push qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf5754]
push qword [read_assignmentorig_l]
push qword [read_assignmentr]
push qword [read_assignmenttoken]
push qword [read_assignmenttokenizer]
push qword [read_assignmentnl]
push qword [read_assignmentnr]
jmp f5164_end
read_assignmentf5164: dq 0
f5164_end:
push qword [read_assignmenttoken]
pop qword [read_assignmentf5164]
push qword [read_assignmentf5164]
jmp f6164_end
read_assignmentf6164: dq 0
f6164_end:
jmp f7164_end
f7164: db `!`
db 0
f7164_end: push f7164
pop qword [read_assignmentf6164]
push qword [read_assignmentf6164]
call token_matches
push rax
pop qword [read_assignmentf4164]
pop qword [read_assignmentnr]
pop qword [read_assignmentnl]
pop qword [read_assignmenttokenizer]
pop qword [read_assignmenttoken]
pop qword [read_assignmentr]
pop qword [read_assignmentorig_l]
pop qword [read_assignmentf5754]
pop qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf4164]
call if
push rax
pop qword [read_assignmentf1554]
pop qword [read_assignmentnr]
pop qword [read_assignmentnl]
pop qword [read_assignmenttokenizer]
pop qword [read_assignmenttoken]
pop qword [read_assignmentr]
pop qword [read_assignmentorig_l]
pop qword [read_assignmentf5754]
pop qword [read_assignmentorig_tokenizer]
push qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf5754]
push qword [read_assignmentorig_l]
push qword [read_assignmentr]
push qword [read_assignmenttoken]
push qword [read_assignmentnl]
push qword [read_assignmentnr]
push qword [read_assignmentf1554]
jmp f0264_end
read_assignmentf0264: dq 0
f0264_end:
push qword [read_assignmentorig_tokenizer]
pop qword [read_assignmentf0264]
push qword [read_assignmentf0264]
call read_assign_val
push rax
pop qword [read_assignmentassign]
pop qword [read_assignmenttokenizer]
pop qword [read_assignmentf1554]
pop qword [read_assignmentnr]
pop qword [read_assignmentnl]
pop qword [read_assignmenttoken]
pop qword [read_assignmentr]
pop qword [read_assignmentorig_l]
pop qword [read_assignmentf5754]
pop qword [read_assignmentorig_tokenizer]
push qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf5754]
push qword [read_assignmentorig_l]
push qword [read_assignmentr]
push qword [read_assignmenttoken]
push qword [read_assignmentnl]
push qword [read_assignmentnr]
push qword [read_assignmentf1554]
push qword [read_assignmentassign]
push qword [read_assignmenttokenizer]
jmp f1264_end
read_assignmentf1264: dq 0
f1264_end:
jmp f1654_end
f1654orig_tokenizer: dq 0
f1654f5754: dq 0
f1654orig_l: dq 0
f1654r: dq 0
f1654token: dq 0
f1654nl: dq 0
f1654nr: dq 0
f1654f1554: dq 0
f1654assign: dq 0
f1654tokenizer: dq 0
f1654break: dq 0
f1654:
pop qword [f1654orig_tokenizer]
pop qword [f1654f5754]
pop qword [f1654orig_l]
pop qword [f1654r]
pop qword [f1654token]
pop qword [f1654nl]
pop qword [f1654nr]
pop qword [f1654f1554]
pop qword [f1654assign]
pop qword [f1654tokenizer]
pop qword [f1654break]
mov rsp, [f1654f5754]
jmp f2264_end
f1654f2264: dq 0
f2264_end:
push qword [f1654tokenizer]
pop qword [f1654f2264]
pop rax
push qword [f1654f2264]
push rax
jmp f3264_end
f1654f3264: dq 0
f3264_end:
jmp f2654_end
f2654orig_tokenizer: dq 0
f2654f5754: dq 0
f2654orig_l: dq 0
f2654r: dq 0
f2654token: dq 0
f2654nl: dq 0
f2654nr: dq 0
f2654f1554: dq 0
f2654assign: dq 0
f2654tokenizer: dq 0
f2654break: dq 0
f2654f4264: dq 0
f2654:
pop rax
pop qword [f2654orig_tokenizer]
pop qword [f2654f5754]
pop qword [f2654orig_l]
pop qword [f2654r]
pop qword [f2654token]
pop qword [f2654nl]
pop qword [f2654nr]
pop qword [f2654f1554]
pop qword [f2654assign]
pop qword [f2654tokenizer]
pop qword [f2654break]
push rax
mov [f2654f4264], rsp
mov rsp, [f2654f4264]
jmp f5264_end
f2654f5264: dq 0
f5264_end:
push qword [f2654assign]
pop qword [f2654f5264]
pop rax
push qword [f2654f5264]
push rax
jmp f6264_end
f2654f6264: dq 0
f6264_end:
push qword [assign_statement]
pop qword [f2654f6264]
pop rax
push qword [f2654f6264]
push rax
pop rcx
pop rax
jmp rcx
ret
f2654_end:
mov rdi, 104
call malloc
mov qword [rax+8], f2654
mov rcx, [f1654orig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [f1654f5754]
mov qword [rax+24], rcx
mov rcx, [f1654orig_l]
mov qword [rax+32], rcx
mov rcx, [f1654r]
mov qword [rax+40], rcx
mov rcx, [f1654token]
mov qword [rax+48], rcx
mov rcx, [f1654nl]
mov qword [rax+56], rcx
mov rcx, [f1654nr]
mov qword [rax+64], rcx
mov rcx, [f1654f1554]
mov qword [rax+72], rcx
mov rcx, [f1654assign]
mov qword [rax+80], rcx
mov rcx, [f1654tokenizer]
mov qword [rax+88], rcx
mov rcx, [f1654break]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [f1654f3264]
pop rax
push qword [f1654f3264]
push rax
pop rcx
pop rax
jmp rcx
f1654_end:
mov rdi, 96
call malloc
mov qword [rax+8], f1654
mov rcx, [read_assignmentorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_assignmentf5754]
mov qword [rax+24], rcx
mov rcx, [read_assignmentorig_l]
mov qword [rax+32], rcx
mov rcx, [read_assignmentr]
mov qword [rax+40], rcx
mov rcx, [read_assignmenttoken]
mov qword [rax+48], rcx
mov rcx, [read_assignmentnl]
mov qword [rax+56], rcx
mov rcx, [read_assignmentnr]
mov qword [rax+64], rcx
mov rcx, [read_assignmentf1554]
mov qword [rax+72], rcx
mov rcx, [read_assignmentassign]
mov qword [rax+80], rcx
mov rcx, [read_assignmenttokenizer]
mov qword [rax+88], rcx
mov qword [rax], 11
push rax
pop qword [read_assignmentf1264]
push qword [read_assignmentf1264]
jmp f7264_end
read_assignmentf7264: dq 0
f7264_end:
push qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf5754]
push qword [read_assignmentorig_l]
push qword [read_assignmentr]
push qword [read_assignmenttoken]
push qword [read_assignmentnl]
push qword [read_assignmentnr]
push qword [read_assignmentf1554]
push qword [read_assignmentassign]
push qword [read_assignmenttokenizer]
jmp f0364_end
read_assignmentf0364: dq 0
f0364_end:
push 0
pop qword [read_assignmentf0364]
push qword [read_assignmentf0364]
jmp f1364_end
read_assignmentf1364: dq 0
f1364_end:
push qword [read_assignmentassign]
pop qword [read_assignmentf1364]
push qword [read_assignmentf1364]
call ne
push rax
pop qword [read_assignmentf7264]
pop qword [read_assignmenttokenizer]
pop qword [read_assignmentassign]
pop qword [read_assignmentf1554]
pop qword [read_assignmentnr]
pop qword [read_assignmentnl]
pop qword [read_assignmenttoken]
pop qword [read_assignmentr]
pop qword [read_assignmentorig_l]
pop qword [read_assignmentf5754]
pop qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf7264]
call if
push rax
pop qword [read_assignmentf0654]
pop qword [read_assignmenttokenizer]
pop qword [read_assignmentassign]
pop qword [read_assignmentf1554]
pop qword [read_assignmentnr]
pop qword [read_assignmentnl]
pop qword [read_assignmenttoken]
pop qword [read_assignmentr]
pop qword [read_assignmentorig_l]
pop qword [read_assignmentf5754]
pop qword [read_assignmentorig_tokenizer]
push qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf5754]
push qword [read_assignmentorig_l]
push qword [read_assignmenttoken]
push qword [read_assignmentnl]
push qword [read_assignmentnr]
push qword [read_assignmentf1554]
push qword [read_assignmentassign]
push qword [read_assignmenttokenizer]
push qword [read_assignmentf0654]
jmp f2364_end
read_assignmentf2364: dq 0
f2364_end:
push qword [read_assignmentr]
pop qword [read_assignmentf2364]
push qword [read_assignmentf2364]
jmp f3364_end
read_assignmentf3364: dq 0
f3364_end:
push qword [read_assignmentorig_l]
pop qword [read_assignmentf3364]
push qword [read_assignmentf3364]
call read_function_application
push rax
pop qword [read_assignmentl]
pop qword [read_assignmentr]
pop qword [read_assignmentcexp]
pop qword [read_assignmentf0654]
pop qword [read_assignmenttokenizer]
pop qword [read_assignmentassign]
pop qword [read_assignmentf1554]
pop qword [read_assignmentnr]
pop qword [read_assignmentnl]
pop qword [read_assignmenttoken]
pop qword [read_assignmentorig_l]
pop qword [read_assignmentf5754]
pop qword [read_assignmentorig_tokenizer]
push qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf5754]
push qword [read_assignmentorig_l]
push qword [read_assignmenttoken]
push qword [read_assignmentnl]
push qword [read_assignmentnr]
push qword [read_assignmentf1554]
push qword [read_assignmentassign]
push qword [read_assignmenttokenizer]
push qword [read_assignmentf0654]
push qword [read_assignmentl]
push qword [read_assignmentr]
push qword [read_assignmentcexp]
jmp f4364_end
read_assignmentf4364: dq 0
f4364_end:
jmp f6654_end
f6654orig_tokenizer: dq 0
f6654f5754: dq 0
f6654orig_l: dq 0
f6654token: dq 0
f6654nl: dq 0
f6654nr: dq 0
f6654f1554: dq 0
f6654assign: dq 0
f6654tokenizer: dq 0
f6654f0654: dq 0
f6654l: dq 0
f6654r: dq 0
f6654cexp: dq 0
f6654break: dq 0
f6654:
pop qword [f6654orig_tokenizer]
pop qword [f6654f5754]
pop qword [f6654orig_l]
pop qword [f6654token]
pop qword [f6654nl]
pop qword [f6654nr]
pop qword [f6654f1554]
pop qword [f6654assign]
pop qword [f6654tokenizer]
pop qword [f6654f0654]
pop qword [f6654l]
pop qword [f6654r]
pop qword [f6654cexp]
pop qword [f6654break]
mov rsp, [f6654f5754]
jmp f5364_end
f6654f5364: dq 0
f5364_end:
push qword [f6654orig_tokenizer]
pop qword [f6654f5364]
pop rax
push qword [f6654f5364]
push rax
jmp f6364_end
f6654f6364: dq 0
f6364_end:
push 0
pop qword [f6654f6364]
pop rax
push qword [f6654f6364]
push rax
pop rcx
pop rax
jmp rcx
f6654_end:
mov rdi, 120
call malloc
mov qword [rax+8], f6654
mov rcx, [read_assignmentorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_assignmentf5754]
mov qword [rax+24], rcx
mov rcx, [read_assignmentorig_l]
mov qword [rax+32], rcx
mov rcx, [read_assignmenttoken]
mov qword [rax+40], rcx
mov rcx, [read_assignmentnl]
mov qword [rax+48], rcx
mov rcx, [read_assignmentnr]
mov qword [rax+56], rcx
mov rcx, [read_assignmentf1554]
mov qword [rax+64], rcx
mov rcx, [read_assignmentassign]
mov qword [rax+72], rcx
mov rcx, [read_assignmenttokenizer]
mov qword [rax+80], rcx
mov rcx, [read_assignmentf0654]
mov qword [rax+88], rcx
mov rcx, [read_assignmentl]
mov qword [rax+96], rcx
mov rcx, [read_assignmentr]
mov qword [rax+104], rcx
mov rcx, [read_assignmentcexp]
mov qword [rax+112], rcx
mov qword [rax], 14
push rax
pop qword [read_assignmentf4364]
push qword [read_assignmentf4364]
jmp f7364_end
read_assignmentf7364: dq 0
f7364_end:
push qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf5754]
push qword [read_assignmentorig_l]
push qword [read_assignmenttoken]
push qword [read_assignmentnl]
push qword [read_assignmentnr]
push qword [read_assignmentf1554]
push qword [read_assignmentassign]
push qword [read_assignmenttokenizer]
push qword [read_assignmentf0654]
push qword [read_assignmentl]
push qword [read_assignmentr]
push qword [read_assignmentcexp]
jmp f0464_end
read_assignmentf0464: dq 0
f0464_end:
push 0
pop qword [read_assignmentf0464]
push qword [read_assignmentf0464]
jmp f1464_end
read_assignmentf1464: dq 0
f1464_end:
push qword [read_assignmentcexp]
pop qword [read_assignmentf1464]
push qword [read_assignmentf1464]
call eq
push rax
pop qword [read_assignmentf7364]
pop qword [read_assignmentcexp]
pop qword [read_assignmentr]
pop qword [read_assignmentl]
pop qword [read_assignmentf0654]
pop qword [read_assignmenttokenizer]
pop qword [read_assignmentassign]
pop qword [read_assignmentf1554]
pop qword [read_assignmentnr]
pop qword [read_assignmentnl]
pop qword [read_assignmenttoken]
pop qword [read_assignmentorig_l]
pop qword [read_assignmentf5754]
pop qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf7364]
call if
push rax
pop qword [read_assignmentf5654]
pop qword [read_assignmentcexp]
pop qword [read_assignmentr]
pop qword [read_assignmentl]
pop qword [read_assignmentf0654]
pop qword [read_assignmenttokenizer]
pop qword [read_assignmentassign]
pop qword [read_assignmentf1554]
pop qword [read_assignmentnr]
pop qword [read_assignmentnl]
pop qword [read_assignmenttoken]
pop qword [read_assignmentorig_l]
pop qword [read_assignmentf5754]
pop qword [read_assignmentorig_tokenizer]
mov rsp, [read_assignmentf5754]
jmp f2464_end
read_assignmentf2464: dq 0
f2464_end:
push qword [read_assignmentorig_tokenizer]
push qword [read_assignmentf5754]
push qword [read_assignmentorig_l]
push qword [read_assignmenttoken]
push qword [read_assignmentnl]
push qword [read_assignmentnr]
push qword [read_assignmentf1554]
push qword [read_assignmentassign]
push qword [read_assignmenttokenizer]
push qword [read_assignmentf0654]
push qword [read_assignmentl]
push qword [read_assignmentr]
push qword [read_assignmentcexp]
push qword [read_assignmentf5654]
jmp f3464_end
read_assignmentf3464: dq 0
f3464_end:
push qword [read_assignmentr]
pop qword [read_assignmentf3464]
push qword [read_assignmentf3464]
jmp f4464_end
read_assignmentf4464: dq 0
f4464_end:
push qword [read_assignmentl]
pop qword [read_assignmentf4464]
push qword [read_assignmentf4464]
call make_tokenizer
push rax
pop qword [read_assignmentf2464]
pop qword [read_assignmentf5654]
pop qword [read_assignmentcexp]
pop qword [read_assignmentr]
pop qword [read_assignmentl]
pop qword [read_assignmentf0654]
pop qword [read_assignmenttokenizer]
pop qword [read_assignmentassign]
pop qword [read_assignmentf1554]
pop qword [read_assignmentnr]
pop qword [read_assignmentnl]
pop qword [read_assignmenttoken]
pop qword [read_assignmentorig_l]
pop qword [read_assignmentf5754]
pop qword [read_assignmentorig_tokenizer]
pop rax
push qword [read_assignmentf2464]
push rax
jmp f5464_end
read_assignmentf5464: dq 0
f5464_end:
jmp f0754_end
f0754orig_tokenizer: dq 0
f0754f5754: dq 0
f0754orig_l: dq 0
f0754token: dq 0
f0754nl: dq 0
f0754nr: dq 0
f0754f1554: dq 0
f0754assign: dq 0
f0754tokenizer: dq 0
f0754f0654: dq 0
f0754l: dq 0
f0754r: dq 0
f0754cexp: dq 0
f0754f5654: dq 0
f0754f6464: dq 0
f0754:
pop rax
pop qword [f0754orig_tokenizer]
pop qword [f0754f5754]
pop qword [f0754orig_l]
pop qword [f0754token]
pop qword [f0754nl]
pop qword [f0754nr]
pop qword [f0754f1554]
pop qword [f0754assign]
pop qword [f0754tokenizer]
pop qword [f0754f0654]
pop qword [f0754l]
pop qword [f0754r]
pop qword [f0754cexp]
pop qword [f0754f5654]
push rax
mov [f0754f6464], rsp
mov rsp, [f0754f6464]
jmp f7464_end
f0754f7464: dq 0
f7464_end:
jmp f1754_end
f1754orig_tokenizer: dq 0
f1754f5754: dq 0
f1754orig_l: dq 0
f1754token: dq 0
f1754nl: dq 0
f1754nr: dq 0
f1754f1554: dq 0
f1754assign: dq 0
f1754tokenizer: dq 0
f1754f0654: dq 0
f1754l: dq 0
f1754r: dq 0
f1754cexp: dq 0
f1754f5654: dq 0
f1754f6464: dq 0
f1754f0564: dq 0
f1754:
pop rax
pop qword [f1754orig_tokenizer]
pop qword [f1754f5754]
pop qword [f1754orig_l]
pop qword [f1754token]
pop qword [f1754nl]
pop qword [f1754nr]
pop qword [f1754f1554]
pop qword [f1754assign]
pop qword [f1754tokenizer]
pop qword [f1754f0654]
pop qword [f1754l]
pop qword [f1754r]
pop qword [f1754cexp]
pop qword [f1754f5654]
pop qword [f1754f6464]
push rax
mov [f1754f0564], rsp
mov rsp, [f1754f0564]
jmp f1564_end
f1754f1564: dq 0
f1564_end:
push qword [f1754cexp]
pop qword [f1754f1564]
pop rax
push qword [f1754f1564]
push rax
pop rcx
pop rax
jmp rcx
ret
f1754_end:
mov rdi, 136
call malloc
mov qword [rax+8], f1754
mov rcx, [f0754orig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [f0754f5754]
mov qword [rax+24], rcx
mov rcx, [f0754orig_l]
mov qword [rax+32], rcx
mov rcx, [f0754token]
mov qword [rax+40], rcx
mov rcx, [f0754nl]
mov qword [rax+48], rcx
mov rcx, [f0754nr]
mov qword [rax+56], rcx
mov rcx, [f0754f1554]
mov qword [rax+64], rcx
mov rcx, [f0754assign]
mov qword [rax+72], rcx
mov rcx, [f0754tokenizer]
mov qword [rax+80], rcx
mov rcx, [f0754f0654]
mov qword [rax+88], rcx
mov rcx, [f0754l]
mov qword [rax+96], rcx
mov rcx, [f0754r]
mov qword [rax+104], rcx
mov rcx, [f0754cexp]
mov qword [rax+112], rcx
mov rcx, [f0754f5654]
mov qword [rax+120], rcx
mov rcx, [f0754f6464]
mov qword [rax+128], rcx
mov qword [rax], 16
push rax
pop qword [f0754f7464]
pop rax
push qword [f0754f7464]
push rax
jmp f2564_end
f0754f2564: dq 0
f2564_end:
push qword [assign_application]
pop qword [f0754f2564]
pop rax
push qword [f0754f2564]
push rax
pop rcx
pop rax
jmp rcx
ret
f0754_end:
mov rdi, 128
call malloc
mov qword [rax+8], f0754
mov rcx, [read_assignmentorig_tokenizer]
mov qword [rax+16], rcx
mov rcx, [read_assignmentf5754]
mov qword [rax+24], rcx
mov rcx, [read_assignmentorig_l]
mov qword [rax+32], rcx
mov rcx, [read_assignmenttoken]
mov qword [rax+40], rcx
mov rcx, [read_assignmentnl]
mov qword [rax+48], rcx
mov rcx, [read_assignmentnr]
mov qword [rax+56], rcx
mov rcx, [read_assignmentf1554]
mov qword [rax+64], rcx
mov rcx, [read_assignmentassign]
mov qword [rax+72], rcx
mov rcx, [read_assignmenttokenizer]
mov qword [rax+80], rcx
mov rcx, [read_assignmentf0654]
mov qword [rax+88], rcx
mov rcx, [read_assignmentl]
mov qword [rax+96], rcx
mov rcx, [read_assignmentr]
mov qword [rax+104], rcx
mov rcx, [read_assignmentcexp]
mov qword [rax+112], rcx
mov rcx, [read_assignmentf5654]
mov qword [rax+120], rcx
mov qword [rax], 15
push rax
pop qword [read_assignmentf5464]
pop rax
push qword [read_assignmentf5464]
push rax
pop rcx
pop rax
jmp rcx
ret
read_assignment_end:
jmp print_assignment_end
print_assignmentfl: dq 0
print_assignmentfr: dq 0
print_assignmentcontext: dq 0
print_assignmentis_returning: dq 0
print_assignmentgl: dq 0
print_assignmentgr: dq 0
print_assignmentorig_assign: dq 0
print_assignmentassign_type: dq 0
print_assignmentassign: dq 0
print_assignmentf4564: dq 0
print_assignmentf7664: dq 0
print_assignmentf3764: dq 0
print_assignmentf0074: dq 0
print_assignment:
pop rax
pop qword [print_assignmentfl]
pop qword [print_assignmentfr]
pop qword [print_assignmentcontext]
pop qword [print_assignmentis_returning]
pop qword [print_assignmentgl]
pop qword [print_assignmentgr]
pop qword [print_assignmentorig_assign]
push rax
mov [print_assignmentf0074], rsp
push qword [print_assignmentfl]
push qword [print_assignmentfr]
push qword [print_assignmentcontext]
push qword [print_assignmentis_returning]
push qword [print_assignmentgl]
push qword [print_assignmentgr]
push qword [print_assignmentorig_assign]
push qword [print_assignmentf0074]
push qword [print_assignmentorig_assign]
call runtime_call_ret
push rax
pop qword [print_assignmentassign_type]
pop qword [print_assignmentassign]
pop qword [print_assignmentf0074]
pop qword [print_assignmentorig_assign]
pop qword [print_assignmentgr]
pop qword [print_assignmentgl]
pop qword [print_assignmentis_returning]
pop qword [print_assignmentcontext]
pop qword [print_assignmentfr]
pop qword [print_assignmentfl]
push qword [print_assignmentfl]
push qword [print_assignmentfr]
push qword [print_assignmentcontext]
push qword [print_assignmentis_returning]
push qword [print_assignmentgl]
push qword [print_assignmentgr]
push qword [print_assignmentorig_assign]
push qword [print_assignmentf0074]
push qword [print_assignmentassign_type]
push qword [print_assignmentassign]
jmp f1074_end
print_assignmentf1074: dq 0
f1074_end:
jmp f5564_end
f5564fl: dq 0
f5564fr: dq 0
f5564context: dq 0
f5564is_returning: dq 0
f5564gl: dq 0
f5564gr: dq 0
f5564orig_assign: dq 0
f5564f0074: dq 0
f5564assign_type: dq 0
f5564assign: dq 0
f5564break: dq 0
f5564call_exps: dq 0
f5564f6564: dq 0
f5564f7564: dq 0
f5564f5664: dq 0
f5564:
pop qword [f5564fl]
pop qword [f5564fr]
pop qword [f5564context]
pop qword [f5564is_returning]
pop qword [f5564gl]
pop qword [f5564gr]
pop qword [f5564orig_assign]
pop qword [f5564f0074]
pop qword [f5564assign_type]
pop qword [f5564assign]
pop qword [f5564break]
push qword [f5564fl]
push qword [f5564fr]
push qword [f5564context]
push qword [f5564is_returning]
push qword [f5564gl]
push qword [f5564gr]
push qword [f5564orig_assign]
push qword [f5564f0074]
push qword [f5564assign_type]
push qword [f5564assign]
push qword [f5564break]
push qword [f5564assign]
call runtime_call_ret
push rax
pop qword [f5564call_exps]
pop qword [f5564break]
pop qword [f5564assign]
pop qword [f5564assign_type]
pop qword [f5564f0074]
pop qword [f5564orig_assign]
pop qword [f5564gr]
pop qword [f5564gl]
pop qword [f5564is_returning]
pop qword [f5564context]
pop qword [f5564fr]
pop qword [f5564fl]
push qword [f5564fl]
push qword [f5564fr]
push qword [f5564context]
push qword [f5564is_returning]
push qword [f5564gl]
push qword [f5564gr]
push qword [f5564orig_assign]
push qword [f5564f0074]
push qword [f5564assign_type]
push qword [f5564assign]
push qword [f5564break]
push qword [f5564call_exps]
jmp f2074_end
f5564f2074: dq 0
f2074_end:
push qword [f5564gr]
pop qword [f5564f2074]
push qword [f5564f2074]
jmp f3074_end
f5564f3074: dq 0
f3074_end:
push qword [f5564gl]
pop qword [f5564f3074]
push qword [f5564f3074]
jmp f4074_end
f5564f4074: dq 0
f4074_end:
push qword [f5564fr]
pop qword [f5564f4074]
push qword [f5564f4074]
jmp f5074_end
f5564f5074: dq 0
f5074_end:
push qword [f5564fl]
pop qword [f5564f5074]
push qword [f5564f5074]
jmp f6074_end
f5564f6074: dq 0
f6074_end:
jmp f7074_end
f7074: db `mov rsp, [{}{}]\n`
db 0
f7074_end: push f7074
pop qword [f5564f6074]
push qword [f5564f6074]
call printf
push rax
pop qword [f5564f6564]
pop qword [f5564call_exps]
pop qword [f5564break]
pop qword [f5564assign]
pop qword [f5564assign_type]
pop qword [f5564f0074]
pop qword [f5564orig_assign]
pop qword [f5564gr]
pop qword [f5564gl]
pop qword [f5564is_returning]
pop qword [f5564context]
pop qword [f5564fr]
pop qword [f5564fl]
push qword [f5564fl]
push qword [f5564fr]
push qword [f5564context]
push qword [f5564is_returning]
push qword [f5564gl]
push qword [f5564gr]
push qword [f5564orig_assign]
push qword [f5564f0074]
push qword [f5564assign_type]
push qword [f5564assign]
push qword [f5564break]
push qword [f5564call_exps]
push qword [f5564f6564]
jmp f0174_end
f5564f0174: dq 0
f0174_end:
jmp f0664_end
f0664fl: dq 0
f0664fr: dq 0
f0664context: dq 0
f0664is_returning: dq 0
f0664gl: dq 0
f0664gr: dq 0
f0664orig_assign: dq 0
f0664f0074: dq 0
f0664assign_type: dq 0
f0664assign: dq 0
f0664break: dq 0
f0664call_exps: dq 0
f0664f6564: dq 0
f0664call_exp: dq 0
f0664r: dq 0
f0664il: dq 0
f0664ir: dq 0
f0664f1664: dq 0
f0664f2664: dq 0
f0664f3664: dq 0
f0664f1174: dq 0
f0664:
pop rax
pop qword [f0664fl]
pop qword [f0664fr]
pop qword [f0664context]
pop qword [f0664is_returning]
pop qword [f0664gl]
pop qword [f0664gr]
pop qword [f0664orig_assign]
pop qword [f0664f0074]
pop qword [f0664assign_type]
pop qword [f0664assign]
pop qword [f0664break]
pop qword [f0664call_exps]
pop qword [f0664f6564]
pop qword [f0664call_exp]
pop qword [f0664r]
push rax
mov [f0664f1174], rsp
push qword [f0664fl]
push qword [f0664fr]
push qword [f0664context]
push qword [f0664is_returning]
push qword [f0664gl]
push qword [f0664gr]
push qword [f0664orig_assign]
push qword [f0664f0074]
push qword [f0664assign_type]
push qword [f0664assign]
push qword [f0664break]
push qword [f0664call_exps]
push qword [f0664f6564]
push qword [f0664call_exp]
push qword [f0664r]
push qword [f0664f1174]
call gen_label
push rax
pop qword [f0664il]
pop qword [f0664ir]
pop qword [f0664f1174]
pop qword [f0664r]
pop qword [f0664call_exp]
pop qword [f0664f6564]
pop qword [f0664call_exps]
pop qword [f0664break]
pop qword [f0664assign]
pop qword [f0664assign_type]
pop qword [f0664f0074]
pop qword [f0664orig_assign]
pop qword [f0664gr]
pop qword [f0664gl]
pop qword [f0664is_returning]
pop qword [f0664context]
pop qword [f0664fr]
pop qword [f0664fl]
push qword [f0664fl]
push qword [f0664fr]
push qword [f0664context]
push qword [f0664is_returning]
push qword [f0664gl]
push qword [f0664gr]
push qword [f0664orig_assign]
push qword [f0664f0074]
push qword [f0664assign_type]
push qword [f0664assign]
push qword [f0664break]
push qword [f0664call_exps]
push qword [f0664f6564]
push qword [f0664call_exp]
push qword [f0664r]
push qword [f0664f1174]
push qword [f0664il]
push qword [f0664ir]
jmp f2174_end
f0664f2174: dq 0
f2174_end:
push qword [f0664ir]
pop qword [f0664f2174]
push qword [f0664f2174]
jmp f3174_end
f0664f3174: dq 0
f3174_end:
push qword [f0664il]
pop qword [f0664f3174]
push qword [f0664f3174]
jmp f4174_end
f0664f4174: dq 0
f4174_end:
push qword [f0664ir]
pop qword [f0664f4174]
push qword [f0664f4174]
jmp f5174_end
f0664f5174: dq 0
f5174_end:
push qword [f0664il]
pop qword [f0664f5174]
push qword [f0664f5174]
jmp f6174_end
f0664f6174: dq 0
f6174_end:
push qword [f0664fr]
pop qword [f0664f6174]
push qword [f0664f6174]
jmp f7174_end
f0664f7174: dq 0
f7174_end:
push qword [f0664fl]
pop qword [f0664f7174]
push qword [f0664f7174]
jmp f0274_end
f0664f0274: dq 0
f0274_end:
push qword [f0664ir]
pop qword [f0664f0274]
push qword [f0664f0274]
jmp f1274_end
f0664f1274: dq 0
f1274_end:
push qword [f0664il]
pop qword [f0664f1274]
push qword [f0664f1274]
jmp f2274_end
f0664f2274: dq 0
f2274_end:
jmp f3274_end
f3274: db `jmp {}_end\n{}{}: dq 0\n{}_end:\n`
db 0
f3274_end: push f3274
pop qword [f0664f2274]
push qword [f0664f2274]
call printf
push rax
pop qword [f0664f1664]
pop qword [f0664ir]
pop qword [f0664il]
pop qword [f0664f1174]
pop qword [f0664r]
pop qword [f0664call_exp]
pop qword [f0664f6564]
pop qword [f0664call_exps]
pop qword [f0664break]
pop qword [f0664assign]
pop qword [f0664assign_type]
pop qword [f0664f0074]
pop qword [f0664orig_assign]
pop qword [f0664gr]
pop qword [f0664gl]
pop qword [f0664is_returning]
pop qword [f0664context]
pop qword [f0664fr]
pop qword [f0664fl]
push qword [f0664fl]
push qword [f0664fr]
push qword [f0664context]
push qword [f0664is_returning]
push qword [f0664gl]
push qword [f0664gr]
push qword [f0664orig_assign]
push qword [f0664f0074]
push qword [f0664assign_type]
push qword [f0664assign]
push qword [f0664break]
push qword [f0664call_exps]
push qword [f0664f6564]
push qword [f0664call_exp]
push qword [f0664r]
push qword [f0664f1174]
push qword [f0664il]
push qword [f0664ir]
push qword [f0664f1664]
jmp f4274_end
f0664f4274: dq 0
f4274_end:
push qword [f0664call_exp]
pop qword [f0664f4274]
push qword [f0664f4274]
jmp f5274_end
f0664f5274: dq 0
f5274_end:
push qword [f0664gr]
pop qword [f0664f5274]
push qword [f0664f5274]
jmp f6274_end
f0664f6274: dq 0
f6274_end:
push qword [f0664gl]
pop qword [f0664f6274]
push qword [f0664f6274]
jmp f7274_end
f0664f7274: dq 0
f7274_end:
push qword [f0664fl]
push qword [f0664fr]
push qword [f0664context]
push qword [f0664is_returning]
push qword [f0664gl]
push qword [f0664gr]
push qword [f0664orig_assign]
push qword [f0664f0074]
push qword [f0664assign_type]
push qword [f0664assign]
push qword [f0664break]
push qword [f0664call_exps]
push qword [f0664f6564]
push qword [f0664call_exp]
push qword [f0664r]
push qword [f0664f1174]
push qword [f0664il]
push qword [f0664ir]
push qword [f0664f1664]
jmp f0374_end
f0664f0374: dq 0
f0374_end:
push qword [f0664ir]
pop qword [f0664f0374]
push qword [f0664f0374]
jmp f1374_end
f0664f1374: dq 0
f1374_end:
push qword [f0664il]
pop qword [f0664f1374]
push qword [f0664f1374]
call make_leaf
push rax
pop qword [f0664f7274]
pop qword [f0664f1664]
pop qword [f0664ir]
pop qword [f0664il]
pop qword [f0664f1174]
pop qword [f0664r]
pop qword [f0664call_exp]
pop qword [f0664f6564]
pop qword [f0664call_exps]
pop qword [f0664break]
pop qword [f0664assign]
pop qword [f0664assign_type]
pop qword [f0664f0074]
pop qword [f0664orig_assign]
pop qword [f0664gr]
pop qword [f0664gl]
pop qword [f0664is_returning]
pop qword [f0664context]
pop qword [f0664fr]
pop qword [f0664fl]
push qword [f0664f7274]
jmp f2374_end
f0664f2374: dq 0
f2374_end:
push qword [f0664context]
pop qword [f0664f2374]
push qword [f0664f2374]
jmp f3374_end
f0664f3374: dq 0
f3374_end:
push qword [f0664fr]
pop qword [f0664f3374]
push qword [f0664f3374]
jmp f4374_end
f0664f4374: dq 0
f4374_end:
push qword [f0664fl]
pop qword [f0664f4374]
push qword [f0664f4374]
call print_call_expression
push rax
pop qword [f0664f2664]
pop qword [f0664f1664]
pop qword [f0664ir]
pop qword [f0664il]
pop qword [f0664f1174]
pop qword [f0664r]
pop qword [f0664call_exp]
pop qword [f0664f6564]
pop qword [f0664call_exps]
pop qword [f0664break]
pop qword [f0664assign]
pop qword [f0664assign_type]
pop qword [f0664f0074]
pop qword [f0664orig_assign]
pop qword [f0664gr]
pop qword [f0664gl]
pop qword [f0664is_returning]
pop qword [f0664context]
pop qword [f0664fr]
pop qword [f0664fl]
push qword [f0664fl]
push qword [f0664fr]
push qword [f0664context]
push qword [f0664is_returning]
push qword [f0664gl]
push qword [f0664gr]
push qword [f0664orig_assign]
push qword [f0664f0074]
push qword [f0664assign_type]
push qword [f0664assign]
push qword [f0664break]
push qword [f0664call_exps]
push qword [f0664f6564]
push qword [f0664call_exp]
push qword [f0664r]
push qword [f0664f1174]
push qword [f0664il]
push qword [f0664ir]
push qword [f0664f1664]
push qword [f0664f2664]
jmp f5374_end
f0664f5374: dq 0
f5374_end:
push qword [f0664ir]
pop qword [f0664f5374]
push qword [f0664f5374]
jmp f6374_end
f0664f6374: dq 0
f6374_end:
push qword [f0664il]
pop qword [f0664f6374]
push qword [f0664f6374]
jmp f7374_end
f0664f7374: dq 0
f7374_end:
push qword [f0664fr]
pop qword [f0664f7374]
push qword [f0664f7374]
jmp f0474_end
f0664f0474: dq 0
f0474_end:
push qword [f0664fl]
pop qword [f0664f0474]
push qword [f0664f0474]
jmp f1474_end
f0664f1474: dq 0
f1474_end:
jmp f2474_end
f2474: db `pop rax\npush qword [{}{}]\npush rax\n`
db 0
f2474_end: push f2474
pop qword [f0664f1474]
push qword [f0664f1474]
call printf
push rax
pop qword [f0664f3664]
pop qword [f0664f2664]
pop qword [f0664f1664]
pop qword [f0664ir]
pop qword [f0664il]
pop qword [f0664f1174]
pop qword [f0664r]
pop qword [f0664call_exp]
pop qword [f0664f6564]
pop qword [f0664call_exps]
pop qword [f0664break]
pop qword [f0664assign]
pop qword [f0664assign_type]
pop qword [f0664f0074]
pop qword [f0664orig_assign]
pop qword [f0664gr]
pop qword [f0664gl]
pop qword [f0664is_returning]
pop qword [f0664context]
pop qword [f0664fr]
pop qword [f0664fl]
ret
f0664_end:
mov rdi, 120
call malloc
mov qword [rax+8], f0664
mov rcx, [f5564fl]
mov qword [rax+16], rcx
mov rcx, [f5564fr]
mov qword [rax+24], rcx
mov rcx, [f5564context]
mov qword [rax+32], rcx
mov rcx, [f5564is_returning]
mov qword [rax+40], rcx
mov rcx, [f5564gl]
mov qword [rax+48], rcx
mov rcx, [f5564gr]
mov qword [rax+56], rcx
mov rcx, [f5564orig_assign]
mov qword [rax+64], rcx
mov rcx, [f5564f0074]
mov qword [rax+72], rcx
mov rcx, [f5564assign_type]
mov qword [rax+80], rcx
mov rcx, [f5564assign]
mov qword [rax+88], rcx
mov rcx, [f5564break]
mov qword [rax+96], rcx
mov rcx, [f5564call_exps]
mov qword [rax+104], rcx
mov rcx, [f5564f6564]
mov qword [rax+112], rcx
mov qword [rax], 14
push rax
pop qword [f5564f0174]
push qword [f5564f0174]
jmp f3474_end
f5564f3474: dq 0
f3474_end:
push qword [f5564fl]
push qword [f5564fr]
push qword [f5564context]
push qword [f5564is_returning]
push qword [f5564gl]
push qword [f5564gr]
push qword [f5564orig_assign]
push qword [f5564f0074]
push qword [f5564assign_type]
push qword [f5564assign]
push qword [f5564break]
push qword [f5564call_exps]
push qword [f5564f6564]
jmp f4474_end
f5564f4474: dq 0
f4474_end:
push qword [f5564call_exps]
pop qword [f5564f4474]
push qword [f5564f4474]
call reverse_tree
push rax
pop qword [f5564f3474]
pop qword [f5564f6564]
pop qword [f5564call_exps]
pop qword [f5564break]
pop qword [f5564assign]
pop qword [f5564assign_type]
pop qword [f5564f0074]
pop qword [f5564orig_assign]
pop qword [f5564gr]
pop qword [f5564gl]
pop qword [f5564is_returning]
pop qword [f5564context]
pop qword [f5564fr]
pop qword [f5564fl]
push qword [f5564f3474]
call map_tree
push rax
pop qword [f5564f7564]
pop qword [f5564f6564]
pop qword [f5564call_exps]
pop qword [f5564break]
pop qword [f5564assign]
pop qword [f5564assign_type]
pop qword [f5564f0074]
pop qword [f5564orig_assign]
pop qword [f5564gr]
pop qword [f5564gl]
pop qword [f5564is_returning]
pop qword [f5564context]
pop qword [f5564fr]
pop qword [f5564fl]
push qword [f5564fl]
push qword [f5564fr]
push qword [f5564context]
push qword [f5564is_returning]
push qword [f5564gl]
push qword [f5564gr]
push qword [f5564orig_assign]
push qword [f5564f0074]
push qword [f5564assign_type]
push qword [f5564assign]
push qword [f5564break]
push qword [f5564call_exps]
push qword [f5564f6564]
push qword [f5564f7564]
jmp f5474_end
f5564f5474: dq 0
f5474_end:
jmp f6474_end
f6474: db `pop rcx\npop rax\njmp rcx\n`
db 0
f6474_end: push f6474
pop qword [f5564f5474]
push qword [f5564f5474]
call printf
push rax
pop qword [f5564f5664]
pop qword [f5564f7564]
pop qword [f5564f6564]
pop qword [f5564call_exps]
pop qword [f5564break]
pop qword [f5564assign]
pop qword [f5564assign_type]
pop qword [f5564f0074]
pop qword [f5564orig_assign]
pop qword [f5564gr]
pop qword [f5564gl]
pop qword [f5564is_returning]
pop qword [f5564context]
pop qword [f5564fr]
pop qword [f5564fl]
mov rsp, [f5564f0074]
jmp f7474_end
f5564f7474: dq 0
f7474_end:
push qword [f5564orig_assign]
pop qword [f5564f7474]
pop rax
push qword [f5564f7474]
push rax
pop rcx
pop rax
jmp rcx
f5564_end:
mov rdi, 96
call malloc
mov qword [rax+8], f5564
mov rcx, [print_assignmentfl]
mov qword [rax+16], rcx
mov rcx, [print_assignmentfr]
mov qword [rax+24], rcx
mov rcx, [print_assignmentcontext]
mov qword [rax+32], rcx
mov rcx, [print_assignmentis_returning]
mov qword [rax+40], rcx
mov rcx, [print_assignmentgl]
mov qword [rax+48], rcx
mov rcx, [print_assignmentgr]
mov qword [rax+56], rcx
mov rcx, [print_assignmentorig_assign]
mov qword [rax+64], rcx
mov rcx, [print_assignmentf0074]
mov qword [rax+72], rcx
mov rcx, [print_assignmentassign_type]
mov qword [rax+80], rcx
mov rcx, [print_assignmentassign]
mov qword [rax+88], rcx
mov qword [rax], 11
push rax
pop qword [print_assignmentf1074]
push qword [print_assignmentf1074]
jmp f0574_end
print_assignmentf0574: dq 0
f0574_end:
push qword [print_assignmentfl]
push qword [print_assignmentfr]
push qword [print_assignmentcontext]
push qword [print_assignmentis_returning]
push qword [print_assignmentgl]
push qword [print_assignmentgr]
push qword [print_assignmentorig_assign]
push qword [print_assignmentf0074]
push qword [print_assignmentassign_type]
push qword [print_assignmentassign]
jmp f1574_end
print_assignmentf1574: dq 0
f1574_end:
push qword [assign_return]
pop qword [print_assignmentf1574]
push qword [print_assignmentf1574]
jmp f2574_end
print_assignmentf2574: dq 0
f2574_end:
push qword [print_assignmentassign_type]
pop qword [print_assignmentf2574]
push qword [print_assignmentf2574]
call eq
push rax
pop qword [print_assignmentf0574]
pop qword [print_assignmentassign]
pop qword [print_assignmentassign_type]
pop qword [print_assignmentf0074]
pop qword [print_assignmentorig_assign]
pop qword [print_assignmentgr]
pop qword [print_assignmentgl]
pop qword [print_assignmentis_returning]
pop qword [print_assignmentcontext]
pop qword [print_assignmentfr]
pop qword [print_assignmentfl]
push qword [print_assignmentf0574]
call if
push rax
pop qword [print_assignmentf4564]
pop qword [print_assignmentassign]
pop qword [print_assignmentassign_type]
pop qword [print_assignmentf0074]
pop qword [print_assignmentorig_assign]
pop qword [print_assignmentgr]
pop qword [print_assignmentgl]
pop qword [print_assignmentis_returning]
pop qword [print_assignmentcontext]
pop qword [print_assignmentfr]
pop qword [print_assignmentfl]
push qword [print_assignmentfl]
push qword [print_assignmentfr]
push qword [print_assignmentcontext]
push qword [print_assignmentis_returning]
push qword [print_assignmentgl]
push qword [print_assignmentgr]
push qword [print_assignmentorig_assign]
push qword [print_assignmentf0074]
push qword [print_assignmentassign_type]
push qword [print_assignmentassign]
push qword [print_assignmentf4564]
jmp f3574_end
print_assignmentf3574: dq 0
f3574_end:
jmp f0764_end
f0764fl: dq 0
f0764fr: dq 0
f0764context: dq 0
f0764is_returning: dq 0
f0764gl: dq 0
f0764gr: dq 0
f0764orig_assign: dq 0
f0764f0074: dq 0
f0764assign_type: dq 0
f0764assign: dq 0
f0764f4564: dq 0
f0764break: dq 0
f0764ids: dq 0
f0764call_exp: dq 0
f0764f1764: dq 0
f0764:
pop qword [f0764fl]
pop qword [f0764fr]
pop qword [f0764context]
pop qword [f0764is_returning]
pop qword [f0764gl]
pop qword [f0764gr]
pop qword [f0764orig_assign]
pop qword [f0764f0074]
pop qword [f0764assign_type]
pop qword [f0764assign]
pop qword [f0764f4564]
pop qword [f0764break]
push qword [f0764fl]
push qword [f0764fr]
push qword [f0764context]
push qword [f0764is_returning]
push qword [f0764gl]
push qword [f0764gr]
push qword [f0764orig_assign]
push qword [f0764f0074]
push qword [f0764assign_type]
push qword [f0764assign]
push qword [f0764f4564]
push qword [f0764break]
push qword [f0764assign]
call runtime_call_ret
push rax
pop qword [f0764ids]
pop qword [f0764call_exp]
pop qword [f0764break]
pop qword [f0764f4564]
pop qword [f0764assign]
pop qword [f0764assign_type]
pop qword [f0764f0074]
pop qword [f0764orig_assign]
pop qword [f0764gr]
pop qword [f0764gl]
pop qword [f0764is_returning]
pop qword [f0764context]
pop qword [f0764fr]
pop qword [f0764fl]
push qword [f0764fl]
push qword [f0764fr]
push qword [f0764context]
push qword [f0764is_returning]
push qword [f0764gl]
push qword [f0764gr]
push qword [f0764orig_assign]
push qword [f0764f0074]
push qword [f0764assign_type]
push qword [f0764assign]
push qword [f0764f4564]
push qword [f0764break]
push qword [f0764ids]
push qword [f0764call_exp]
jmp f4574_end
f0764f4574: dq 0
f4574_end:
push qword [f0764call_exp]
pop qword [f0764f4574]
push qword [f0764f4574]
jmp f5574_end
f0764f5574: dq 0
f5574_end:
push qword [f0764gr]
pop qword [f0764f5574]
push qword [f0764f5574]
jmp f6574_end
f0764f6574: dq 0
f6574_end:
push qword [f0764gl]
pop qword [f0764f6574]
push qword [f0764f6574]
jmp f7574_end
f0764f7574: dq 0
f7574_end:
push qword [f0764ids]
pop qword [f0764f7574]
push qword [f0764f7574]
jmp f0674_end
f0764f0674: dq 0
f0674_end:
push qword [f0764context]
pop qword [f0764f0674]
push qword [f0764f0674]
jmp f1674_end
f0764f1674: dq 0
f1674_end:
push qword [f0764fr]
pop qword [f0764f1674]
push qword [f0764f1674]
jmp f2674_end
f0764f2674: dq 0
f2674_end:
push qword [f0764fl]
pop qword [f0764f2674]
push qword [f0764f2674]
call print_call_expression
push rax
pop qword [f0764f1764]
pop qword [f0764call_exp]
pop qword [f0764ids]
pop qword [f0764break]
pop qword [f0764f4564]
pop qword [f0764assign]
pop qword [f0764assign_type]
pop qword [f0764f0074]
pop qword [f0764orig_assign]
pop qword [f0764gr]
pop qword [f0764gl]
pop qword [f0764is_returning]
pop qword [f0764context]
pop qword [f0764fr]
pop qword [f0764fl]
mov rsp, [f0764f0074]
jmp f3674_end
f0764f3674: dq 0
f3674_end:
push qword [f0764orig_assign]
pop qword [f0764f3674]
pop rax
push qword [f0764f3674]
push rax
pop rcx
pop rax
jmp rcx
f0764_end:
mov rdi, 104
call malloc
mov qword [rax+8], f0764
mov rcx, [print_assignmentfl]
mov qword [rax+16], rcx
mov rcx, [print_assignmentfr]
mov qword [rax+24], rcx
mov rcx, [print_assignmentcontext]
mov qword [rax+32], rcx
mov rcx, [print_assignmentis_returning]
mov qword [rax+40], rcx
mov rcx, [print_assignmentgl]
mov qword [rax+48], rcx
mov rcx, [print_assignmentgr]
mov qword [rax+56], rcx
mov rcx, [print_assignmentorig_assign]
mov qword [rax+64], rcx
mov rcx, [print_assignmentf0074]
mov qword [rax+72], rcx
mov rcx, [print_assignmentassign_type]
mov qword [rax+80], rcx
mov rcx, [print_assignmentassign]
mov qword [rax+88], rcx
mov rcx, [print_assignmentf4564]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [print_assignmentf3574]
push qword [print_assignmentf3574]
jmp f4674_end
print_assignmentf4674: dq 0
f4674_end:
push qword [print_assignmentfl]
push qword [print_assignmentfr]
push qword [print_assignmentcontext]
push qword [print_assignmentis_returning]
push qword [print_assignmentgl]
push qword [print_assignmentgr]
push qword [print_assignmentorig_assign]
push qword [print_assignmentf0074]
push qword [print_assignmentassign_type]
push qword [print_assignmentassign]
push qword [print_assignmentf4564]
jmp f5674_end
print_assignmentf5674: dq 0
f5674_end:
push qword [assign_statement]
pop qword [print_assignmentf5674]
push qword [print_assignmentf5674]
jmp f6674_end
print_assignmentf6674: dq 0
f6674_end:
push qword [print_assignmentassign_type]
pop qword [print_assignmentf6674]
push qword [print_assignmentf6674]
call eq
push rax
pop qword [print_assignmentf4674]
pop qword [print_assignmentf4564]
pop qword [print_assignmentassign]
pop qword [print_assignmentassign_type]
pop qword [print_assignmentf0074]
pop qword [print_assignmentorig_assign]
pop qword [print_assignmentgr]
pop qword [print_assignmentgl]
pop qword [print_assignmentis_returning]
pop qword [print_assignmentcontext]
pop qword [print_assignmentfr]
pop qword [print_assignmentfl]
push qword [print_assignmentf4674]
call if
push rax
pop qword [print_assignmentf7664]
pop qword [print_assignmentf4564]
pop qword [print_assignmentassign]
pop qword [print_assignmentassign_type]
pop qword [print_assignmentf0074]
pop qword [print_assignmentorig_assign]
pop qword [print_assignmentgr]
pop qword [print_assignmentgl]
pop qword [print_assignmentis_returning]
pop qword [print_assignmentcontext]
pop qword [print_assignmentfr]
pop qword [print_assignmentfl]
push qword [print_assignmentfl]
push qword [print_assignmentfr]
push qword [print_assignmentcontext]
push qword [print_assignmentis_returning]
push qword [print_assignmentgl]
push qword [print_assignmentgr]
push qword [print_assignmentorig_assign]
push qword [print_assignmentf0074]
push qword [print_assignmentassign_type]
push qword [print_assignmentassign]
push qword [print_assignmentf4564]
push qword [print_assignmentf7664]
jmp f7674_end
print_assignmentf7674: dq 0
f7674_end:
jmp f4764_end
f4764fl: dq 0
f4764fr: dq 0
f4764context: dq 0
f4764is_returning: dq 0
f4764gl: dq 0
f4764gr: dq 0
f4764orig_assign: dq 0
f4764f0074: dq 0
f4764assign_type: dq 0
f4764assign: dq 0
f4764f4564: dq 0
f4764f7664: dq 0
f4764break: dq 0
f4764appl: dq 0
f4764f5764: dq 0
f4764:
pop qword [f4764fl]
pop qword [f4764fr]
pop qword [f4764context]
pop qword [f4764is_returning]
pop qword [f4764gl]
pop qword [f4764gr]
pop qword [f4764orig_assign]
pop qword [f4764f0074]
pop qword [f4764assign_type]
pop qword [f4764assign]
pop qword [f4764f4564]
pop qword [f4764f7664]
pop qword [f4764break]
push qword [f4764fl]
push qword [f4764fr]
push qword [f4764context]
push qword [f4764is_returning]
push qword [f4764gl]
push qword [f4764gr]
push qword [f4764orig_assign]
push qword [f4764f0074]
push qword [f4764assign_type]
push qword [f4764assign]
push qword [f4764f4564]
push qword [f4764f7664]
push qword [f4764break]
push qword [f4764assign]
call runtime_call_ret
push rax
pop qword [f4764appl]
pop qword [f4764break]
pop qword [f4764f7664]
pop qword [f4764f4564]
pop qword [f4764assign]
pop qword [f4764assign_type]
pop qword [f4764f0074]
pop qword [f4764orig_assign]
pop qword [f4764gr]
pop qword [f4764gl]
pop qword [f4764is_returning]
pop qword [f4764context]
pop qword [f4764fr]
pop qword [f4764fl]
push qword [f4764fl]
push qword [f4764fr]
push qword [f4764context]
push qword [f4764is_returning]
push qword [f4764gl]
push qword [f4764gr]
push qword [f4764orig_assign]
push qword [f4764f0074]
push qword [f4764assign_type]
push qword [f4764assign]
push qword [f4764f4564]
push qword [f4764f7664]
push qword [f4764break]
push qword [f4764appl]
jmp f0774_end
f4764f0774: dq 0
f0774_end:
push qword [f4764appl]
pop qword [f4764f0774]
push qword [f4764f0774]
jmp f1774_end
f4764f1774: dq 0
f1774_end:
push qword [f4764gr]
pop qword [f4764f1774]
push qword [f4764f1774]
jmp f2774_end
f4764f2774: dq 0
f2774_end:
push qword [f4764gl]
pop qword [f4764f2774]
push qword [f4764f2774]
jmp f3774_end
f4764f3774: dq 0
f3774_end:
push qword [f4764is_returning]
pop qword [f4764f3774]
push qword [f4764f3774]
jmp f4774_end
f4764f4774: dq 0
f4774_end:
push qword [f4764context]
pop qword [f4764f4774]
push qword [f4764f4774]
jmp f5774_end
f4764f5774: dq 0
f5774_end:
push qword [f4764fr]
pop qword [f4764f5774]
push qword [f4764f5774]
jmp f6774_end
f4764f6774: dq 0
f6774_end:
push qword [f4764fl]
pop qword [f4764f6774]
push qword [f4764f6774]
call print_function_application
push rax
pop qword [f4764f5764]
pop qword [f4764appl]
pop qword [f4764break]
pop qword [f4764f7664]
pop qword [f4764f4564]
pop qword [f4764assign]
pop qword [f4764assign_type]
pop qword [f4764f0074]
pop qword [f4764orig_assign]
pop qword [f4764gr]
pop qword [f4764gl]
pop qword [f4764is_returning]
pop qword [f4764context]
pop qword [f4764fr]
pop qword [f4764fl]
mov rsp, [f4764f0074]
jmp f7774_end
f4764f7774: dq 0
f7774_end:
push qword [f4764orig_assign]
pop qword [f4764f7774]
pop rax
push qword [f4764f7774]
push rax
pop rcx
pop rax
jmp rcx
f4764_end:
mov rdi, 112
call malloc
mov qword [rax+8], f4764
mov rcx, [print_assignmentfl]
mov qword [rax+16], rcx
mov rcx, [print_assignmentfr]
mov qword [rax+24], rcx
mov rcx, [print_assignmentcontext]
mov qword [rax+32], rcx
mov rcx, [print_assignmentis_returning]
mov qword [rax+40], rcx
mov rcx, [print_assignmentgl]
mov qword [rax+48], rcx
mov rcx, [print_assignmentgr]
mov qword [rax+56], rcx
mov rcx, [print_assignmentorig_assign]
mov qword [rax+64], rcx
mov rcx, [print_assignmentf0074]
mov qword [rax+72], rcx
mov rcx, [print_assignmentassign_type]
mov qword [rax+80], rcx
mov rcx, [print_assignmentassign]
mov qword [rax+88], rcx
mov rcx, [print_assignmentf4564]
mov qword [rax+96], rcx
mov rcx, [print_assignmentf7664]
mov qword [rax+104], rcx
mov qword [rax], 13
push rax
pop qword [print_assignmentf7674]
push qword [print_assignmentf7674]
jmp f0005_end
print_assignmentf0005: dq 0
f0005_end:
push qword [print_assignmentfl]
push qword [print_assignmentfr]
push qword [print_assignmentcontext]
push qword [print_assignmentis_returning]
push qword [print_assignmentgl]
push qword [print_assignmentgr]
push qword [print_assignmentorig_assign]
push qword [print_assignmentf0074]
push qword [print_assignmentassign_type]
push qword [print_assignmentassign]
push qword [print_assignmentf4564]
push qword [print_assignmentf7664]
jmp f1005_end
print_assignmentf1005: dq 0
f1005_end:
push qword [assign_application]
pop qword [print_assignmentf1005]
push qword [print_assignmentf1005]
jmp f2005_end
print_assignmentf2005: dq 0
f2005_end:
push qword [print_assignmentassign_type]
pop qword [print_assignmentf2005]
push qword [print_assignmentf2005]
call eq
push rax
pop qword [print_assignmentf0005]
pop qword [print_assignmentf7664]
pop qword [print_assignmentf4564]
pop qword [print_assignmentassign]
pop qword [print_assignmentassign_type]
pop qword [print_assignmentf0074]
pop qword [print_assignmentorig_assign]
pop qword [print_assignmentgr]
pop qword [print_assignmentgl]
pop qword [print_assignmentis_returning]
pop qword [print_assignmentcontext]
pop qword [print_assignmentfr]
pop qword [print_assignmentfl]
push qword [print_assignmentf0005]
call if
push rax
pop qword [print_assignmentf3764]
pop qword [print_assignmentf7664]
pop qword [print_assignmentf4564]
pop qword [print_assignmentassign]
pop qword [print_assignmentassign_type]
pop qword [print_assignmentf0074]
pop qword [print_assignmentorig_assign]
pop qword [print_assignmentgr]
pop qword [print_assignmentgl]
pop qword [print_assignmentis_returning]
pop qword [print_assignmentcontext]
pop qword [print_assignmentfr]
pop qword [print_assignmentfl]
ret
print_assignment_end:
jmp assign_to_function_end
assign_to_functionassign: dq 0
assign_to_functionassign_type: dq 0
assign_to_functionf4005: dq 0
assign_to_functionf1205: dq 0
assign_to_function:
pop rax
pop qword [assign_to_functionassign]
push rax
mov [assign_to_functionf1205], rsp
push qword [assign_to_functionf1205]
push qword [assign_to_functionassign]
call runtime_call_ret
push rax
pop qword [assign_to_functionassign_type]
pop qword [assign_to_functionassign]
pop qword [assign_to_functionf1205]
push qword [assign_to_functionf1205]
push qword [assign_to_functionassign_type]
push qword [assign_to_functionassign]
jmp f2205_end
assign_to_functionf2205: dq 0
f2205_end:
jmp f5005_end
f5005f1205: dq 0
f5005assign_type: dq 0
f5005assign: dq 0
f5005break: dq 0
f5005ids: dq 0
f5005call_exp: dq 0
f5005func: dq 0
f5005f6005: dq 0
f5005:
pop qword [f5005f1205]
pop qword [f5005assign_type]
pop qword [f5005assign]
pop qword [f5005break]
push qword [f5005f1205]
push qword [f5005assign_type]
push qword [f5005assign]
push qword [f5005break]
push qword [f5005assign]
call runtime_call_ret
push rax
pop qword [f5005ids]
pop qword [f5005call_exp]
pop qword [f5005break]
pop qword [f5005assign]
pop qword [f5005assign_type]
pop qword [f5005f1205]
push qword [f5005f1205]
push qword [f5005assign_type]
push qword [f5005assign]
push qword [f5005break]
push qword [f5005ids]
push qword [f5005call_exp]
jmp f3205_end
f5005f3205: dq 0
f3205_end:
push qword [f5005call_exp]
pop qword [f5005f3205]
push qword [f5005f3205]
call call_expression_to_function
push rax
pop qword [f5005func]
pop qword [f5005call_exp]
pop qword [f5005ids]
pop qword [f5005break]
pop qword [f5005assign]
pop qword [f5005assign_type]
pop qword [f5005f1205]
jmp f4205_end
f5005f4205: dq 0
f4205_end:
jmp f2105_end
f2105f1205: dq 0
f2105assign_type: dq 0
f2105assign: dq 0
f2105ids: dq 0
f2105call_exp: dq 0
f2105func: dq 0
f2105break: dq 0
f2105:
pop qword [f2105f1205]
pop qword [f2105assign_type]
pop qword [f2105assign]
pop qword [f2105ids]
pop qword [f2105call_exp]
pop qword [f2105func]
pop qword [f2105break]
mov rsp, [f2105f1205]
jmp f5205_end
f2105f5205: dq 0
f5205_end:
push 0
pop qword [f2105f5205]
pop rax
push qword [f2105f5205]
push rax
pop rcx
pop rax
jmp rcx
f2105_end:
mov rdi, 64
call malloc
mov qword [rax+8], f2105
mov rcx, [f5005f1205]
mov qword [rax+16], rcx
mov rcx, [f5005assign_type]
mov qword [rax+24], rcx
mov rcx, [f5005assign]
mov qword [rax+32], rcx
mov rcx, [f5005ids]
mov qword [rax+40], rcx
mov rcx, [f5005call_exp]
mov qword [rax+48], rcx
mov rcx, [f5005func]
mov qword [rax+56], rcx
mov qword [rax], 7
push rax
pop qword [f5005f4205]
push qword [f5005f4205]
jmp f6205_end
f5005f6205: dq 0
f6205_end:
jmp f7205_end
f5005f7205: dq 0
f7205_end:
push 0
pop qword [f5005f7205]
push qword [f5005f7205]
jmp f0305_end
f5005f0305: dq 0
f0305_end:
push qword [f5005func]
pop qword [f5005f0305]
push qword [f5005f0305]
call eq
push rax
pop qword [f5005f6205]
push qword [f5005f6205]
call if
push rax
pop qword [f5005f6005]
mov rsp, [f5005f1205]
jmp f1305_end
f5005f1305: dq 0
f1305_end:
jmp f5105_end
f5105f1205: dq 0
f5105assign_type: dq 0
f5105assign: dq 0
f5105break: dq 0
f5105ids: dq 0
f5105call_exp: dq 0
f5105func: dq 0
f5105f6005: dq 0
f5105f2305: dq 0
f5105:
pop rax
pop qword [f5105f1205]
pop qword [f5105assign_type]
pop qword [f5105assign]
pop qword [f5105break]
pop qword [f5105ids]
pop qword [f5105call_exp]
pop qword [f5105func]
pop qword [f5105f6005]
push rax
mov [f5105f2305], rsp
mov rsp, [f5105f2305]
jmp f3305_end
f5105f3305: dq 0
f3305_end:
push qword [f5105func]
pop qword [f5105f3305]
pop rax
push qword [f5105f3305]
push rax
jmp f4305_end
f5105f4305: dq 0
f4305_end:
push qword [f5105ids]
pop qword [f5105f4305]
pop rax
push qword [f5105f4305]
push rax
pop rcx
pop rax
jmp rcx
ret
f5105_end:
mov rdi, 80
call malloc
mov qword [rax+8], f5105
mov rcx, [f5005f1205]
mov qword [rax+16], rcx
mov rcx, [f5005assign_type]
mov qword [rax+24], rcx
mov rcx, [f5005assign]
mov qword [rax+32], rcx
mov rcx, [f5005break]
mov qword [rax+40], rcx
mov rcx, [f5005ids]
mov qword [rax+48], rcx
mov rcx, [f5005call_exp]
mov qword [rax+56], rcx
mov rcx, [f5005func]
mov qword [rax+64], rcx
mov rcx, [f5005f6005]
mov qword [rax+72], rcx
mov qword [rax], 9
push rax
pop qword [f5005f1305]
pop rax
push qword [f5005f1305]
push rax
pop rcx
pop rax
jmp rcx
f5005_end:
mov rdi, 40
call malloc
mov qword [rax+8], f5005
mov rcx, [assign_to_functionf1205]
mov qword [rax+16], rcx
mov rcx, [assign_to_functionassign_type]
mov qword [rax+24], rcx
mov rcx, [assign_to_functionassign]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [assign_to_functionf2205]
push qword [assign_to_functionf2205]
jmp f5305_end
assign_to_functionf5305: dq 0
f5305_end:
push qword [assign_to_functionf1205]
push qword [assign_to_functionassign_type]
push qword [assign_to_functionassign]
jmp f6305_end
assign_to_functionf6305: dq 0
f6305_end:
push qword [assign_statement]
pop qword [assign_to_functionf6305]
push qword [assign_to_functionf6305]
jmp f7305_end
assign_to_functionf7305: dq 0
f7305_end:
push qword [assign_to_functionassign_type]
pop qword [assign_to_functionf7305]
push qword [assign_to_functionf7305]
call eq
push rax
pop qword [assign_to_functionf5305]
pop qword [assign_to_functionassign]
pop qword [assign_to_functionassign_type]
pop qword [assign_to_functionf1205]
push qword [assign_to_functionf5305]
call if
push rax
pop qword [assign_to_functionf4005]
pop qword [assign_to_functionassign]
pop qword [assign_to_functionassign_type]
pop qword [assign_to_functionf1205]
mov rsp, [assign_to_functionf1205]
jmp f0405_end
assign_to_functionf0405: dq 0
f0405_end:
push 0
pop qword [assign_to_functionf0405]
pop rax
push qword [assign_to_functionf0405]
push rax
pop rcx
pop rax
jmp rcx
ret
assign_to_function_end:
jmp get_assignment_vars_end
get_assignment_varsassign: dq 0
get_assignment_varsassign_type: dq 0
get_assignment_varsf2405: dq 0
get_assignment_varsf6405: dq 0
get_assignment_vars:
pop rax
pop qword [get_assignment_varsassign]
push rax
mov [get_assignment_varsf6405], rsp
push qword [get_assignment_varsf6405]
push qword [get_assignment_varsassign]
call runtime_call_ret
push rax
pop qword [get_assignment_varsassign_type]
pop qword [get_assignment_varsassign]
pop qword [get_assignment_varsf6405]
push qword [get_assignment_varsf6405]
push qword [get_assignment_varsassign_type]
push qword [get_assignment_varsassign]
jmp f7405_end
get_assignment_varsf7405: dq 0
f7405_end:
jmp f3405_end
f3405f6405: dq 0
f3405assign_type: dq 0
f3405assign: dq 0
f3405break: dq 0
f3405ids: dq 0
f3405call_exp: dq 0
f3405:
pop qword [f3405f6405]
pop qword [f3405assign_type]
pop qword [f3405assign]
pop qword [f3405break]
push qword [f3405f6405]
push qword [f3405assign_type]
push qword [f3405assign]
push qword [f3405break]
push qword [f3405assign]
call runtime_call_ret
push rax
pop qword [f3405ids]
pop qword [f3405call_exp]
pop qword [f3405break]
pop qword [f3405assign]
pop qword [f3405assign_type]
pop qword [f3405f6405]
mov rsp, [f3405f6405]
jmp f0505_end
f3405f0505: dq 0
f0505_end:
push qword [f3405ids]
pop qword [f3405f0505]
pop rax
push qword [f3405f0505]
push rax
pop rcx
pop rax
jmp rcx
f3405_end:
mov rdi, 40
call malloc
mov qword [rax+8], f3405
mov rcx, [get_assignment_varsf6405]
mov qword [rax+16], rcx
mov rcx, [get_assignment_varsassign_type]
mov qword [rax+24], rcx
mov rcx, [get_assignment_varsassign]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [get_assignment_varsf7405]
push qword [get_assignment_varsf7405]
jmp f1505_end
get_assignment_varsf1505: dq 0
f1505_end:
push qword [get_assignment_varsf6405]
push qword [get_assignment_varsassign_type]
push qword [get_assignment_varsassign]
jmp f2505_end
get_assignment_varsf2505: dq 0
f2505_end:
push qword [assign_statement]
pop qword [get_assignment_varsf2505]
push qword [get_assignment_varsf2505]
jmp f3505_end
get_assignment_varsf3505: dq 0
f3505_end:
push qword [get_assignment_varsassign_type]
pop qword [get_assignment_varsf3505]
push qword [get_assignment_varsf3505]
call eq
push rax
pop qword [get_assignment_varsf1505]
pop qword [get_assignment_varsassign]
pop qword [get_assignment_varsassign_type]
pop qword [get_assignment_varsf6405]
push qword [get_assignment_varsf1505]
call if
push rax
pop qword [get_assignment_varsf2405]
pop qword [get_assignment_varsassign]
pop qword [get_assignment_varsassign_type]
pop qword [get_assignment_varsf6405]
mov rsp, [get_assignment_varsf6405]
jmp f4505_end
get_assignment_varsf4505: dq 0
f4505_end:
push qword [get_assignment_varsf6405]
push qword [get_assignment_varsassign_type]
push qword [get_assignment_varsassign]
push qword [get_assignment_varsf2405]
call make_nil
push rax
pop qword [get_assignment_varsf4505]
pop qword [get_assignment_varsf2405]
pop qword [get_assignment_varsassign]
pop qword [get_assignment_varsassign_type]
pop qword [get_assignment_varsf6405]
pop rax
push qword [get_assignment_varsf4505]
push rax
pop rcx
pop rax
jmp rcx
ret
get_assignment_vars_end:
jmp read_call_exp_list_end
read_call_exp_listret: dq 0
read_call_exp_listl: dq 0
read_call_exp_listr: dq 0
read_call_exp_listtree: dq 0
read_call_exp_list:
pop qword [read_call_exp_listret]
pop qword [read_call_exp_listl]
pop qword [read_call_exp_listr]
push qword [read_call_exp_listret]
jmp f0605_end
read_call_exp_listf0605: dq 0
f0605_end:
push qword [read_call_exp_listret]
push qword [read_call_exp_listl]
push qword [read_call_exp_listr]
call make_nil
push rax
pop qword [read_call_exp_listf0605]
pop qword [read_call_exp_listr]
pop qword [read_call_exp_listl]
pop qword [read_call_exp_listret]
push qword [read_call_exp_listf0605]
jmp f1605_end
read_call_exp_listf1605: dq 0
f1605_end:
push qword [read_call_exp_listr]
pop qword [read_call_exp_listf1605]
push qword [read_call_exp_listf1605]
jmp f2605_end
read_call_exp_listf2605: dq 0
f2605_end:
push qword [read_call_exp_listl]
pop qword [read_call_exp_listf2605]
push qword [read_call_exp_listf2605]
call read_call_exp_list_help
push rax
pop qword [read_call_exp_listl]
pop qword [read_call_exp_listr]
pop qword [read_call_exp_listtree]
pop qword [read_call_exp_listret]
jmp f3605_end
read_call_exp_listf3605: dq 0
f3605_end:
push qword [read_call_exp_listtree]
pop qword [read_call_exp_listf3605]
push qword [read_call_exp_listf3605]
jmp f4605_end
read_call_exp_listf4605: dq 0
f4605_end:
push qword [read_call_exp_listr]
pop qword [read_call_exp_listf4605]
push qword [read_call_exp_listf4605]
jmp f5605_end
read_call_exp_listf5605: dq 0
f5605_end:
push qword [read_call_exp_listl]
pop qword [read_call_exp_listf5605]
push qword [read_call_exp_listf5605]
jmp f6605_end
read_call_exp_listf6605: dq 0
f6605_end:
push qword [read_call_exp_listret]
pop qword [read_call_exp_listf6605]
push qword [read_call_exp_listf6605]
jmp return
read_call_exp_list_end:
jmp read_call_exp_list_help_end
read_call_exp_list_helpret: dq 0
read_call_exp_list_helpl: dq 0
read_call_exp_list_helpr: dq 0
read_call_exp_list_helptree: dq 0
read_call_exp_list_helpnl: dq 0
read_call_exp_list_helpnr: dq 0
read_call_exp_list_helpt: dq 0
read_call_exp_list_helptl: dq 0
read_call_exp_list_helptr: dq 0
read_call_exp_list_helpf0705: dq 0
read_call_exp_list_helpcall_exp: dq 0
read_call_exp_list_helpf0015: dq 0
read_call_exp_list_helpleaf: dq 0
read_call_exp_list_help:
pop qword [read_call_exp_list_helpret]
pop qword [read_call_exp_list_helpl]
pop qword [read_call_exp_list_helpr]
pop qword [read_call_exp_list_helptree]
push qword [read_call_exp_list_helpret]
push qword [read_call_exp_list_helpl]
push qword [read_call_exp_list_helpr]
push qword [read_call_exp_list_helptree]
jmp f2115_end
read_call_exp_list_helpf2115: dq 0
f2115_end:
push qword [read_call_exp_list_helpr]
pop qword [read_call_exp_list_helpf2115]
push qword [read_call_exp_list_helpf2115]
jmp f3115_end
read_call_exp_list_helpf3115: dq 0
f3115_end:
push qword [read_call_exp_list_helpl]
pop qword [read_call_exp_list_helpf3115]
push qword [read_call_exp_list_helpf3115]
call read_token
push rax
pop qword [read_call_exp_list_helpnl]
pop qword [read_call_exp_list_helpnr]
pop qword [read_call_exp_list_helpt]
pop qword [read_call_exp_list_helptl]
pop qword [read_call_exp_list_helptr]
pop qword [read_call_exp_list_helptree]
pop qword [read_call_exp_list_helpr]
pop qword [read_call_exp_list_helpl]
pop qword [read_call_exp_list_helpret]
jmp f4115_end
read_call_exp_list_helpf4115: dq 0
f4115_end:
jmp f4705_end
f4705ret: dq 0
f4705l: dq 0
f4705r: dq 0
f4705tree: dq 0
f4705nl: dq 0
f4705nr: dq 0
f4705t: dq 0
f4705tl: dq 0
f4705tr: dq 0
f4705break: dq 0
f4705:
pop qword [f4705ret]
pop qword [f4705l]
pop qword [f4705r]
pop qword [f4705tree]
pop qword [f4705nl]
pop qword [f4705nr]
pop qword [f4705t]
pop qword [f4705tl]
pop qword [f4705tr]
pop qword [f4705break]
jmp f5115_end
f4705f5115: dq 0
f5115_end:
push qword [f4705tree]
pop qword [f4705f5115]
push qword [f4705f5115]
jmp f6115_end
f4705f6115: dq 0
f6115_end:
push qword [f4705nr]
pop qword [f4705f6115]
push qword [f4705f6115]
jmp f7115_end
f4705f7115: dq 0
f7115_end:
push qword [f4705nl]
pop qword [f4705f7115]
push qword [f4705f7115]
jmp f0215_end
f4705f0215: dq 0
f0215_end:
push qword [f4705ret]
pop qword [f4705f0215]
push qword [f4705f0215]
jmp read_call_exp_list_help
f4705_end:
mov rdi, 88
call malloc
mov qword [rax+8], f4705
mov rcx, [read_call_exp_list_helpret]
mov qword [rax+16], rcx
mov rcx, [read_call_exp_list_helpl]
mov qword [rax+24], rcx
mov rcx, [read_call_exp_list_helpr]
mov qword [rax+32], rcx
mov rcx, [read_call_exp_list_helptree]
mov qword [rax+40], rcx
mov rcx, [read_call_exp_list_helpnl]
mov qword [rax+48], rcx
mov rcx, [read_call_exp_list_helpnr]
mov qword [rax+56], rcx
mov rcx, [read_call_exp_list_helpt]
mov qword [rax+64], rcx
mov rcx, [read_call_exp_list_helptl]
mov qword [rax+72], rcx
mov rcx, [read_call_exp_list_helptr]
mov qword [rax+80], rcx
mov qword [rax], 10
push rax
pop qword [read_call_exp_list_helpf4115]
push qword [read_call_exp_list_helpf4115]
jmp f1215_end
read_call_exp_list_helpf1215: dq 0
f1215_end:
jmp f2215_end
read_call_exp_list_helpf2215: dq 0
f2215_end:
push qword [read_call_exp_list_helptl]
pop qword [read_call_exp_list_helpf2215]
push qword [read_call_exp_list_helpf2215]
jmp f3215_end
read_call_exp_list_helpf3215: dq 0
f3215_end:
jmp f4215_end
f4215: db `,`
db 0
f4215_end: push f4215
pop qword [read_call_exp_list_helpf3215]
push qword [read_call_exp_list_helpf3215]
call matches
push rax
pop qword [read_call_exp_list_helpf1215]
push qword [read_call_exp_list_helpf1215]
call if
push rax
pop qword [read_call_exp_list_helpf0705]
push qword [read_call_exp_list_helpret]
push qword [read_call_exp_list_helptree]
push qword [read_call_exp_list_helpnl]
push qword [read_call_exp_list_helpnr]
push qword [read_call_exp_list_helpt]
push qword [read_call_exp_list_helptl]
push qword [read_call_exp_list_helptr]
push qword [read_call_exp_list_helpf0705]
jmp f5215_end
read_call_exp_list_helpf5215: dq 0
f5215_end:
push qword [read_call_exp_list_helpr]
pop qword [read_call_exp_list_helpf5215]
push qword [read_call_exp_list_helpf5215]
jmp f6215_end
read_call_exp_list_helpf6215: dq 0
f6215_end:
push qword [read_call_exp_list_helpl]
pop qword [read_call_exp_list_helpf6215]
push qword [read_call_exp_list_helpf6215]
call read_call_expression
push rax
pop qword [read_call_exp_list_helpl]
pop qword [read_call_exp_list_helpr]
pop qword [read_call_exp_list_helpcall_exp]
pop qword [read_call_exp_list_helpf0705]
pop qword [read_call_exp_list_helptr]
pop qword [read_call_exp_list_helptl]
pop qword [read_call_exp_list_helpt]
pop qword [read_call_exp_list_helpnr]
pop qword [read_call_exp_list_helpnl]
pop qword [read_call_exp_list_helptree]
pop qword [read_call_exp_list_helpret]
jmp f7215_end
read_call_exp_list_helpf7215: dq 0
f7215_end:
jmp f4015_end
f4015ret: dq 0
f4015tree: dq 0
f4015nl: dq 0
f4015nr: dq 0
f4015t: dq 0
f4015tl: dq 0
f4015tr: dq 0
f4015f0705: dq 0
f4015l: dq 0
f4015r: dq 0
f4015call_exp: dq 0
f4015break: dq 0
f4015:
pop qword [f4015ret]
pop qword [f4015tree]
pop qword [f4015nl]
pop qword [f4015nr]
pop qword [f4015t]
pop qword [f4015tl]
pop qword [f4015tr]
pop qword [f4015f0705]
pop qword [f4015l]
pop qword [f4015r]
pop qword [f4015call_exp]
pop qword [f4015break]
jmp f0315_end
f4015f0315: dq 0
f0315_end:
push qword [f4015tree]
pop qword [f4015f0315]
push qword [f4015f0315]
jmp f1315_end
f4015f1315: dq 0
f1315_end:
push qword [f4015r]
pop qword [f4015f1315]
push qword [f4015f1315]
jmp f2315_end
f4015f2315: dq 0
f2315_end:
push qword [f4015l]
pop qword [f4015f2315]
push qword [f4015f2315]
jmp f3315_end
f4015f3315: dq 0
f3315_end:
push qword [f4015ret]
pop qword [f4015f3315]
push qword [f4015f3315]
jmp return
f4015_end:
mov rdi, 104
call malloc
mov qword [rax+8], f4015
mov rcx, [read_call_exp_list_helpret]
mov qword [rax+16], rcx
mov rcx, [read_call_exp_list_helptree]
mov qword [rax+24], rcx
mov rcx, [read_call_exp_list_helpnl]
mov qword [rax+32], rcx
mov rcx, [read_call_exp_list_helpnr]
mov qword [rax+40], rcx
mov rcx, [read_call_exp_list_helpt]
mov qword [rax+48], rcx
mov rcx, [read_call_exp_list_helptl]
mov qword [rax+56], rcx
mov rcx, [read_call_exp_list_helptr]
mov qword [rax+64], rcx
mov rcx, [read_call_exp_list_helpf0705]
mov qword [rax+72], rcx
mov rcx, [read_call_exp_list_helpl]
mov qword [rax+80], rcx
mov rcx, [read_call_exp_list_helpr]
mov qword [rax+88], rcx
mov rcx, [read_call_exp_list_helpcall_exp]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [read_call_exp_list_helpf7215]
push qword [read_call_exp_list_helpf7215]
jmp f4315_end
read_call_exp_list_helpf4315: dq 0
f4315_end:
jmp f5315_end
read_call_exp_list_helpf5315: dq 0
f5315_end:
push 0
pop qword [read_call_exp_list_helpf5315]
push qword [read_call_exp_list_helpf5315]
jmp f6315_end
read_call_exp_list_helpf6315: dq 0
f6315_end:
push qword [read_call_exp_list_helpcall_exp]
pop qword [read_call_exp_list_helpf6315]
push qword [read_call_exp_list_helpf6315]
call eq
push rax
pop qword [read_call_exp_list_helpf4315]
push qword [read_call_exp_list_helpf4315]
call if
push rax
pop qword [read_call_exp_list_helpf0015]
push qword [read_call_exp_list_helpret]
push qword [read_call_exp_list_helptree]
push qword [read_call_exp_list_helpnl]
push qword [read_call_exp_list_helpnr]
push qword [read_call_exp_list_helpt]
push qword [read_call_exp_list_helptl]
push qword [read_call_exp_list_helptr]
push qword [read_call_exp_list_helpf0705]
push qword [read_call_exp_list_helpl]
push qword [read_call_exp_list_helpr]
push qword [read_call_exp_list_helpcall_exp]
push qword [read_call_exp_list_helpf0015]
jmp f7315_end
read_call_exp_list_helpf7315: dq 0
f7315_end:
push 0
pop qword [read_call_exp_list_helpf7315]
push qword [read_call_exp_list_helpf7315]
jmp f0415_end
read_call_exp_list_helpf0415: dq 0
f0415_end:
push qword [read_call_exp_list_helpcall_exp]
pop qword [read_call_exp_list_helpf0415]
push qword [read_call_exp_list_helpf0415]
call make_leaf
push rax
pop qword [read_call_exp_list_helpleaf]
pop qword [read_call_exp_list_helpf0015]
pop qword [read_call_exp_list_helpcall_exp]
pop qword [read_call_exp_list_helpr]
pop qword [read_call_exp_list_helpl]
pop qword [read_call_exp_list_helpf0705]
pop qword [read_call_exp_list_helptr]
pop qword [read_call_exp_list_helptl]
pop qword [read_call_exp_list_helpt]
pop qword [read_call_exp_list_helpnr]
pop qword [read_call_exp_list_helpnl]
pop qword [read_call_exp_list_helptree]
pop qword [read_call_exp_list_helpret]
push qword [read_call_exp_list_helpret]
push qword [read_call_exp_list_helpnl]
push qword [read_call_exp_list_helpnr]
push qword [read_call_exp_list_helpt]
push qword [read_call_exp_list_helptl]
push qword [read_call_exp_list_helptr]
push qword [read_call_exp_list_helpf0705]
push qword [read_call_exp_list_helpl]
push qword [read_call_exp_list_helpr]
push qword [read_call_exp_list_helpcall_exp]
push qword [read_call_exp_list_helpf0015]
push qword [read_call_exp_list_helpleaf]
jmp f1415_end
read_call_exp_list_helpf1415: dq 0
f1415_end:
push qword [read_call_exp_list_helpleaf]
pop qword [read_call_exp_list_helpf1415]
push qword [read_call_exp_list_helpf1415]
jmp f2415_end
read_call_exp_list_helpf2415: dq 0
f2415_end:
push qword [read_call_exp_list_helptree]
pop qword [read_call_exp_list_helpf2415]
push qword [read_call_exp_list_helpf2415]
call make_internal
push rax
pop qword [read_call_exp_list_helptree]
pop qword [read_call_exp_list_helpleaf]
pop qword [read_call_exp_list_helpf0015]
pop qword [read_call_exp_list_helpcall_exp]
pop qword [read_call_exp_list_helpr]
pop qword [read_call_exp_list_helpl]
pop qword [read_call_exp_list_helpf0705]
pop qword [read_call_exp_list_helptr]
pop qword [read_call_exp_list_helptl]
pop qword [read_call_exp_list_helpt]
pop qword [read_call_exp_list_helpnr]
pop qword [read_call_exp_list_helpnl]
pop qword [read_call_exp_list_helpret]
jmp f3415_end
read_call_exp_list_helpf3415: dq 0
f3415_end:
push qword [read_call_exp_list_helptree]
pop qword [read_call_exp_list_helpf3415]
push qword [read_call_exp_list_helpf3415]
jmp f4415_end
read_call_exp_list_helpf4415: dq 0
f4415_end:
push qword [read_call_exp_list_helpr]
pop qword [read_call_exp_list_helpf4415]
push qword [read_call_exp_list_helpf4415]
jmp f5415_end
read_call_exp_list_helpf5415: dq 0
f5415_end:
push qword [read_call_exp_list_helpl]
pop qword [read_call_exp_list_helpf5415]
push qword [read_call_exp_list_helpf5415]
jmp f6415_end
read_call_exp_list_helpf6415: dq 0
f6415_end:
push qword [read_call_exp_list_helpret]
pop qword [read_call_exp_list_helpf6415]
push qword [read_call_exp_list_helpf6415]
jmp read_call_exp_list_help
read_call_exp_list_help_end:
jmp read_texp_list_end
read_texp_listret: dq 0
read_texp_listl: dq 0
read_texp_listr: dq 0
read_texp_listtree: dq 0
read_texp_list:
pop qword [read_texp_listret]
pop qword [read_texp_listl]
pop qword [read_texp_listr]
push qword [read_texp_listret]
jmp f2515_end
read_texp_listf2515: dq 0
f2515_end:
push qword [read_texp_listret]
push qword [read_texp_listl]
push qword [read_texp_listr]
call make_nil
push rax
pop qword [read_texp_listf2515]
pop qword [read_texp_listr]
pop qword [read_texp_listl]
pop qword [read_texp_listret]
push qword [read_texp_listf2515]
jmp f3515_end
read_texp_listf3515: dq 0
f3515_end:
push qword [read_texp_listr]
pop qword [read_texp_listf3515]
push qword [read_texp_listf3515]
jmp f4515_end
read_texp_listf4515: dq 0
f4515_end:
push qword [read_texp_listl]
pop qword [read_texp_listf4515]
push qword [read_texp_listf4515]
call read_texp_list_help
push rax
pop qword [read_texp_listl]
pop qword [read_texp_listr]
pop qword [read_texp_listtree]
pop qword [read_texp_listret]
jmp f5515_end
read_texp_listf5515: dq 0
f5515_end:
push qword [read_texp_listtree]
pop qword [read_texp_listf5515]
push qword [read_texp_listf5515]
jmp f6515_end
read_texp_listf6515: dq 0
f6515_end:
push qword [read_texp_listr]
pop qword [read_texp_listf6515]
push qword [read_texp_listf6515]
jmp f7515_end
read_texp_listf7515: dq 0
f7515_end:
push qword [read_texp_listl]
pop qword [read_texp_listf7515]
push qword [read_texp_listf7515]
jmp f0615_end
read_texp_listf0615: dq 0
f0615_end:
push qword [read_texp_listret]
pop qword [read_texp_listf0615]
push qword [read_texp_listf0615]
jmp return
read_texp_list_end:
jmp read_texp_list_help_end
read_texp_list_helpret: dq 0
read_texp_list_helpl: dq 0
read_texp_list_helpr: dq 0
read_texp_list_helptree: dq 0
read_texp_list_helpnl: dq 0
read_texp_list_helpnr: dq 0
read_texp_list_helpt: dq 0
read_texp_list_helptl: dq 0
read_texp_list_helptr: dq 0
read_texp_list_helpf2615: dq 0
read_texp_list_helptexp: dq 0
read_texp_list_helpf2715: dq 0
read_texp_list_helpleaf: dq 0
read_texp_list_help:
pop qword [read_texp_list_helpret]
pop qword [read_texp_list_helpl]
pop qword [read_texp_list_helpr]
pop qword [read_texp_list_helptree]
push qword [read_texp_list_helpret]
push qword [read_texp_list_helpl]
push qword [read_texp_list_helpr]
push qword [read_texp_list_helptree]
jmp f4025_end
read_texp_list_helpf4025: dq 0
f4025_end:
push qword [read_texp_list_helpr]
pop qword [read_texp_list_helpf4025]
push qword [read_texp_list_helpf4025]
jmp f5025_end
read_texp_list_helpf5025: dq 0
f5025_end:
push qword [read_texp_list_helpl]
pop qword [read_texp_list_helpf5025]
push qword [read_texp_list_helpf5025]
call read_token
push rax
pop qword [read_texp_list_helpnl]
pop qword [read_texp_list_helpnr]
pop qword [read_texp_list_helpt]
pop qword [read_texp_list_helptl]
pop qword [read_texp_list_helptr]
pop qword [read_texp_list_helptree]
pop qword [read_texp_list_helpr]
pop qword [read_texp_list_helpl]
pop qword [read_texp_list_helpret]
jmp f6025_end
read_texp_list_helpf6025: dq 0
f6025_end:
jmp f6615_end
f6615ret: dq 0
f6615l: dq 0
f6615r: dq 0
f6615tree: dq 0
f6615nl: dq 0
f6615nr: dq 0
f6615t: dq 0
f6615tl: dq 0
f6615tr: dq 0
f6615break: dq 0
f6615:
pop qword [f6615ret]
pop qword [f6615l]
pop qword [f6615r]
pop qword [f6615tree]
pop qword [f6615nl]
pop qword [f6615nr]
pop qword [f6615t]
pop qword [f6615tl]
pop qword [f6615tr]
pop qword [f6615break]
jmp f7025_end
f6615f7025: dq 0
f7025_end:
push qword [f6615tree]
pop qword [f6615f7025]
push qword [f6615f7025]
jmp f0125_end
f6615f0125: dq 0
f0125_end:
push qword [f6615nr]
pop qword [f6615f0125]
push qword [f6615f0125]
jmp f1125_end
f6615f1125: dq 0
f1125_end:
push qword [f6615nl]
pop qword [f6615f1125]
push qword [f6615f1125]
jmp f2125_end
f6615f2125: dq 0
f2125_end:
push qword [f6615ret]
pop qword [f6615f2125]
push qword [f6615f2125]
jmp read_texp_list_help
f6615_end:
mov rdi, 88
call malloc
mov qword [rax+8], f6615
mov rcx, [read_texp_list_helpret]
mov qword [rax+16], rcx
mov rcx, [read_texp_list_helpl]
mov qword [rax+24], rcx
mov rcx, [read_texp_list_helpr]
mov qword [rax+32], rcx
mov rcx, [read_texp_list_helptree]
mov qword [rax+40], rcx
mov rcx, [read_texp_list_helpnl]
mov qword [rax+48], rcx
mov rcx, [read_texp_list_helpnr]
mov qword [rax+56], rcx
mov rcx, [read_texp_list_helpt]
mov qword [rax+64], rcx
mov rcx, [read_texp_list_helptl]
mov qword [rax+72], rcx
mov rcx, [read_texp_list_helptr]
mov qword [rax+80], rcx
mov qword [rax], 10
push rax
pop qword [read_texp_list_helpf6025]
push qword [read_texp_list_helpf6025]
jmp f3125_end
read_texp_list_helpf3125: dq 0
f3125_end:
jmp f4125_end
read_texp_list_helpf4125: dq 0
f4125_end:
push qword [read_texp_list_helptl]
pop qword [read_texp_list_helpf4125]
push qword [read_texp_list_helpf4125]
jmp f5125_end
read_texp_list_helpf5125: dq 0
f5125_end:
jmp f6125_end
f6125: db `,`
db 0
f6125_end: push f6125
pop qword [read_texp_list_helpf5125]
push qword [read_texp_list_helpf5125]
call matches
push rax
pop qword [read_texp_list_helpf3125]
push qword [read_texp_list_helpf3125]
call if
push rax
pop qword [read_texp_list_helpf2615]
push qword [read_texp_list_helpret]
push qword [read_texp_list_helptree]
push qword [read_texp_list_helpnl]
push qword [read_texp_list_helpnr]
push qword [read_texp_list_helpt]
push qword [read_texp_list_helptl]
push qword [read_texp_list_helptr]
push qword [read_texp_list_helpf2615]
jmp f7125_end
read_texp_list_helpf7125: dq 0
f7125_end:
push qword [read_texp_list_helpr]
pop qword [read_texp_list_helpf7125]
push qword [read_texp_list_helpf7125]
jmp f0225_end
read_texp_list_helpf0225: dq 0
f0225_end:
push qword [read_texp_list_helpl]
pop qword [read_texp_list_helpf0225]
push qword [read_texp_list_helpf0225]
call read_texp
push rax
pop qword [read_texp_list_helpl]
pop qword [read_texp_list_helpr]
pop qword [read_texp_list_helptexp]
pop qword [read_texp_list_helpf2615]
pop qword [read_texp_list_helptr]
pop qword [read_texp_list_helptl]
pop qword [read_texp_list_helpt]
pop qword [read_texp_list_helpnr]
pop qword [read_texp_list_helpnl]
pop qword [read_texp_list_helptree]
pop qword [read_texp_list_helpret]
jmp f1225_end
read_texp_list_helpf1225: dq 0
f1225_end:
jmp f6715_end
f6715ret: dq 0
f6715tree: dq 0
f6715nl: dq 0
f6715nr: dq 0
f6715t: dq 0
f6715tl: dq 0
f6715tr: dq 0
f6715f2615: dq 0
f6715l: dq 0
f6715r: dq 0
f6715texp: dq 0
f6715break: dq 0
f6715:
pop qword [f6715ret]
pop qword [f6715tree]
pop qword [f6715nl]
pop qword [f6715nr]
pop qword [f6715t]
pop qword [f6715tl]
pop qword [f6715tr]
pop qword [f6715f2615]
pop qword [f6715l]
pop qword [f6715r]
pop qword [f6715texp]
pop qword [f6715break]
jmp f2225_end
f6715f2225: dq 0
f2225_end:
push qword [f6715tree]
pop qword [f6715f2225]
push qword [f6715f2225]
jmp f3225_end
f6715f3225: dq 0
f3225_end:
push qword [f6715r]
pop qword [f6715f3225]
push qword [f6715f3225]
jmp f4225_end
f6715f4225: dq 0
f4225_end:
push qword [f6715l]
pop qword [f6715f4225]
push qword [f6715f4225]
jmp f5225_end
f6715f5225: dq 0
f5225_end:
push qword [f6715ret]
pop qword [f6715f5225]
push qword [f6715f5225]
jmp return
f6715_end:
mov rdi, 104
call malloc
mov qword [rax+8], f6715
mov rcx, [read_texp_list_helpret]
mov qword [rax+16], rcx
mov rcx, [read_texp_list_helptree]
mov qword [rax+24], rcx
mov rcx, [read_texp_list_helpnl]
mov qword [rax+32], rcx
mov rcx, [read_texp_list_helpnr]
mov qword [rax+40], rcx
mov rcx, [read_texp_list_helpt]
mov qword [rax+48], rcx
mov rcx, [read_texp_list_helptl]
mov qword [rax+56], rcx
mov rcx, [read_texp_list_helptr]
mov qword [rax+64], rcx
mov rcx, [read_texp_list_helpf2615]
mov qword [rax+72], rcx
mov rcx, [read_texp_list_helpl]
mov qword [rax+80], rcx
mov rcx, [read_texp_list_helpr]
mov qword [rax+88], rcx
mov rcx, [read_texp_list_helptexp]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [read_texp_list_helpf1225]
push qword [read_texp_list_helpf1225]
jmp f6225_end
read_texp_list_helpf6225: dq 0
f6225_end:
jmp f7225_end
read_texp_list_helpf7225: dq 0
f7225_end:
push 0
pop qword [read_texp_list_helpf7225]
push qword [read_texp_list_helpf7225]
jmp f0325_end
read_texp_list_helpf0325: dq 0
f0325_end:
push qword [read_texp_list_helptexp]
pop qword [read_texp_list_helpf0325]
push qword [read_texp_list_helpf0325]
call eq
push rax
pop qword [read_texp_list_helpf6225]
push qword [read_texp_list_helpf6225]
call if
push rax
pop qword [read_texp_list_helpf2715]
push qword [read_texp_list_helpret]
push qword [read_texp_list_helptree]
push qword [read_texp_list_helpnl]
push qword [read_texp_list_helpnr]
push qword [read_texp_list_helpt]
push qword [read_texp_list_helptl]
push qword [read_texp_list_helptr]
push qword [read_texp_list_helpf2615]
push qword [read_texp_list_helpl]
push qword [read_texp_list_helpr]
push qword [read_texp_list_helptexp]
push qword [read_texp_list_helpf2715]
jmp f1325_end
read_texp_list_helpf1325: dq 0
f1325_end:
push 0
pop qword [read_texp_list_helpf1325]
push qword [read_texp_list_helpf1325]
jmp f2325_end
read_texp_list_helpf2325: dq 0
f2325_end:
push qword [read_texp_list_helptexp]
pop qword [read_texp_list_helpf2325]
push qword [read_texp_list_helpf2325]
call make_leaf
push rax
pop qword [read_texp_list_helpleaf]
pop qword [read_texp_list_helpf2715]
pop qword [read_texp_list_helptexp]
pop qword [read_texp_list_helpr]
pop qword [read_texp_list_helpl]
pop qword [read_texp_list_helpf2615]
pop qword [read_texp_list_helptr]
pop qword [read_texp_list_helptl]
pop qword [read_texp_list_helpt]
pop qword [read_texp_list_helpnr]
pop qword [read_texp_list_helpnl]
pop qword [read_texp_list_helptree]
pop qword [read_texp_list_helpret]
push qword [read_texp_list_helpret]
push qword [read_texp_list_helpnl]
push qword [read_texp_list_helpnr]
push qword [read_texp_list_helpt]
push qword [read_texp_list_helptl]
push qword [read_texp_list_helptr]
push qword [read_texp_list_helpf2615]
push qword [read_texp_list_helpl]
push qword [read_texp_list_helpr]
push qword [read_texp_list_helptexp]
push qword [read_texp_list_helpf2715]
push qword [read_texp_list_helpleaf]
jmp f3325_end
read_texp_list_helpf3325: dq 0
f3325_end:
push qword [read_texp_list_helpleaf]
pop qword [read_texp_list_helpf3325]
push qword [read_texp_list_helpf3325]
jmp f4325_end
read_texp_list_helpf4325: dq 0
f4325_end:
push qword [read_texp_list_helptree]
pop qword [read_texp_list_helpf4325]
push qword [read_texp_list_helpf4325]
call make_internal
push rax
pop qword [read_texp_list_helptree]
pop qword [read_texp_list_helpleaf]
pop qword [read_texp_list_helpf2715]
pop qword [read_texp_list_helptexp]
pop qword [read_texp_list_helpr]
pop qword [read_texp_list_helpl]
pop qword [read_texp_list_helpf2615]
pop qword [read_texp_list_helptr]
pop qword [read_texp_list_helptl]
pop qword [read_texp_list_helpt]
pop qword [read_texp_list_helpnr]
pop qword [read_texp_list_helpnl]
pop qword [read_texp_list_helpret]
jmp f5325_end
read_texp_list_helpf5325: dq 0
f5325_end:
push qword [read_texp_list_helptree]
pop qword [read_texp_list_helpf5325]
push qword [read_texp_list_helpf5325]
jmp f6325_end
read_texp_list_helpf6325: dq 0
f6325_end:
push qword [read_texp_list_helpr]
pop qword [read_texp_list_helpf6325]
push qword [read_texp_list_helpf6325]
jmp f7325_end
read_texp_list_helpf7325: dq 0
f7325_end:
push qword [read_texp_list_helpl]
pop qword [read_texp_list_helpf7325]
push qword [read_texp_list_helpf7325]
jmp f0425_end
read_texp_list_helpf0425: dq 0
f0425_end:
push qword [read_texp_list_helpret]
pop qword [read_texp_list_helpf0425]
push qword [read_texp_list_helpf0425]
jmp read_texp_list_help
read_texp_list_help_end:
jmp print_call_exp_args_end
print_call_exp_argsret: dq 0
print_call_exp_argsfl: dq 0
print_call_exp_argsfr: dq 0
print_call_exp_argsold_context: dq 0
print_call_exp_argsgl: dq 0
print_call_exp_argsgr: dq 0
print_call_exp_argsop_list: dq 0
print_call_exp_argsf2425: dq 0
print_call_exp_args:
pop qword [print_call_exp_argsret]
pop qword [print_call_exp_argsfl]
pop qword [print_call_exp_argsfr]
pop qword [print_call_exp_argsold_context]
pop qword [print_call_exp_argsgl]
pop qword [print_call_exp_argsgr]
pop qword [print_call_exp_argsop_list]
push qword [print_call_exp_argsret]
push qword [print_call_exp_argsfl]
push qword [print_call_exp_argsfr]
push qword [print_call_exp_argsold_context]
push qword [print_call_exp_argsgl]
push qword [print_call_exp_argsgr]
push qword [print_call_exp_argsop_list]
jmp f2525_end
print_call_exp_argsf2525: dq 0
f2525_end:
jmp f3425_end
f3425ret: dq 0
f3425fl: dq 0
f3425fr: dq 0
f3425old_context: dq 0
f3425gl: dq 0
f3425gr: dq 0
f3425op_list: dq 0
f3425call_exp: dq 0
f3425r: dq 0
f3425il: dq 0
f3425ir: dq 0
f3425f4425: dq 0
f3425f5425: dq 0
f3425f6425: dq 0
f3425f3525: dq 0
f3425:
pop rax
pop qword [f3425ret]
pop qword [f3425fl]
pop qword [f3425fr]
pop qword [f3425old_context]
pop qword [f3425gl]
pop qword [f3425gr]
pop qword [f3425op_list]
pop qword [f3425call_exp]
pop qword [f3425r]
push rax
mov [f3425f3525], rsp
push qword [f3425ret]
push qword [f3425fl]
push qword [f3425fr]
push qword [f3425old_context]
push qword [f3425gl]
push qword [f3425gr]
push qword [f3425op_list]
push qword [f3425call_exp]
push qword [f3425r]
push qword [f3425f3525]
call gen_label
push rax
pop qword [f3425il]
pop qword [f3425ir]
pop qword [f3425f3525]
pop qword [f3425r]
pop qword [f3425call_exp]
pop qword [f3425op_list]
pop qword [f3425gr]
pop qword [f3425gl]
pop qword [f3425old_context]
pop qword [f3425fr]
pop qword [f3425fl]
pop qword [f3425ret]
push qword [f3425ret]
push qword [f3425fl]
push qword [f3425fr]
push qword [f3425old_context]
push qword [f3425gl]
push qword [f3425gr]
push qword [f3425op_list]
push qword [f3425call_exp]
push qword [f3425r]
push qword [f3425f3525]
push qword [f3425il]
push qword [f3425ir]
jmp f4525_end
f3425f4525: dq 0
f4525_end:
push qword [f3425ir]
pop qword [f3425f4525]
push qword [f3425f4525]
jmp f5525_end
f3425f5525: dq 0
f5525_end:
push qword [f3425il]
pop qword [f3425f5525]
push qword [f3425f5525]
jmp f6525_end
f3425f6525: dq 0
f6525_end:
push qword [f3425ir]
pop qword [f3425f6525]
push qword [f3425f6525]
jmp f7525_end
f3425f7525: dq 0
f7525_end:
push qword [f3425il]
pop qword [f3425f7525]
push qword [f3425f7525]
jmp f0625_end
f3425f0625: dq 0
f0625_end:
push qword [f3425fr]
pop qword [f3425f0625]
push qword [f3425f0625]
jmp f1625_end
f3425f1625: dq 0
f1625_end:
push qword [f3425fl]
pop qword [f3425f1625]
push qword [f3425f1625]
jmp f2625_end
f3425f2625: dq 0
f2625_end:
push qword [f3425ir]
pop qword [f3425f2625]
push qword [f3425f2625]
jmp f3625_end
f3425f3625: dq 0
f3625_end:
push qword [f3425il]
pop qword [f3425f3625]
push qword [f3425f3625]
jmp f4625_end
f3425f4625: dq 0
f4625_end:
jmp f5625_end
f5625: db `jmp {}_end\n{}{}: dq 0\n{}_end:\n`
db 0
f5625_end: push f5625
pop qword [f3425f4625]
push qword [f3425f4625]
call printf
push rax
pop qword [f3425f4425]
pop qword [f3425ir]
pop qword [f3425il]
pop qword [f3425f3525]
pop qword [f3425r]
pop qword [f3425call_exp]
pop qword [f3425op_list]
pop qword [f3425gr]
pop qword [f3425gl]
pop qword [f3425old_context]
pop qword [f3425fr]
pop qword [f3425fl]
pop qword [f3425ret]
push qword [f3425ret]
push qword [f3425fl]
push qword [f3425fr]
push qword [f3425old_context]
push qword [f3425gl]
push qword [f3425gr]
push qword [f3425op_list]
push qword [f3425call_exp]
push qword [f3425r]
push qword [f3425f3525]
push qword [f3425il]
push qword [f3425ir]
push qword [f3425f4425]
jmp f6625_end
f3425f6625: dq 0
f6625_end:
push qword [f3425call_exp]
pop qword [f3425f6625]
push qword [f3425f6625]
jmp f7625_end
f3425f7625: dq 0
f7625_end:
push qword [f3425gr]
pop qword [f3425f7625]
push qword [f3425f7625]
jmp f0725_end
f3425f0725: dq 0
f0725_end:
push qword [f3425gl]
pop qword [f3425f0725]
push qword [f3425f0725]
jmp f1725_end
f3425f1725: dq 0
f1725_end:
push qword [f3425ret]
push qword [f3425fl]
push qword [f3425fr]
push qword [f3425old_context]
push qword [f3425gl]
push qword [f3425gr]
push qword [f3425op_list]
push qword [f3425call_exp]
push qword [f3425r]
push qword [f3425f3525]
push qword [f3425il]
push qword [f3425ir]
push qword [f3425f4425]
jmp f2725_end
f3425f2725: dq 0
f2725_end:
push qword [f3425ir]
pop qword [f3425f2725]
push qword [f3425f2725]
jmp f3725_end
f3425f3725: dq 0
f3725_end:
push qword [f3425il]
pop qword [f3425f3725]
push qword [f3425f3725]
call make_leaf
push rax
pop qword [f3425f1725]
pop qword [f3425f4425]
pop qword [f3425ir]
pop qword [f3425il]
pop qword [f3425f3525]
pop qword [f3425r]
pop qword [f3425call_exp]
pop qword [f3425op_list]
pop qword [f3425gr]
pop qword [f3425gl]
pop qword [f3425old_context]
pop qword [f3425fr]
pop qword [f3425fl]
pop qword [f3425ret]
push qword [f3425f1725]
jmp f4725_end
f3425f4725: dq 0
f4725_end:
push qword [f3425old_context]
pop qword [f3425f4725]
push qword [f3425f4725]
jmp f5725_end
f3425f5725: dq 0
f5725_end:
push qword [f3425fr]
pop qword [f3425f5725]
push qword [f3425f5725]
jmp f6725_end
f3425f6725: dq 0
f6725_end:
push qword [f3425fl]
pop qword [f3425f6725]
push qword [f3425f6725]
call print_call_expression
push rax
pop qword [f3425f5425]
pop qword [f3425f4425]
pop qword [f3425ir]
pop qword [f3425il]
pop qword [f3425f3525]
pop qword [f3425r]
pop qword [f3425call_exp]
pop qword [f3425op_list]
pop qword [f3425gr]
pop qword [f3425gl]
pop qword [f3425old_context]
pop qword [f3425fr]
pop qword [f3425fl]
pop qword [f3425ret]
push qword [f3425ret]
push qword [f3425fl]
push qword [f3425fr]
push qword [f3425old_context]
push qword [f3425gl]
push qword [f3425gr]
push qword [f3425op_list]
push qword [f3425call_exp]
push qword [f3425r]
push qword [f3425f3525]
push qword [f3425il]
push qword [f3425ir]
push qword [f3425f4425]
push qword [f3425f5425]
jmp f7725_end
f3425f7725: dq 0
f7725_end:
push qword [f3425ir]
pop qword [f3425f7725]
push qword [f3425f7725]
jmp f0035_end
f3425f0035: dq 0
f0035_end:
push qword [f3425il]
pop qword [f3425f0035]
push qword [f3425f0035]
jmp f1035_end
f3425f1035: dq 0
f1035_end:
push qword [f3425fr]
pop qword [f3425f1035]
push qword [f3425f1035]
jmp f2035_end
f3425f2035: dq 0
f2035_end:
push qword [f3425fl]
pop qword [f3425f2035]
push qword [f3425f2035]
jmp f3035_end
f3425f3035: dq 0
f3035_end:
jmp f4035_end
f4035: db `push qword [{}{}]\n`
db 0
f4035_end: push f4035
pop qword [f3425f3035]
push qword [f3425f3035]
call printf
push rax
pop qword [f3425f6425]
pop qword [f3425f5425]
pop qword [f3425f4425]
pop qword [f3425ir]
pop qword [f3425il]
pop qword [f3425f3525]
pop qword [f3425r]
pop qword [f3425call_exp]
pop qword [f3425op_list]
pop qword [f3425gr]
pop qword [f3425gl]
pop qword [f3425old_context]
pop qword [f3425fr]
pop qword [f3425fl]
pop qword [f3425ret]
ret
f3425_end:
mov rdi, 72
call malloc
mov qword [rax+8], f3425
mov rcx, [print_call_exp_argsret]
mov qword [rax+16], rcx
mov rcx, [print_call_exp_argsfl]
mov qword [rax+24], rcx
mov rcx, [print_call_exp_argsfr]
mov qword [rax+32], rcx
mov rcx, [print_call_exp_argsold_context]
mov qword [rax+40], rcx
mov rcx, [print_call_exp_argsgl]
mov qword [rax+48], rcx
mov rcx, [print_call_exp_argsgr]
mov qword [rax+56], rcx
mov rcx, [print_call_exp_argsop_list]
mov qword [rax+64], rcx
mov qword [rax], 8
push rax
pop qword [print_call_exp_argsf2525]
push qword [print_call_exp_argsf2525]
jmp f5035_end
print_call_exp_argsf5035: dq 0
f5035_end:
push qword [print_call_exp_argsret]
push qword [print_call_exp_argsfl]
push qword [print_call_exp_argsfr]
push qword [print_call_exp_argsold_context]
push qword [print_call_exp_argsgl]
push qword [print_call_exp_argsgr]
push qword [print_call_exp_argsop_list]
jmp f6035_end
print_call_exp_argsf6035: dq 0
f6035_end:
push qword [print_call_exp_argsop_list]
pop qword [print_call_exp_argsf6035]
push qword [print_call_exp_argsf6035]
call reverse_tree
push rax
pop qword [print_call_exp_argsf5035]
pop qword [print_call_exp_argsop_list]
pop qword [print_call_exp_argsgr]
pop qword [print_call_exp_argsgl]
pop qword [print_call_exp_argsold_context]
pop qword [print_call_exp_argsfr]
pop qword [print_call_exp_argsfl]
pop qword [print_call_exp_argsret]
push qword [print_call_exp_argsf5035]
call map_tree
push rax
pop qword [print_call_exp_argsf2425]
pop qword [print_call_exp_argsop_list]
pop qword [print_call_exp_argsgr]
pop qword [print_call_exp_argsgl]
pop qword [print_call_exp_argsold_context]
pop qword [print_call_exp_argsfr]
pop qword [print_call_exp_argsfl]
pop qword [print_call_exp_argsret]
jmp f7035_end
print_call_exp_argsf7035: dq 0
f7035_end:
push 0
pop qword [print_call_exp_argsf7035]
push qword [print_call_exp_argsf7035]
jmp f0135_end
print_call_exp_argsf0135: dq 0
f0135_end:
push qword [print_call_exp_argsret]
pop qword [print_call_exp_argsf0135]
push qword [print_call_exp_argsf0135]
jmp return
print_call_exp_args_end:
jmp read_call_expression_args_end
read_call_expression_argsret: dq 0
read_call_expression_argsorig_l: dq 0
read_call_expression_argsr: dq 0
read_call_expression_argsl: dq 0
read_call_expression_argsnl: dq 0
read_call_expression_argsnr: dq 0
read_call_expression_argst: dq 0
read_call_expression_argstl: dq 0
read_call_expression_argstr: dq 0
read_call_expression_argsf2135: dq 0
read_call_expression_argsop_list: dq 0
read_call_expression_argsf0235: dq 0
read_call_expression_argsf6235: dq 0
read_call_expression_args:
pop qword [read_call_expression_argsret]
pop qword [read_call_expression_argsorig_l]
pop qword [read_call_expression_argsr]
push qword [read_call_expression_argsorig_l]
pop qword [read_call_expression_argsl]
push qword [read_call_expression_argsret]
push qword [read_call_expression_argsorig_l]
push qword [read_call_expression_argsr]
push qword [read_call_expression_argsl]
jmp f0435_end
read_call_expression_argsf0435: dq 0
f0435_end:
push qword [read_call_expression_argsr]
pop qword [read_call_expression_argsf0435]
push qword [read_call_expression_argsf0435]
jmp f1435_end
read_call_expression_argsf1435: dq 0
f1435_end:
push qword [read_call_expression_argsl]
pop qword [read_call_expression_argsf1435]
push qword [read_call_expression_argsf1435]
call read_token
push rax
pop qword [read_call_expression_argsnl]
pop qword [read_call_expression_argsnr]
pop qword [read_call_expression_argst]
pop qword [read_call_expression_argstl]
pop qword [read_call_expression_argstr]
pop qword [read_call_expression_argsl]
pop qword [read_call_expression_argsr]
pop qword [read_call_expression_argsorig_l]
pop qword [read_call_expression_argsret]
jmp f2435_end
read_call_expression_argsf2435: dq 0
f2435_end:
jmp f4135_end
f4135ret: dq 0
f4135orig_l: dq 0
f4135r: dq 0
f4135l: dq 0
f4135nl: dq 0
f4135nr: dq 0
f4135t: dq 0
f4135tl: dq 0
f4135tr: dq 0
f4135break: dq 0
f4135:
pop qword [f4135ret]
pop qword [f4135orig_l]
pop qword [f4135r]
pop qword [f4135l]
pop qword [f4135nl]
pop qword [f4135nr]
pop qword [f4135t]
pop qword [f4135tl]
pop qword [f4135tr]
pop qword [f4135break]
jmp f3435_end
f4135f3435: dq 0
f3435_end:
push 0
pop qword [f4135f3435]
push qword [f4135f3435]
jmp f4435_end
f4135f4435: dq 0
f4435_end:
push qword [f4135r]
pop qword [f4135f4435]
push qword [f4135f4435]
jmp f5435_end
f4135f5435: dq 0
f5435_end:
push qword [f4135orig_l]
pop qword [f4135f5435]
push qword [f4135f5435]
jmp f6435_end
f4135f6435: dq 0
f6435_end:
push qword [f4135ret]
pop qword [f4135f6435]
push qword [f4135f6435]
jmp return
f4135_end:
mov rdi, 88
call malloc
mov qword [rax+8], f4135
mov rcx, [read_call_expression_argsret]
mov qword [rax+16], rcx
mov rcx, [read_call_expression_argsorig_l]
mov qword [rax+24], rcx
mov rcx, [read_call_expression_argsr]
mov qword [rax+32], rcx
mov rcx, [read_call_expression_argsl]
mov qword [rax+40], rcx
mov rcx, [read_call_expression_argsnl]
mov qword [rax+48], rcx
mov rcx, [read_call_expression_argsnr]
mov qword [rax+56], rcx
mov rcx, [read_call_expression_argst]
mov qword [rax+64], rcx
mov rcx, [read_call_expression_argstl]
mov qword [rax+72], rcx
mov rcx, [read_call_expression_argstr]
mov qword [rax+80], rcx
mov qword [rax], 10
push rax
pop qword [read_call_expression_argsf2435]
push qword [read_call_expression_argsf2435]
jmp f7435_end
read_call_expression_argsf7435: dq 0
f7435_end:
push qword [read_call_expression_argsret]
push qword [read_call_expression_argsorig_l]
push qword [read_call_expression_argsr]
push qword [read_call_expression_argsl]
push qword [read_call_expression_argsnl]
push qword [read_call_expression_argsnr]
push qword [read_call_expression_argst]
push qword [read_call_expression_argstl]
push qword [read_call_expression_argstr]
jmp f0535_end
read_call_expression_argsf0535: dq 0
f0535_end:
push qword [read_call_expression_argsret]
push qword [read_call_expression_argsorig_l]
push qword [read_call_expression_argsr]
push qword [read_call_expression_argsl]
push qword [read_call_expression_argsnl]
push qword [read_call_expression_argsnr]
push qword [read_call_expression_argst]
push qword [read_call_expression_argstl]
push qword [read_call_expression_argstr]
jmp f1535_end
read_call_expression_argsf1535: dq 0
f1535_end:
push qword [read_call_expression_argstl]
pop qword [read_call_expression_argsf1535]
push qword [read_call_expression_argsf1535]
jmp f2535_end
read_call_expression_argsf2535: dq 0
f2535_end:
jmp f3535_end
f3535: db `(`
db 0
f3535_end: push f3535
pop qword [read_call_expression_argsf2535]
push qword [read_call_expression_argsf2535]
call matches
push rax
pop qword [read_call_expression_argsf0535]
pop qword [read_call_expression_argstr]
pop qword [read_call_expression_argstl]
pop qword [read_call_expression_argst]
pop qword [read_call_expression_argsnr]
pop qword [read_call_expression_argsnl]
pop qword [read_call_expression_argsl]
pop qword [read_call_expression_argsr]
pop qword [read_call_expression_argsorig_l]
pop qword [read_call_expression_argsret]
push qword [read_call_expression_argsf0535]
call not
push rax
pop qword [read_call_expression_argsf7435]
pop qword [read_call_expression_argstr]
pop qword [read_call_expression_argstl]
pop qword [read_call_expression_argst]
pop qword [read_call_expression_argsnr]
pop qword [read_call_expression_argsnl]
pop qword [read_call_expression_argsl]
pop qword [read_call_expression_argsr]
pop qword [read_call_expression_argsorig_l]
pop qword [read_call_expression_argsret]
push qword [read_call_expression_argsf7435]
call if
push rax
pop qword [read_call_expression_argsf2135]
push qword [read_call_expression_argsret]
push qword [read_call_expression_argsorig_l]
push qword [read_call_expression_argsnl]
push qword [read_call_expression_argsnr]
push qword [read_call_expression_argst]
push qword [read_call_expression_argstl]
push qword [read_call_expression_argstr]
push qword [read_call_expression_argsf2135]
jmp f4535_end
read_call_expression_argsf4535: dq 0
f4535_end:
push qword [read_call_expression_argsnr]
pop qword [read_call_expression_argsf4535]
push qword [read_call_expression_argsf4535]
jmp f5535_end
read_call_expression_argsf5535: dq 0
f5535_end:
push qword [read_call_expression_argsnl]
pop qword [read_call_expression_argsf5535]
push qword [read_call_expression_argsf5535]
call read_call_exp_list
push rax
pop qword [read_call_expression_argsl]
pop qword [read_call_expression_argsr]
pop qword [read_call_expression_argsop_list]
pop qword [read_call_expression_argsf2135]
pop qword [read_call_expression_argstr]
pop qword [read_call_expression_argstl]
pop qword [read_call_expression_argst]
pop qword [read_call_expression_argsnr]
pop qword [read_call_expression_argsnl]
pop qword [read_call_expression_argsorig_l]
pop qword [read_call_expression_argsret]
push qword [read_call_expression_argsret]
push qword [read_call_expression_argsorig_l]
push qword [read_call_expression_argsnl]
push qword [read_call_expression_argsnr]
push qword [read_call_expression_argsf2135]
push qword [read_call_expression_argsop_list]
jmp f6535_end
read_call_expression_argsf6535: dq 0
f6535_end:
push qword [read_call_expression_argsr]
pop qword [read_call_expression_argsf6535]
push qword [read_call_expression_argsf6535]
jmp f7535_end
read_call_expression_argsf7535: dq 0
f7535_end:
push qword [read_call_expression_argsl]
pop qword [read_call_expression_argsf7535]
push qword [read_call_expression_argsf7535]
call read_token
push rax
pop qword [read_call_expression_argsl]
pop qword [read_call_expression_argsr]
pop qword [read_call_expression_argst]
pop qword [read_call_expression_argstl]
pop qword [read_call_expression_argstr]
pop qword [read_call_expression_argsop_list]
pop qword [read_call_expression_argsf2135]
pop qword [read_call_expression_argsnr]
pop qword [read_call_expression_argsnl]
pop qword [read_call_expression_argsorig_l]
pop qword [read_call_expression_argsret]
jmp f0635_end
read_call_expression_argsf0635: dq 0
f0635_end:
jmp f2235_end
f2235ret: dq 0
f2235orig_l: dq 0
f2235nl: dq 0
f2235nr: dq 0
f2235f2135: dq 0
f2235op_list: dq 0
f2235l: dq 0
f2235r: dq 0
f2235t: dq 0
f2235tl: dq 0
f2235tr: dq 0
f2235break2: dq 0
f2235:
pop qword [f2235ret]
pop qword [f2235orig_l]
pop qword [f2235nl]
pop qword [f2235nr]
pop qword [f2235f2135]
pop qword [f2235op_list]
pop qword [f2235l]
pop qword [f2235r]
pop qword [f2235t]
pop qword [f2235tl]
pop qword [f2235tr]
pop qword [f2235break2]
jmp f1635_end
f2235f1635: dq 0
f1635_end:
push 0
pop qword [f2235f1635]
push qword [f2235f1635]
jmp f2635_end
f2235f2635: dq 0
f2635_end:
push qword [f2235r]
pop qword [f2235f2635]
push qword [f2235f2635]
jmp f3635_end
f2235f3635: dq 0
f3635_end:
push qword [f2235orig_l]
pop qword [f2235f3635]
push qword [f2235f3635]
jmp f4635_end
f2235f4635: dq 0
f4635_end:
push qword [f2235ret]
pop qword [f2235f4635]
push qword [f2235f4635]
jmp return
f2235_end:
mov rdi, 104
call malloc
mov qword [rax+8], f2235
mov rcx, [read_call_expression_argsret]
mov qword [rax+16], rcx
mov rcx, [read_call_expression_argsorig_l]
mov qword [rax+24], rcx
mov rcx, [read_call_expression_argsnl]
mov qword [rax+32], rcx
mov rcx, [read_call_expression_argsnr]
mov qword [rax+40], rcx
mov rcx, [read_call_expression_argsf2135]
mov qword [rax+48], rcx
mov rcx, [read_call_expression_argsop_list]
mov qword [rax+56], rcx
mov rcx, [read_call_expression_argsl]
mov qword [rax+64], rcx
mov rcx, [read_call_expression_argsr]
mov qword [rax+72], rcx
mov rcx, [read_call_expression_argst]
mov qword [rax+80], rcx
mov rcx, [read_call_expression_argstl]
mov qword [rax+88], rcx
mov rcx, [read_call_expression_argstr]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [read_call_expression_argsf0635]
push qword [read_call_expression_argsf0635]
jmp f5635_end
read_call_expression_argsf5635: dq 0
f5635_end:
push qword [read_call_expression_argsret]
push qword [read_call_expression_argsorig_l]
push qword [read_call_expression_argsnl]
push qword [read_call_expression_argsnr]
push qword [read_call_expression_argsf2135]
push qword [read_call_expression_argsop_list]
push qword [read_call_expression_argsl]
push qword [read_call_expression_argsr]
push qword [read_call_expression_argst]
push qword [read_call_expression_argstl]
push qword [read_call_expression_argstr]
jmp f6635_end
read_call_expression_argsf6635: dq 0
f6635_end:
push qword [read_call_expression_argsret]
push qword [read_call_expression_argsorig_l]
push qword [read_call_expression_argsnl]
push qword [read_call_expression_argsnr]
push qword [read_call_expression_argsf2135]
push qword [read_call_expression_argsop_list]
push qword [read_call_expression_argsl]
push qword [read_call_expression_argsr]
push qword [read_call_expression_argst]
push qword [read_call_expression_argstl]
push qword [read_call_expression_argstr]
jmp f7635_end
read_call_expression_argsf7635: dq 0
f7635_end:
push qword [read_call_expression_argstl]
pop qword [read_call_expression_argsf7635]
push qword [read_call_expression_argsf7635]
jmp f0735_end
read_call_expression_argsf0735: dq 0
f0735_end:
jmp f1735_end
f1735: db `)`
db 0
f1735_end: push f1735
pop qword [read_call_expression_argsf0735]
push qword [read_call_expression_argsf0735]
call matches
push rax
pop qword [read_call_expression_argsf6635]
pop qword [read_call_expression_argstr]
pop qword [read_call_expression_argstl]
pop qword [read_call_expression_argst]
pop qword [read_call_expression_argsr]
pop qword [read_call_expression_argsl]
pop qword [read_call_expression_argsop_list]
pop qword [read_call_expression_argsf2135]
pop qword [read_call_expression_argsnr]
pop qword [read_call_expression_argsnl]
pop qword [read_call_expression_argsorig_l]
pop qword [read_call_expression_argsret]
push qword [read_call_expression_argsf6635]
call not
push rax
pop qword [read_call_expression_argsf5635]
pop qword [read_call_expression_argstr]
pop qword [read_call_expression_argstl]
pop qword [read_call_expression_argst]
pop qword [read_call_expression_argsr]
pop qword [read_call_expression_argsl]
pop qword [read_call_expression_argsop_list]
pop qword [read_call_expression_argsf2135]
pop qword [read_call_expression_argsnr]
pop qword [read_call_expression_argsnl]
pop qword [read_call_expression_argsorig_l]
pop qword [read_call_expression_argsret]
push qword [read_call_expression_argsf5635]
call if
push rax
pop qword [read_call_expression_argsf0235]
push qword [read_call_expression_argsret]
push qword [read_call_expression_argsorig_l]
push qword [read_call_expression_argsf2135]
push qword [read_call_expression_argsop_list]
push qword [read_call_expression_argsl]
push qword [read_call_expression_argsr]
push qword [read_call_expression_argsf0235]
jmp f2735_end
read_call_expression_argsf2735: dq 0
f2735_end:
push qword [read_call_expression_argsr]
pop qword [read_call_expression_argsf2735]
push qword [read_call_expression_argsf2735]
jmp f3735_end
read_call_expression_argsf3735: dq 0
f3735_end:
push qword [read_call_expression_argsl]
pop qword [read_call_expression_argsf3735]
push qword [read_call_expression_argsf3735]
call read_token
push rax
pop qword [read_call_expression_argsnl]
pop qword [read_call_expression_argsnr]
pop qword [read_call_expression_argst]
pop qword [read_call_expression_argstl]
pop qword [read_call_expression_argstr]
pop qword [read_call_expression_argsf0235]
pop qword [read_call_expression_argsr]
pop qword [read_call_expression_argsl]
pop qword [read_call_expression_argsop_list]
pop qword [read_call_expression_argsf2135]
pop qword [read_call_expression_argsorig_l]
pop qword [read_call_expression_argsret]
jmp f4735_end
read_call_expression_argsf4735: dq 0
f4735_end:
jmp f2335_end
f2335ret: dq 0
f2335orig_l: dq 0
f2335f2135: dq 0
f2335op_list: dq 0
f2335l: dq 0
f2335r: dq 0
f2335f0235: dq 0
f2335nl: dq 0
f2335nr: dq 0
f2335t: dq 0
f2335tl: dq 0
f2335tr: dq 0
f2335break2: dq 0
f2335:
pop qword [f2335ret]
pop qword [f2335orig_l]
pop qword [f2335f2135]
pop qword [f2335op_list]
pop qword [f2335l]
pop qword [f2335r]
pop qword [f2335f0235]
pop qword [f2335nl]
pop qword [f2335nr]
pop qword [f2335t]
pop qword [f2335tl]
pop qword [f2335tr]
pop qword [f2335break2]
jmp f5735_end
f2335f5735: dq 0
f5735_end:
push 0
pop qword [f2335f5735]
push qword [f2335f5735]
jmp f6735_end
f2335f6735: dq 0
f6735_end:
push qword [f2335r]
pop qword [f2335f6735]
push qword [f2335f6735]
jmp f7735_end
f2335f7735: dq 0
f7735_end:
push qword [f2335orig_l]
pop qword [f2335f7735]
push qword [f2335f7735]
jmp f0045_end
f2335f0045: dq 0
f0045_end:
push qword [f2335ret]
pop qword [f2335f0045]
push qword [f2335f0045]
jmp return
f2335_end:
mov rdi, 112
call malloc
mov qword [rax+8], f2335
mov rcx, [read_call_expression_argsret]
mov qword [rax+16], rcx
mov rcx, [read_call_expression_argsorig_l]
mov qword [rax+24], rcx
mov rcx, [read_call_expression_argsf2135]
mov qword [rax+32], rcx
mov rcx, [read_call_expression_argsop_list]
mov qword [rax+40], rcx
mov rcx, [read_call_expression_argsl]
mov qword [rax+48], rcx
mov rcx, [read_call_expression_argsr]
mov qword [rax+56], rcx
mov rcx, [read_call_expression_argsf0235]
mov qword [rax+64], rcx
mov rcx, [read_call_expression_argsnl]
mov qword [rax+72], rcx
mov rcx, [read_call_expression_argsnr]
mov qword [rax+80], rcx
mov rcx, [read_call_expression_argst]
mov qword [rax+88], rcx
mov rcx, [read_call_expression_argstl]
mov qword [rax+96], rcx
mov rcx, [read_call_expression_argstr]
mov qword [rax+104], rcx
mov qword [rax], 13
push rax
pop qword [read_call_expression_argsf4735]
push qword [read_call_expression_argsf4735]
jmp f1045_end
read_call_expression_argsf1045: dq 0
f1045_end:
jmp f2045_end
read_call_expression_argsf2045: dq 0
f2045_end:
push qword [read_call_expression_argstl]
pop qword [read_call_expression_argsf2045]
push qword [read_call_expression_argsf2045]
jmp f3045_end
read_call_expression_argsf3045: dq 0
f3045_end:
jmp f4045_end
f4045: db `{`
db 0
f4045_end: push f4045
pop qword [read_call_expression_argsf3045]
push qword [read_call_expression_argsf3045]
call matches
push rax
pop qword [read_call_expression_argsf1045]
push qword [read_call_expression_argsf1045]
call if
push rax
pop qword [read_call_expression_argsf6235]
jmp f5045_end
read_call_expression_argsf5045: dq 0
f5045_end:
push qword [read_call_expression_argsop_list]
pop qword [read_call_expression_argsf5045]
push qword [read_call_expression_argsf5045]
jmp f6045_end
read_call_expression_argsf6045: dq 0
f6045_end:
push qword [read_call_expression_argsr]
pop qword [read_call_expression_argsf6045]
push qword [read_call_expression_argsf6045]
jmp f7045_end
read_call_expression_argsf7045: dq 0
f7045_end:
push qword [read_call_expression_argsl]
pop qword [read_call_expression_argsf7045]
push qword [read_call_expression_argsf7045]
jmp f0145_end
read_call_expression_argsf0145: dq 0
f0145_end:
push qword [read_call_expression_argsret]
pop qword [read_call_expression_argsf0145]
push qword [read_call_expression_argsf0145]
jmp return
read_call_expression_args_end:
jmp read_call_expression_end
read_call_expressionret: dq 0
read_call_expressionorig_l: dq 0
read_call_expressionr: dq 0
read_call_expressionl: dq 0
read_call_expressiontexp: dq 0
read_call_expressionf2145: dq 0
read_call_expressionop_list: dq 0
read_call_expressionf2245: dq 0
read_call_expression:
pop qword [read_call_expressionret]
pop qword [read_call_expressionorig_l]
pop qword [read_call_expressionr]
push qword [read_call_expressionorig_l]
pop qword [read_call_expressionl]
push qword [read_call_expressionret]
push qword [read_call_expressionorig_l]
jmp f5445_end
read_call_expressionf5445: dq 0
f5445_end:
push qword [read_call_expressionr]
pop qword [read_call_expressionf5445]
push qword [read_call_expressionf5445]
jmp f6445_end
read_call_expressionf6445: dq 0
f6445_end:
push qword [read_call_expressionl]
pop qword [read_call_expressionf6445]
push qword [read_call_expressionf6445]
call read_texp
push rax
pop qword [read_call_expressionl]
pop qword [read_call_expressionr]
pop qword [read_call_expressiontexp]
pop qword [read_call_expressionorig_l]
pop qword [read_call_expressionret]
jmp f7445_end
read_call_expressionf7445: dq 0
f7445_end:
jmp f6145_end
f6145ret: dq 0
f6145orig_l: dq 0
f6145l: dq 0
f6145r: dq 0
f6145texp: dq 0
f6145break: dq 0
f6145:
pop qword [f6145ret]
pop qword [f6145orig_l]
pop qword [f6145l]
pop qword [f6145r]
pop qword [f6145texp]
pop qword [f6145break]
jmp f0545_end
f6145f0545: dq 0
f0545_end:
push 0
pop qword [f6145f0545]
push qword [f6145f0545]
jmp f1545_end
f6145f1545: dq 0
f1545_end:
push qword [f6145r]
pop qword [f6145f1545]
push qword [f6145f1545]
jmp f2545_end
f6145f2545: dq 0
f2545_end:
push qword [f6145orig_l]
pop qword [f6145f2545]
push qword [f6145f2545]
jmp f3545_end
f6145f3545: dq 0
f3545_end:
push qword [f6145ret]
pop qword [f6145f3545]
push qword [f6145f3545]
jmp return
f6145_end:
mov rdi, 56
call malloc
mov qword [rax+8], f6145
mov rcx, [read_call_expressionret]
mov qword [rax+16], rcx
mov rcx, [read_call_expressionorig_l]
mov qword [rax+24], rcx
mov rcx, [read_call_expressionl]
mov qword [rax+32], rcx
mov rcx, [read_call_expressionr]
mov qword [rax+40], rcx
mov rcx, [read_call_expressiontexp]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [read_call_expressionf7445]
push qword [read_call_expressionf7445]
jmp f4545_end
read_call_expressionf4545: dq 0
f4545_end:
jmp f5545_end
read_call_expressionf5545: dq 0
f5545_end:
push 0
pop qword [read_call_expressionf5545]
push qword [read_call_expressionf5545]
jmp f6545_end
read_call_expressionf6545: dq 0
f6545_end:
push qword [read_call_expressiontexp]
pop qword [read_call_expressionf6545]
push qword [read_call_expressionf6545]
call eq
push rax
pop qword [read_call_expressionf4545]
push qword [read_call_expressionf4545]
call if
push rax
pop qword [read_call_expressionf2145]
push qword [read_call_expressionret]
push qword [read_call_expressionorig_l]
push qword [read_call_expressiontexp]
push qword [read_call_expressionf2145]
jmp f7545_end
read_call_expressionf7545: dq 0
f7545_end:
push qword [read_call_expressionr]
pop qword [read_call_expressionf7545]
push qword [read_call_expressionf7545]
jmp f0645_end
read_call_expressionf0645: dq 0
f0645_end:
push qword [read_call_expressionl]
pop qword [read_call_expressionf0645]
push qword [read_call_expressionf0645]
call read_call_expression_args
push rax
pop qword [read_call_expressionl]
pop qword [read_call_expressionr]
pop qword [read_call_expressionop_list]
pop qword [read_call_expressionf2145]
pop qword [read_call_expressiontexp]
pop qword [read_call_expressionorig_l]
pop qword [read_call_expressionret]
jmp f1645_end
read_call_expressionf1645: dq 0
f1645_end:
jmp f6245_end
f6245ret: dq 0
f6245orig_l: dq 0
f6245texp: dq 0
f6245f2145: dq 0
f6245l: dq 0
f6245r: dq 0
f6245op_list: dq 0
f6245break: dq 0
f6245:
pop qword [f6245ret]
pop qword [f6245orig_l]
pop qword [f6245texp]
pop qword [f6245f2145]
pop qword [f6245l]
pop qword [f6245r]
pop qword [f6245op_list]
pop qword [f6245break]
jmp f2645_end
f6245f2645: dq 0
f2645_end:
jmp f3345_end
f3345ret: dq 0
f3345orig_l: dq 0
f3345texp: dq 0
f3345f2145: dq 0
f3345l: dq 0
f3345r: dq 0
f3345op_list: dq 0
f3345break: dq 0
f3345t1: dq 0
f3345t2: dq 0
f3345:
pop qword [f3345ret]
pop qword [f3345orig_l]
pop qword [f3345texp]
pop qword [f3345f2145]
pop qword [f3345l]
pop qword [f3345r]
pop qword [f3345op_list]
pop qword [f3345break]
pop qword [f3345t1]
pop qword [f3345t2]
jmp f3645_end
f3345f3645: dq 0
f3645_end:
push qword [f3345texp]
pop qword [f3345f3645]
push qword [f3345f3645]
push qword [f3345t1]
jmp runtime_call
f3345_end:
mov rdi, 80
call malloc
mov qword [rax+8], f3345
mov rcx, [f6245ret]
mov qword [rax+16], rcx
mov rcx, [f6245orig_l]
mov qword [rax+24], rcx
mov rcx, [f6245texp]
mov qword [rax+32], rcx
mov rcx, [f6245f2145]
mov qword [rax+40], rcx
mov rcx, [f6245l]
mov qword [rax+48], rcx
mov rcx, [f6245r]
mov qword [rax+56], rcx
mov rcx, [f6245op_list]
mov qword [rax+64], rcx
mov rcx, [f6245break]
mov qword [rax+72], rcx
mov qword [rax], 9
push rax
pop qword [f6245f2645]
push qword [f6245f2645]
jmp f4645_end
f6245f4645: dq 0
f4645_end:
push qword [f6245r]
pop qword [f6245f4645]
push qword [f6245f4645]
jmp f5645_end
f6245f5645: dq 0
f5645_end:
push qword [f6245l]
pop qword [f6245f5645]
push qword [f6245f5645]
jmp f6645_end
f6245f6645: dq 0
f6645_end:
push qword [f6245ret]
pop qword [f6245f6645]
push qword [f6245f6645]
jmp return
f6245_end:
mov rdi, 72
call malloc
mov qword [rax+8], f6245
mov rcx, [read_call_expressionret]
mov qword [rax+16], rcx
mov rcx, [read_call_expressionorig_l]
mov qword [rax+24], rcx
mov rcx, [read_call_expressiontexp]
mov qword [rax+32], rcx
mov rcx, [read_call_expressionf2145]
mov qword [rax+40], rcx
mov rcx, [read_call_expressionl]
mov qword [rax+48], rcx
mov rcx, [read_call_expressionr]
mov qword [rax+56], rcx
mov rcx, [read_call_expressionop_list]
mov qword [rax+64], rcx
mov qword [rax], 8
push rax
pop qword [read_call_expressionf1645]
push qword [read_call_expressionf1645]
jmp f7645_end
read_call_expressionf7645: dq 0
f7645_end:
jmp f0745_end
read_call_expressionf0745: dq 0
f0745_end:
push 0
pop qword [read_call_expressionf0745]
push qword [read_call_expressionf0745]
jmp f1745_end
read_call_expressionf1745: dq 0
f1745_end:
push qword [read_call_expressionop_list]
pop qword [read_call_expressionf1745]
push qword [read_call_expressionf1745]
call eq
push rax
pop qword [read_call_expressionf7645]
push qword [read_call_expressionf7645]
call if
push rax
pop qword [read_call_expressionf2245]
jmp f2745_end
read_call_expressionf2745: dq 0
f2745_end:
jmp f1445_end
f1445ret: dq 0
f1445orig_l: dq 0
f1445texp: dq 0
f1445f2145: dq 0
f1445l: dq 0
f1445r: dq 0
f1445op_list: dq 0
f1445f2245: dq 0
f1445t1: dq 0
f1445t2: dq 0
f1445:
pop qword [f1445ret]
pop qword [f1445orig_l]
pop qword [f1445texp]
pop qword [f1445f2145]
pop qword [f1445l]
pop qword [f1445r]
pop qword [f1445op_list]
pop qword [f1445f2245]
pop qword [f1445t1]
pop qword [f1445t2]
jmp f3745_end
f1445f3745: dq 0
f3745_end:
push qword [f1445op_list]
pop qword [f1445f3745]
push qword [f1445f3745]
jmp f4745_end
f1445f4745: dq 0
f4745_end:
push qword [f1445texp]
pop qword [f1445f4745]
push qword [f1445f4745]
push qword [f1445t2]
jmp runtime_call
f1445_end:
mov rdi, 80
call malloc
mov qword [rax+8], f1445
mov rcx, [read_call_expressionret]
mov qword [rax+16], rcx
mov rcx, [read_call_expressionorig_l]
mov qword [rax+24], rcx
mov rcx, [read_call_expressiontexp]
mov qword [rax+32], rcx
mov rcx, [read_call_expressionf2145]
mov qword [rax+40], rcx
mov rcx, [read_call_expressionl]
mov qword [rax+48], rcx
mov rcx, [read_call_expressionr]
mov qword [rax+56], rcx
mov rcx, [read_call_expressionop_list]
mov qword [rax+64], rcx
mov rcx, [read_call_expressionf2245]
mov qword [rax+72], rcx
mov qword [rax], 9
push rax
pop qword [read_call_expressionf2745]
push qword [read_call_expressionf2745]
jmp f5745_end
read_call_expressionf5745: dq 0
f5745_end:
push qword [read_call_expressionr]
pop qword [read_call_expressionf5745]
push qword [read_call_expressionf5745]
jmp f6745_end
read_call_expressionf6745: dq 0
f6745_end:
push qword [read_call_expressionl]
pop qword [read_call_expressionf6745]
push qword [read_call_expressionf6745]
jmp f7745_end
read_call_expressionf7745: dq 0
f7745_end:
push qword [read_call_expressionret]
pop qword [read_call_expressionf7745]
push qword [read_call_expressionf7745]
jmp return
read_call_expression_end:
jmp print_call_expression_end
print_call_expressionret: dq 0
print_call_expressionfl: dq 0
print_call_expressionfr: dq 0
print_call_expressionold_context: dq 0
print_call_expressionids: dq 0
print_call_expressiongl: dq 0
print_call_expressiongr: dq 0
print_call_expressioncall_exp: dq 0
print_call_expressionf1055: dq 0
print_call_expression:
pop qword [print_call_expressionret]
pop qword [print_call_expressionfl]
pop qword [print_call_expressionfr]
pop qword [print_call_expressionold_context]
pop qword [print_call_expressionids]
pop qword [print_call_expressiongl]
pop qword [print_call_expressiongr]
pop qword [print_call_expressioncall_exp]
jmp f4555_end
print_call_expressionf4555: dq 0
f4555_end:
jmp f3055_end
f3055ret: dq 0
f3055fl: dq 0
f3055fr: dq 0
f3055old_context: dq 0
f3055ids: dq 0
f3055gl: dq 0
f3055gr: dq 0
f3055call_exp: dq 0
f3055break: dq 0
f3055:
pop qword [f3055ret]
pop qword [f3055fl]
pop qword [f3055fr]
pop qword [f3055old_context]
pop qword [f3055ids]
pop qword [f3055gl]
pop qword [f3055gr]
pop qword [f3055call_exp]
pop qword [f3055break]
jmp f5555_end
f3055f5555: dq 0
f5555_end:
push 0
pop qword [f3055f5555]
push qword [f3055f5555]
jmp f6555_end
f3055f6555: dq 0
f6555_end:
push qword [f3055ret]
pop qword [f3055f6555]
push qword [f3055f6555]
jmp return
f3055_end:
mov rdi, 80
call malloc
mov qword [rax+8], f3055
mov rcx, [print_call_expressionret]
mov qword [rax+16], rcx
mov rcx, [print_call_expressionfl]
mov qword [rax+24], rcx
mov rcx, [print_call_expressionfr]
mov qword [rax+32], rcx
mov rcx, [print_call_expressionold_context]
mov qword [rax+40], rcx
mov rcx, [print_call_expressionids]
mov qword [rax+48], rcx
mov rcx, [print_call_expressiongl]
mov qword [rax+56], rcx
mov rcx, [print_call_expressiongr]
mov qword [rax+64], rcx
mov rcx, [print_call_expressioncall_exp]
mov qword [rax+72], rcx
mov qword [rax], 9
push rax
pop qword [print_call_expressionf4555]
push qword [print_call_expressionf4555]
jmp f7555_end
print_call_expressionf7555: dq 0
f7555_end:
push qword [print_call_expressionret]
push qword [print_call_expressionfl]
push qword [print_call_expressionfr]
push qword [print_call_expressionold_context]
push qword [print_call_expressionids]
push qword [print_call_expressiongl]
push qword [print_call_expressiongr]
push qword [print_call_expressioncall_exp]
jmp f0655_end
print_call_expressionf0655: dq 0
f0655_end:
push 0
pop qword [print_call_expressionf0655]
push qword [print_call_expressionf0655]
jmp f1655_end
print_call_expressionf1655: dq 0
f1655_end:
push qword [print_call_expressioncall_exp]
pop qword [print_call_expressionf1655]
push qword [print_call_expressionf1655]
call eq
push rax
pop qword [print_call_expressionf7555]
pop qword [print_call_expressioncall_exp]
pop qword [print_call_expressiongr]
pop qword [print_call_expressiongl]
pop qword [print_call_expressionids]
pop qword [print_call_expressionold_context]
pop qword [print_call_expressionfr]
pop qword [print_call_expressionfl]
pop qword [print_call_expressionret]
push qword [print_call_expressionf7555]
call if
push rax
pop qword [print_call_expressionf1055]
jmp f2655_end
print_call_expressionf2655: dq 0
f2655_end:
jmp f4155_end
f4155ret: dq 0
f4155fl: dq 0
f4155fr: dq 0
f4155old_context: dq 0
f4155ids: dq 0
f4155gl: dq 0
f4155gr: dq 0
f4155call_exp: dq 0
f4155f1055: dq 0
f4155texp: dq 0
f4155op_list: dq 0
f4155context: dq 0
f4155f4255: dq 0
f4155al: dq 0
f4155ar: dq 0
f4155f7255: dq 0
f4155f0355: dq 0
f4155rev_context: dq 0
f4155f2455: dq 0
f4155f3455: dq 0
f4155f6455: dq 0
f4155:
pop qword [f4155ret]
pop qword [f4155fl]
pop qword [f4155fr]
pop qword [f4155old_context]
pop qword [f4155ids]
pop qword [f4155gl]
pop qword [f4155gr]
pop qword [f4155call_exp]
pop qword [f4155f1055]
pop qword [f4155texp]
pop qword [f4155op_list]
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
jmp f3655_end
f4155f3655: dq 0
f3655_end:
jmp f5155_end
f5155ret: dq 0
f5155fl: dq 0
f5155fr: dq 0
f5155old_context: dq 0
f5155ids: dq 0
f5155gl: dq 0
f5155gr: dq 0
f5155call_exp: dq 0
f5155f1055: dq 0
f5155texp: dq 0
f5155op_list: dq 0
f5155l: dq 0
f5155r: dq 0
f5155f6155: dq 0
f5155f4655: dq 0
f5155:
pop rax
pop qword [f5155ret]
pop qword [f5155fl]
pop qword [f5155fr]
pop qword [f5155old_context]
pop qword [f5155ids]
pop qword [f5155gl]
pop qword [f5155gr]
pop qword [f5155call_exp]
pop qword [f5155f1055]
pop qword [f5155texp]
pop qword [f5155op_list]
pop qword [f5155l]
pop qword [f5155r]
push rax
mov [f5155f4655], rsp
jmp f5655_end
f5155f5655: dq 0
f5655_end:
jmp f0255_end
f0255ret: dq 0
f0255fl: dq 0
f0255fr: dq 0
f0255old_context: dq 0
f0255ids: dq 0
f0255gl: dq 0
f0255gr: dq 0
f0255call_exp: dq 0
f0255f1055: dq 0
f0255texp: dq 0
f0255op_list: dq 0
f0255l: dq 0
f0255r: dq 0
f0255f4655: dq 0
f0255break: dq 0
f0255:
pop qword [f0255ret]
pop qword [f0255fl]
pop qword [f0255fr]
pop qword [f0255old_context]
pop qword [f0255ids]
pop qword [f0255gl]
pop qword [f0255gr]
pop qword [f0255call_exp]
pop qword [f0255f1055]
pop qword [f0255texp]
pop qword [f0255op_list]
pop qword [f0255l]
pop qword [f0255r]
pop qword [f0255f4655]
pop qword [f0255break]
mov rsp, [f0255f4655]
jmp f6655_end
f0255f6655: dq 0
f6655_end:
push qword [f0255ret]
push qword [f0255fl]
push qword [f0255fr]
push qword [f0255old_context]
push qword [f0255ids]
push qword [f0255gl]
push qword [f0255gr]
push qword [f0255call_exp]
push qword [f0255f1055]
push qword [f0255texp]
push qword [f0255op_list]
push qword [f0255l]
push qword [f0255r]
push qword [f0255f4655]
push qword [f0255break]
call make_nil
push rax
pop qword [f0255f6655]
pop qword [f0255break]
pop qword [f0255f4655]
pop qword [f0255r]
pop qword [f0255l]
pop qword [f0255op_list]
pop qword [f0255texp]
pop qword [f0255f1055]
pop qword [f0255call_exp]
pop qword [f0255gr]
pop qword [f0255gl]
pop qword [f0255ids]
pop qword [f0255old_context]
pop qword [f0255fr]
pop qword [f0255fl]
pop qword [f0255ret]
pop rax
push qword [f0255f6655]
push rax
pop rcx
pop rax
jmp rcx
f0255_end:
mov rdi, 128
call malloc
mov qword [rax+8], f0255
mov rcx, [f5155ret]
mov qword [rax+16], rcx
mov rcx, [f5155fl]
mov qword [rax+24], rcx
mov rcx, [f5155fr]
mov qword [rax+32], rcx
mov rcx, [f5155old_context]
mov qword [rax+40], rcx
mov rcx, [f5155ids]
mov qword [rax+48], rcx
mov rcx, [f5155gl]
mov qword [rax+56], rcx
mov rcx, [f5155gr]
mov qword [rax+64], rcx
mov rcx, [f5155call_exp]
mov qword [rax+72], rcx
mov rcx, [f5155f1055]
mov qword [rax+80], rcx
mov rcx, [f5155texp]
mov qword [rax+88], rcx
mov rcx, [f5155op_list]
mov qword [rax+96], rcx
mov rcx, [f5155l]
mov qword [rax+104], rcx
mov rcx, [f5155r]
mov qword [rax+112], rcx
mov rcx, [f5155f4655]
mov qword [rax+120], rcx
mov qword [rax], 15
push rax
pop qword [f5155f5655]
push qword [f5155f5655]
jmp f7655_end
f5155f7655: dq 0
f7655_end:
push qword [f5155ret]
push qword [f5155fl]
push qword [f5155fr]
push qword [f5155old_context]
push qword [f5155ids]
push qword [f5155gl]
push qword [f5155gr]
push qword [f5155call_exp]
push qword [f5155f1055]
push qword [f5155texp]
push qword [f5155op_list]
push qword [f5155l]
push qword [f5155r]
push qword [f5155f4655]
jmp f0755_end
f5155f0755: dq 0
f0755_end:
push qword [f5155r]
pop qword [f5155f0755]
push qword [f5155f0755]
jmp f1755_end
f5155f1755: dq 0
f1755_end:
push qword [f5155l]
pop qword [f5155f1755]
push qword [f5155f1755]
jmp f2755_end
f5155f2755: dq 0
f2755_end:
push qword [f5155ids]
pop qword [f5155f2755]
push qword [f5155f2755]
call search_tree
push rax
pop qword [f5155f7655]
pop qword [f5155f4655]
pop qword [f5155r]
pop qword [f5155l]
pop qword [f5155op_list]
pop qword [f5155texp]
pop qword [f5155f1055]
pop qword [f5155call_exp]
pop qword [f5155gr]
pop qword [f5155gl]
pop qword [f5155ids]
pop qword [f5155old_context]
pop qword [f5155fr]
pop qword [f5155fl]
pop qword [f5155ret]
push qword [f5155f7655]
call if
push rax
pop qword [f5155f6155]
mov rsp, [f5155f4655]
jmp f3755_end
f5155f3755: dq 0
f3755_end:
push qword [f5155ret]
push qword [f5155fl]
push qword [f5155fr]
push qword [f5155old_context]
push qword [f5155ids]
push qword [f5155gl]
push qword [f5155gr]
push qword [f5155call_exp]
push qword [f5155f1055]
push qword [f5155texp]
push qword [f5155op_list]
push qword [f5155l]
push qword [f5155r]
push qword [f5155f4655]
push qword [f5155f6155]
jmp f4755_end
f5155f4755: dq 0
f4755_end:
push qword [f5155r]
pop qword [f5155f4755]
push qword [f5155f4755]
jmp f5755_end
f5155f5755: dq 0
f5755_end:
push qword [f5155l]
pop qword [f5155f5755]
push qword [f5155f5755]
call make_leaf
push rax
pop qword [f5155f3755]
pop qword [f5155f6155]
pop qword [f5155f4655]
pop qword [f5155r]
pop qword [f5155l]
pop qword [f5155op_list]
pop qword [f5155texp]
pop qword [f5155f1055]
pop qword [f5155call_exp]
pop qword [f5155gr]
pop qword [f5155gl]
pop qword [f5155ids]
pop qword [f5155old_context]
pop qword [f5155fr]
pop qword [f5155fl]
pop qword [f5155ret]
pop rax
push qword [f5155f3755]
push rax
pop rcx
pop rax
jmp rcx
ret
f5155_end:
mov rdi, 104
call malloc
mov qword [rax+8], f5155
mov rcx, [f4155ret]
mov qword [rax+16], rcx
mov rcx, [f4155fl]
mov qword [rax+24], rcx
mov rcx, [f4155fr]
mov qword [rax+32], rcx
mov rcx, [f4155old_context]
mov qword [rax+40], rcx
mov rcx, [f4155ids]
mov qword [rax+48], rcx
mov rcx, [f4155gl]
mov qword [rax+56], rcx
mov rcx, [f4155gr]
mov qword [rax+64], rcx
mov rcx, [f4155call_exp]
mov qword [rax+72], rcx
mov rcx, [f4155f1055]
mov qword [rax+80], rcx
mov rcx, [f4155texp]
mov qword [rax+88], rcx
mov rcx, [f4155op_list]
mov qword [rax+96], rcx
mov qword [rax], 12
push rax
pop qword [f4155f3655]
push qword [f4155f3655]
jmp f6755_end
f4155f6755: dq 0
f6755_end:
push qword [f4155old_context]
pop qword [f4155f6755]
push qword [f4155f6755]
call map_tree
push rax
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
push qword [f4155context]
jmp f7755_end
f4155f7755: dq 0
f7755_end:
jmp f5255_end
f5255ret: dq 0
f5255fl: dq 0
f5255fr: dq 0
f5255old_context: dq 0
f5255ids: dq 0
f5255gl: dq 0
f5255gr: dq 0
f5255call_exp: dq 0
f5255f1055: dq 0
f5255texp: dq 0
f5255op_list: dq 0
f5255context: dq 0
f5255l: dq 0
f5255r: dq 0
f5255f0065: dq 0
f5255:
pop rax
pop qword [f5255ret]
pop qword [f5255fl]
pop qword [f5255fr]
pop qword [f5255old_context]
pop qword [f5255ids]
pop qword [f5255gl]
pop qword [f5255gr]
pop qword [f5255call_exp]
pop qword [f5255f1055]
pop qword [f5255texp]
pop qword [f5255op_list]
pop qword [f5255context]
pop qword [f5255l]
pop qword [f5255r]
push rax
mov [f5255f0065], rsp
mov rsp, [f5255f0065]
jmp f1065_end
f5255f1065: dq 0
f1065_end:
push qword [f5255ret]
push qword [f5255fl]
push qword [f5255fr]
push qword [f5255old_context]
push qword [f5255ids]
push qword [f5255gl]
push qword [f5255gr]
push qword [f5255call_exp]
push qword [f5255f1055]
push qword [f5255texp]
push qword [f5255op_list]
push qword [f5255context]
push qword [f5255l]
push qword [f5255r]
push qword [f5255f0065]
jmp f2065_end
f5255f2065: dq 0
f2065_end:
push qword [f5255r]
pop qword [f5255f2065]
push qword [f5255f2065]
jmp f3065_end
f5255f3065: dq 0
f3065_end:
push qword [f5255l]
pop qword [f5255f3065]
push qword [f5255f3065]
jmp f4065_end
f5255f4065: dq 0
f4065_end:
push qword [f5255fr]
pop qword [f5255f4065]
push qword [f5255f4065]
jmp f5065_end
f5255f5065: dq 0
f5065_end:
push qword [f5255fl]
pop qword [f5255f5065]
push qword [f5255f5065]
jmp f6065_end
f5255f6065: dq 0
f6065_end:
jmp f7065_end
f7065: db `push qword [{}{}]\n`
db 0
f7065_end: push f7065
pop qword [f5255f6065]
push qword [f5255f6065]
call printf
push rax
pop qword [f5255f1065]
pop qword [f5255f0065]
pop qword [f5255r]
pop qword [f5255l]
pop qword [f5255context]
pop qword [f5255op_list]
pop qword [f5255texp]
pop qword [f5255f1055]
pop qword [f5255call_exp]
pop qword [f5255gr]
pop qword [f5255gl]
pop qword [f5255ids]
pop qword [f5255old_context]
pop qword [f5255fr]
pop qword [f5255fl]
pop qword [f5255ret]
pop rax
push qword [f5255f1065]
push rax
pop rcx
pop rax
jmp rcx
ret
f5255_end:
mov rdi, 112
call malloc
mov qword [rax+8], f5255
mov rcx, [f4155ret]
mov qword [rax+16], rcx
mov rcx, [f4155fl]
mov qword [rax+24], rcx
mov rcx, [f4155fr]
mov qword [rax+32], rcx
mov rcx, [f4155old_context]
mov qword [rax+40], rcx
mov rcx, [f4155ids]
mov qword [rax+48], rcx
mov rcx, [f4155gl]
mov qword [rax+56], rcx
mov rcx, [f4155gr]
mov qword [rax+64], rcx
mov rcx, [f4155call_exp]
mov qword [rax+72], rcx
mov rcx, [f4155f1055]
mov qword [rax+80], rcx
mov rcx, [f4155texp]
mov qword [rax+88], rcx
mov rcx, [f4155op_list]
mov qword [rax+96], rcx
mov rcx, [f4155context]
mov qword [rax+104], rcx
mov qword [rax], 13
push rax
pop qword [f4155f7755]
push qword [f4155f7755]
jmp f0165_end
f4155f0165: dq 0
f0165_end:
push qword [f4155context]
pop qword [f4155f0165]
push qword [f4155f0165]
call map_tree
push rax
pop qword [f4155f4255]
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
push qword [f4155context]
push qword [f4155f4255]
jmp f1165_end
f4155f1165: dq 0
f1165_end:
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
push qword [f4155context]
push qword [f4155f4255]
jmp f2165_end
f4155f2165: dq 0
f2165_end:
push qword [f4155texp]
pop qword [f4155f2165]
push qword [f4155f2165]
call get_aexp_from_texp
push rax
pop qword [f4155f1165]
pop qword [f4155f4255]
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
push qword [f4155f1165]
call aexp_to_range
push rax
pop qword [f4155al]
pop qword [f4155ar]
pop qword [f4155f4255]
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
push qword [f4155context]
push qword [f4155f4255]
push qword [f4155al]
push qword [f4155ar]
jmp f3165_end
f4155f3165: dq 0
f3165_end:
push qword [f4155op_list]
pop qword [f4155f3165]
push qword [f4155f3165]
jmp f4165_end
f4155f4165: dq 0
f4165_end:
push qword [f4155gr]
pop qword [f4155f4165]
push qword [f4155f4165]
jmp f5165_end
f4155f5165: dq 0
f5165_end:
push qword [f4155gl]
pop qword [f4155f5165]
push qword [f4155f5165]
jmp f6165_end
f4155f6165: dq 0
f6165_end:
push qword [f4155old_context]
pop qword [f4155f6165]
push qword [f4155f6165]
jmp f7165_end
f4155f7165: dq 0
f7165_end:
push qword [f4155fr]
pop qword [f4155f7165]
push qword [f4155f7165]
jmp f0265_end
f4155f0265: dq 0
f0265_end:
push qword [f4155fl]
pop qword [f4155f0265]
push qword [f4155f0265]
call print_call_exp_args
push rax
pop qword [f4155f7255]
pop qword [f4155ar]
pop qword [f4155al]
pop qword [f4155f4255]
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
push qword [f4155context]
push qword [f4155f4255]
push qword [f4155al]
push qword [f4155ar]
push qword [f4155f7255]
jmp f1265_end
f4155f1265: dq 0
f1265_end:
jmp f6355_end
f6355ret: dq 0
f6355fl: dq 0
f6355fr: dq 0
f6355old_context: dq 0
f6355ids: dq 0
f6355gl: dq 0
f6355gr: dq 0
f6355call_exp: dq 0
f6355f1055: dq 0
f6355texp: dq 0
f6355op_list: dq 0
f6355context: dq 0
f6355f4255: dq 0
f6355al: dq 0
f6355ar: dq 0
f6355f7255: dq 0
f6355break: dq 0
f6355f7355: dq 0
f6355:
pop qword [f6355ret]
pop qword [f6355fl]
pop qword [f6355fr]
pop qword [f6355old_context]
pop qword [f6355ids]
pop qword [f6355gl]
pop qword [f6355gr]
pop qword [f6355call_exp]
pop qword [f6355f1055]
pop qword [f6355texp]
pop qword [f6355op_list]
pop qword [f6355context]
pop qword [f6355f4255]
pop qword [f6355al]
pop qword [f6355ar]
pop qword [f6355f7255]
pop qword [f6355break]
push qword [f6355ret]
push qword [f6355fl]
push qword [f6355fr]
push qword [f6355old_context]
push qword [f6355ids]
push qword [f6355gl]
push qword [f6355gr]
push qword [f6355call_exp]
push qword [f6355f1055]
push qword [f6355texp]
push qword [f6355op_list]
push qword [f6355context]
push qword [f6355f4255]
push qword [f6355al]
push qword [f6355ar]
push qword [f6355f7255]
push qword [f6355break]
jmp f2265_end
f6355f2265: dq 0
f2265_end:
push qword [f6355ar]
pop qword [f6355f2265]
push qword [f6355f2265]
jmp f3265_end
f6355f3265: dq 0
f3265_end:
push qword [f6355al]
pop qword [f6355f3265]
push qword [f6355f3265]
jmp f4265_end
f6355f4265: dq 0
f4265_end:
jmp f5265_end
f5265: db `call {}\n`
db 0
f5265_end: push f5265
pop qword [f6355f4265]
push qword [f6355f4265]
call printf
push rax
pop qword [f6355f7355]
pop qword [f6355break]
pop qword [f6355f7255]
pop qword [f6355ar]
pop qword [f6355al]
pop qword [f6355f4255]
pop qword [f6355context]
pop qword [f6355op_list]
pop qword [f6355texp]
pop qword [f6355f1055]
pop qword [f6355call_exp]
pop qword [f6355gr]
pop qword [f6355gl]
pop qword [f6355ids]
pop qword [f6355old_context]
pop qword [f6355fr]
pop qword [f6355fl]
pop qword [f6355ret]
push qword [f6355break]
jmp runtime_call
f6355_end:
mov rdi, 144
call malloc
mov qword [rax+8], f6355
mov rcx, [f4155ret]
mov qword [rax+16], rcx
mov rcx, [f4155fl]
mov qword [rax+24], rcx
mov rcx, [f4155fr]
mov qword [rax+32], rcx
mov rcx, [f4155old_context]
mov qword [rax+40], rcx
mov rcx, [f4155ids]
mov qword [rax+48], rcx
mov rcx, [f4155gl]
mov qword [rax+56], rcx
mov rcx, [f4155gr]
mov qword [rax+64], rcx
mov rcx, [f4155call_exp]
mov qword [rax+72], rcx
mov rcx, [f4155f1055]
mov qword [rax+80], rcx
mov rcx, [f4155texp]
mov qword [rax+88], rcx
mov rcx, [f4155op_list]
mov qword [rax+96], rcx
mov rcx, [f4155context]
mov qword [rax+104], rcx
mov rcx, [f4155f4255]
mov qword [rax+112], rcx
mov rcx, [f4155al]
mov qword [rax+120], rcx
mov rcx, [f4155ar]
mov qword [rax+128], rcx
mov rcx, [f4155f7255]
mov qword [rax+136], rcx
mov qword [rax], 17
push rax
pop qword [f4155f1265]
push qword [f4155f1265]
jmp f6265_end
f4155f6265: dq 0
f6265_end:
jmp f1355_end
f1355ret: dq 0
f1355fl: dq 0
f1355fr: dq 0
f1355old_context: dq 0
f1355ids: dq 0
f1355gl: dq 0
f1355gr: dq 0
f1355call_exp: dq 0
f1355f1055: dq 0
f1355texp: dq 0
f1355op_list: dq 0
f1355context: dq 0
f1355f4255: dq 0
f1355al: dq 0
f1355ar: dq 0
f1355f7255: dq 0
f1355break: dq 0
f1355f2355: dq 0
f1355f3355: dq 0
f1355:
pop qword [f1355ret]
pop qword [f1355fl]
pop qword [f1355fr]
pop qword [f1355old_context]
pop qword [f1355ids]
pop qword [f1355gl]
pop qword [f1355gr]
pop qword [f1355call_exp]
pop qword [f1355f1055]
pop qword [f1355texp]
pop qword [f1355op_list]
pop qword [f1355context]
pop qword [f1355f4255]
pop qword [f1355al]
pop qword [f1355ar]
pop qword [f1355f7255]
pop qword [f1355break]
push qword [f1355ret]
push qword [f1355fl]
push qword [f1355fr]
push qword [f1355old_context]
push qword [f1355ids]
push qword [f1355gl]
push qword [f1355gr]
push qword [f1355call_exp]
push qword [f1355f1055]
push qword [f1355texp]
push qword [f1355op_list]
push qword [f1355context]
push qword [f1355f4255]
push qword [f1355al]
push qword [f1355ar]
push qword [f1355f7255]
push qword [f1355break]
jmp f7265_end
f1355f7265: dq 0
f7265_end:
push qword [f1355texp]
pop qword [f1355f7265]
push qword [f1355f7265]
jmp f0365_end
f1355f0365: dq 0
f0365_end:
push qword [f1355gr]
pop qword [f1355f0365]
push qword [f1355f0365]
jmp f1365_end
f1355f1365: dq 0
f1365_end:
push qword [f1355gl]
pop qword [f1355f1365]
push qword [f1355f1365]
jmp f2365_end
f1355f2365: dq 0
f2365_end:
push qword [f1355ret]
push qword [f1355fl]
push qword [f1355fr]
push qword [f1355old_context]
push qword [f1355ids]
push qword [f1355gl]
push qword [f1355gr]
push qword [f1355call_exp]
push qword [f1355f1055]
push qword [f1355texp]
push qword [f1355op_list]
push qword [f1355context]
push qword [f1355f4255]
push qword [f1355al]
push qword [f1355ar]
push qword [f1355f7255]
push qword [f1355break]
call make_nil
push rax
pop qword [f1355f2365]
pop qword [f1355break]
pop qword [f1355f7255]
pop qword [f1355ar]
pop qword [f1355al]
pop qword [f1355f4255]
pop qword [f1355context]
pop qword [f1355op_list]
pop qword [f1355texp]
pop qword [f1355f1055]
pop qword [f1355call_exp]
pop qword [f1355gr]
pop qword [f1355gl]
pop qword [f1355ids]
pop qword [f1355old_context]
pop qword [f1355fr]
pop qword [f1355fl]
pop qword [f1355ret]
push qword [f1355f2365]
jmp f3365_end
f1355f3365: dq 0
f3365_end:
push qword [f1355old_context]
pop qword [f1355f3365]
push qword [f1355f3365]
jmp f4365_end
f1355f4365: dq 0
f4365_end:
push qword [f1355fr]
pop qword [f1355f4365]
push qword [f1355f4365]
jmp f5365_end
f1355f5365: dq 0
f5365_end:
push qword [f1355fl]
pop qword [f1355f5365]
push qword [f1355f5365]
call print_texp
push rax
pop qword [f1355f2355]
pop qword [f1355break]
pop qword [f1355f7255]
pop qword [f1355ar]
pop qword [f1355al]
pop qword [f1355f4255]
pop qword [f1355context]
pop qword [f1355op_list]
pop qword [f1355texp]
pop qword [f1355f1055]
pop qword [f1355call_exp]
pop qword [f1355gr]
pop qword [f1355gl]
pop qword [f1355ids]
pop qword [f1355old_context]
pop qword [f1355fr]
pop qword [f1355fl]
pop qword [f1355ret]
push qword [f1355ret]
push qword [f1355fl]
push qword [f1355fr]
push qword [f1355old_context]
push qword [f1355ids]
push qword [f1355gl]
push qword [f1355gr]
push qword [f1355call_exp]
push qword [f1355f1055]
push qword [f1355texp]
push qword [f1355op_list]
push qword [f1355context]
push qword [f1355f4255]
push qword [f1355al]
push qword [f1355ar]
push qword [f1355f7255]
push qword [f1355break]
push qword [f1355f2355]
jmp f6365_end
f1355f6365: dq 0
f6365_end:
jmp f7365_end
f7365: db `call runtime_call_ret\n`
db 0
f7365_end: push f7365
pop qword [f1355f6365]
push qword [f1355f6365]
call printf
push rax
pop qword [f1355f3355]
pop qword [f1355f2355]
pop qword [f1355break]
pop qword [f1355f7255]
pop qword [f1355ar]
pop qword [f1355al]
pop qword [f1355f4255]
pop qword [f1355context]
pop qword [f1355op_list]
pop qword [f1355texp]
pop qword [f1355f1055]
pop qword [f1355call_exp]
pop qword [f1355gr]
pop qword [f1355gl]
pop qword [f1355ids]
pop qword [f1355old_context]
pop qword [f1355fr]
pop qword [f1355fl]
pop qword [f1355ret]
push qword [f1355break]
jmp runtime_call
f1355_end:
mov rdi, 144
call malloc
mov qword [rax+8], f1355
mov rcx, [f4155ret]
mov qword [rax+16], rcx
mov rcx, [f4155fl]
mov qword [rax+24], rcx
mov rcx, [f4155fr]
mov qword [rax+32], rcx
mov rcx, [f4155old_context]
mov qword [rax+40], rcx
mov rcx, [f4155ids]
mov qword [rax+48], rcx
mov rcx, [f4155gl]
mov qword [rax+56], rcx
mov rcx, [f4155gr]
mov qword [rax+64], rcx
mov rcx, [f4155call_exp]
mov qword [rax+72], rcx
mov rcx, [f4155f1055]
mov qword [rax+80], rcx
mov rcx, [f4155texp]
mov qword [rax+88], rcx
mov rcx, [f4155op_list]
mov qword [rax+96], rcx
mov rcx, [f4155context]
mov qword [rax+104], rcx
mov rcx, [f4155f4255]
mov qword [rax+112], rcx
mov rcx, [f4155al]
mov qword [rax+120], rcx
mov rcx, [f4155ar]
mov qword [rax+128], rcx
mov rcx, [f4155f7255]
mov qword [rax+136], rcx
mov qword [rax], 17
push rax
pop qword [f4155f6265]
push qword [f4155f6265]
jmp f0465_end
f4155f0465: dq 0
f0465_end:
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
push qword [f4155context]
push qword [f4155f4255]
push qword [f4155al]
push qword [f4155ar]
push qword [f4155f7255]
jmp f1465_end
f4155f1465: dq 0
f1465_end:
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
push qword [f4155context]
push qword [f4155f4255]
push qword [f4155al]
push qword [f4155ar]
push qword [f4155f7255]
jmp f2465_end
f4155f2465: dq 0
f2465_end:
push qword [f4155ar]
pop qword [f4155f2465]
push qword [f4155f2465]
jmp f3465_end
f4155f3465: dq 0
f3465_end:
push qword [f4155al]
pop qword [f4155f3465]
push qword [f4155f3465]
jmp f4465_end
f4155f4465: dq 0
f4465_end:
push qword [f4155old_context]
pop qword [f4155f4465]
push qword [f4155f4465]
call search_tree
push rax
pop qword [f4155f1465]
pop qword [f4155f7255]
pop qword [f4155ar]
pop qword [f4155al]
pop qword [f4155f4255]
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
push qword [f4155f1465]
jmp f5465_end
f4155f5465: dq 0
f5465_end:
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
push qword [f4155context]
push qword [f4155f4255]
push qword [f4155al]
push qword [f4155ar]
push qword [f4155f7255]
jmp f6465_end
f4155f6465: dq 0
f6465_end:
push qword [f4155ar]
pop qword [f4155f6465]
push qword [f4155f6465]
jmp f7465_end
f4155f7465: dq 0
f7465_end:
push qword [f4155al]
pop qword [f4155f7465]
push qword [f4155f7465]
call eq
push rax
pop qword [f4155f5465]
pop qword [f4155f7255]
pop qword [f4155ar]
pop qword [f4155al]
pop qword [f4155f4255]
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
push qword [f4155f5465]
call or
push rax
pop qword [f4155f0465]
pop qword [f4155f7255]
pop qword [f4155ar]
pop qword [f4155al]
pop qword [f4155f4255]
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
push qword [f4155f0465]
call if_else
push rax
pop qword [f4155f0355]
pop qword [f4155f7255]
pop qword [f4155ar]
pop qword [f4155al]
pop qword [f4155f4255]
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
push qword [f4155context]
push qword [f4155f4255]
push qword [f4155al]
push qword [f4155ar]
push qword [f4155f7255]
push qword [f4155f0355]
jmp f0565_end
f4155f0565: dq 0
f0565_end:
push qword [f4155context]
pop qword [f4155f0565]
push qword [f4155f0565]
call reverse_tree
push rax
pop qword [f4155rev_context]
pop qword [f4155f0355]
pop qword [f4155f7255]
pop qword [f4155ar]
pop qword [f4155al]
pop qword [f4155f4255]
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
push qword [f4155context]
push qword [f4155f4255]
push qword [f4155al]
push qword [f4155ar]
push qword [f4155f7255]
push qword [f4155f0355]
push qword [f4155rev_context]
jmp f1565_end
f4155f1565: dq 0
f1565_end:
jmp f2565_end
f2565: db `push rax\n`
db 0
f2565_end: push f2565
pop qword [f4155f1565]
push qword [f4155f1565]
call printf
push rax
pop qword [f4155f2455]
pop qword [f4155rev_context]
pop qword [f4155f0355]
pop qword [f4155f7255]
pop qword [f4155ar]
pop qword [f4155al]
pop qword [f4155f4255]
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
push qword [f4155context]
push qword [f4155f4255]
push qword [f4155al]
push qword [f4155ar]
push qword [f4155f7255]
push qword [f4155f0355]
push qword [f4155rev_context]
push qword [f4155f2455]
jmp f3565_end
f4155f3565: dq 0
f3565_end:
jmp f4455_end
f4455ret: dq 0
f4455fl: dq 0
f4455fr: dq 0
f4455old_context: dq 0
f4455ids: dq 0
f4455gl: dq 0
f4455gr: dq 0
f4455call_exp: dq 0
f4455f1055: dq 0
f4455texp: dq 0
f4455op_list: dq 0
f4455context: dq 0
f4455f4255: dq 0
f4455al: dq 0
f4455ar: dq 0
f4455f7255: dq 0
f4455f0355: dq 0
f4455rev_context: dq 0
f4455f2455: dq 0
f4455l: dq 0
f4455r: dq 0
f4455f4565: dq 0
f4455:
pop rax
pop qword [f4455ret]
pop qword [f4455fl]
pop qword [f4455fr]
pop qword [f4455old_context]
pop qword [f4455ids]
pop qword [f4455gl]
pop qword [f4455gr]
pop qword [f4455call_exp]
pop qword [f4455f1055]
pop qword [f4455texp]
pop qword [f4455op_list]
pop qword [f4455context]
pop qword [f4455f4255]
pop qword [f4455al]
pop qword [f4455ar]
pop qword [f4455f7255]
pop qword [f4455f0355]
pop qword [f4455rev_context]
pop qword [f4455f2455]
pop qword [f4455l]
pop qword [f4455r]
push rax
mov [f4455f4565], rsp
mov rsp, [f4455f4565]
jmp f5565_end
f4455f5565: dq 0
f5565_end:
push qword [f4455ret]
push qword [f4455fl]
push qword [f4455fr]
push qword [f4455old_context]
push qword [f4455ids]
push qword [f4455gl]
push qword [f4455gr]
push qword [f4455call_exp]
push qword [f4455f1055]
push qword [f4455texp]
push qword [f4455op_list]
push qword [f4455context]
push qword [f4455f4255]
push qword [f4455al]
push qword [f4455ar]
push qword [f4455f7255]
push qword [f4455f0355]
push qword [f4455rev_context]
push qword [f4455f2455]
push qword [f4455l]
push qword [f4455r]
push qword [f4455f4565]
jmp f6565_end
f4455f6565: dq 0
f6565_end:
push qword [f4455r]
pop qword [f4455f6565]
push qword [f4455f6565]
jmp f7565_end
f4455f7565: dq 0
f7565_end:
push qword [f4455l]
pop qword [f4455f7565]
push qword [f4455f7565]
jmp f0665_end
f4455f0665: dq 0
f0665_end:
push qword [f4455fr]
pop qword [f4455f0665]
push qword [f4455f0665]
jmp f1665_end
f4455f1665: dq 0
f1665_end:
push qword [f4455fl]
pop qword [f4455f1665]
push qword [f4455f1665]
jmp f2665_end
f4455f2665: dq 0
f2665_end:
jmp f3665_end
f3665: db `pop qword [{}{}]\n`
db 0
f3665_end: push f3665
pop qword [f4455f2665]
push qword [f4455f2665]
call printf
push rax
pop qword [f4455f5565]
pop qword [f4455f4565]
pop qword [f4455r]
pop qword [f4455l]
pop qword [f4455f2455]
pop qword [f4455rev_context]
pop qword [f4455f0355]
pop qword [f4455f7255]
pop qword [f4455ar]
pop qword [f4455al]
pop qword [f4455f4255]
pop qword [f4455context]
pop qword [f4455op_list]
pop qword [f4455texp]
pop qword [f4455f1055]
pop qword [f4455call_exp]
pop qword [f4455gr]
pop qword [f4455gl]
pop qword [f4455ids]
pop qword [f4455old_context]
pop qword [f4455fr]
pop qword [f4455fl]
pop qword [f4455ret]
pop rax
push qword [f4455f5565]
push rax
pop rcx
pop rax
jmp rcx
ret
f4455_end:
mov rdi, 168
call malloc
mov qword [rax+8], f4455
mov rcx, [f4155ret]
mov qword [rax+16], rcx
mov rcx, [f4155fl]
mov qword [rax+24], rcx
mov rcx, [f4155fr]
mov qword [rax+32], rcx
mov rcx, [f4155old_context]
mov qword [rax+40], rcx
mov rcx, [f4155ids]
mov qword [rax+48], rcx
mov rcx, [f4155gl]
mov qword [rax+56], rcx
mov rcx, [f4155gr]
mov qword [rax+64], rcx
mov rcx, [f4155call_exp]
mov qword [rax+72], rcx
mov rcx, [f4155f1055]
mov qword [rax+80], rcx
mov rcx, [f4155texp]
mov qword [rax+88], rcx
mov rcx, [f4155op_list]
mov qword [rax+96], rcx
mov rcx, [f4155context]
mov qword [rax+104], rcx
mov rcx, [f4155f4255]
mov qword [rax+112], rcx
mov rcx, [f4155al]
mov qword [rax+120], rcx
mov rcx, [f4155ar]
mov qword [rax+128], rcx
mov rcx, [f4155f7255]
mov qword [rax+136], rcx
mov rcx, [f4155f0355]
mov qword [rax+144], rcx
mov rcx, [f4155rev_context]
mov qword [rax+152], rcx
mov rcx, [f4155f2455]
mov qword [rax+160], rcx
mov qword [rax], 20
push rax
pop qword [f4155f3565]
push qword [f4155f3565]
jmp f4665_end
f4155f4665: dq 0
f4665_end:
push qword [f4155ids]
pop qword [f4155f4665]
push qword [f4155f4665]
call map_tree
push rax
pop qword [f4155f3455]
pop qword [f4155f2455]
pop qword [f4155rev_context]
pop qword [f4155f0355]
pop qword [f4155f7255]
pop qword [f4155ar]
pop qword [f4155al]
pop qword [f4155f4255]
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
push qword [f4155ret]
push qword [f4155fl]
push qword [f4155fr]
push qword [f4155old_context]
push qword [f4155ids]
push qword [f4155gl]
push qword [f4155gr]
push qword [f4155call_exp]
push qword [f4155f1055]
push qword [f4155texp]
push qword [f4155op_list]
push qword [f4155context]
push qword [f4155f4255]
push qword [f4155al]
push qword [f4155ar]
push qword [f4155f7255]
push qword [f4155f0355]
push qword [f4155rev_context]
push qword [f4155f2455]
push qword [f4155f3455]
jmp f5665_end
f4155f5665: dq 0
f5665_end:
jmp f7455_end
f7455ret: dq 0
f7455fl: dq 0
f7455fr: dq 0
f7455old_context: dq 0
f7455ids: dq 0
f7455gl: dq 0
f7455gr: dq 0
f7455call_exp: dq 0
f7455f1055: dq 0
f7455texp: dq 0
f7455op_list: dq 0
f7455context: dq 0
f7455f4255: dq 0
f7455al: dq 0
f7455ar: dq 0
f7455f7255: dq 0
f7455f0355: dq 0
f7455rev_context: dq 0
f7455f2455: dq 0
f7455f3455: dq 0
f7455l: dq 0
f7455r: dq 0
f7455f6665: dq 0
f7455:
pop rax
pop qword [f7455ret]
pop qword [f7455fl]
pop qword [f7455fr]
pop qword [f7455old_context]
pop qword [f7455ids]
pop qword [f7455gl]
pop qword [f7455gr]
pop qword [f7455call_exp]
pop qword [f7455f1055]
pop qword [f7455texp]
pop qword [f7455op_list]
pop qword [f7455context]
pop qword [f7455f4255]
pop qword [f7455al]
pop qword [f7455ar]
pop qword [f7455f7255]
pop qword [f7455f0355]
pop qword [f7455rev_context]
pop qword [f7455f2455]
pop qword [f7455f3455]
pop qword [f7455l]
pop qword [f7455r]
push rax
mov [f7455f6665], rsp
mov rsp, [f7455f6665]
jmp f7665_end
f7455f7665: dq 0
f7665_end:
push qword [f7455ret]
push qword [f7455fl]
push qword [f7455fr]
push qword [f7455old_context]
push qword [f7455ids]
push qword [f7455gl]
push qword [f7455gr]
push qword [f7455call_exp]
push qword [f7455f1055]
push qword [f7455texp]
push qword [f7455op_list]
push qword [f7455context]
push qword [f7455f4255]
push qword [f7455al]
push qword [f7455ar]
push qword [f7455f7255]
push qword [f7455f0355]
push qword [f7455rev_context]
push qword [f7455f2455]
push qword [f7455f3455]
push qword [f7455l]
push qword [f7455r]
push qword [f7455f6665]
jmp f0765_end
f7455f0765: dq 0
f0765_end:
push qword [f7455r]
pop qword [f7455f0765]
push qword [f7455f0765]
jmp f1765_end
f7455f1765: dq 0
f1765_end:
push qword [f7455l]
pop qword [f7455f1765]
push qword [f7455f1765]
jmp f2765_end
f7455f2765: dq 0
f2765_end:
push qword [f7455fr]
pop qword [f7455f2765]
push qword [f7455f2765]
jmp f3765_end
f7455f3765: dq 0
f3765_end:
push qword [f7455fl]
pop qword [f7455f3765]
push qword [f7455f3765]
jmp f4765_end
f7455f4765: dq 0
f4765_end:
jmp f5765_end
f5765: db `pop qword [{}{}]\n`
db 0
f5765_end: push f5765
pop qword [f7455f4765]
push qword [f7455f4765]
call printf
push rax
pop qword [f7455f7665]
pop qword [f7455f6665]
pop qword [f7455r]
pop qword [f7455l]
pop qword [f7455f3455]
pop qword [f7455f2455]
pop qword [f7455rev_context]
pop qword [f7455f0355]
pop qword [f7455f7255]
pop qword [f7455ar]
pop qword [f7455al]
pop qword [f7455f4255]
pop qword [f7455context]
pop qword [f7455op_list]
pop qword [f7455texp]
pop qword [f7455f1055]
pop qword [f7455call_exp]
pop qword [f7455gr]
pop qword [f7455gl]
pop qword [f7455ids]
pop qword [f7455old_context]
pop qword [f7455fr]
pop qword [f7455fl]
pop qword [f7455ret]
pop rax
push qword [f7455f7665]
push rax
pop rcx
pop rax
jmp rcx
ret
f7455_end:
mov rdi, 176
call malloc
mov qword [rax+8], f7455
mov rcx, [f4155ret]
mov qword [rax+16], rcx
mov rcx, [f4155fl]
mov qword [rax+24], rcx
mov rcx, [f4155fr]
mov qword [rax+32], rcx
mov rcx, [f4155old_context]
mov qword [rax+40], rcx
mov rcx, [f4155ids]
mov qword [rax+48], rcx
mov rcx, [f4155gl]
mov qword [rax+56], rcx
mov rcx, [f4155gr]
mov qword [rax+64], rcx
mov rcx, [f4155call_exp]
mov qword [rax+72], rcx
mov rcx, [f4155f1055]
mov qword [rax+80], rcx
mov rcx, [f4155texp]
mov qword [rax+88], rcx
mov rcx, [f4155op_list]
mov qword [rax+96], rcx
mov rcx, [f4155context]
mov qword [rax+104], rcx
mov rcx, [f4155f4255]
mov qword [rax+112], rcx
mov rcx, [f4155al]
mov qword [rax+120], rcx
mov rcx, [f4155ar]
mov qword [rax+128], rcx
mov rcx, [f4155f7255]
mov qword [rax+136], rcx
mov rcx, [f4155f0355]
mov qword [rax+144], rcx
mov rcx, [f4155rev_context]
mov qword [rax+152], rcx
mov rcx, [f4155f2455]
mov qword [rax+160], rcx
mov rcx, [f4155f3455]
mov qword [rax+168], rcx
mov qword [rax], 21
push rax
pop qword [f4155f5665]
push qword [f4155f5665]
jmp f6765_end
f4155f6765: dq 0
f6765_end:
push qword [f4155rev_context]
pop qword [f4155f6765]
push qword [f4155f6765]
call map_tree
push rax
pop qword [f4155f6455]
pop qword [f4155f3455]
pop qword [f4155f2455]
pop qword [f4155rev_context]
pop qword [f4155f0355]
pop qword [f4155f7255]
pop qword [f4155ar]
pop qword [f4155al]
pop qword [f4155f4255]
pop qword [f4155context]
pop qword [f4155op_list]
pop qword [f4155texp]
pop qword [f4155f1055]
pop qword [f4155call_exp]
pop qword [f4155gr]
pop qword [f4155gl]
pop qword [f4155ids]
pop qword [f4155old_context]
pop qword [f4155fr]
pop qword [f4155fl]
pop qword [f4155ret]
jmp f7765_end
f4155f7765: dq 0
f7765_end:
push 0
pop qword [f4155f7765]
push qword [f4155f7765]
jmp f0075_end
f4155f0075: dq 0
f0075_end:
push qword [f4155ret]
pop qword [f4155f0075]
push qword [f4155f0075]
jmp return
f4155_end:
mov rdi, 88
call malloc
mov qword [rax+8], f4155
mov rcx, [print_call_expressionret]
mov qword [rax+16], rcx
mov rcx, [print_call_expressionfl]
mov qword [rax+24], rcx
mov rcx, [print_call_expressionfr]
mov qword [rax+32], rcx
mov rcx, [print_call_expressionold_context]
mov qword [rax+40], rcx
mov rcx, [print_call_expressionids]
mov qword [rax+48], rcx
mov rcx, [print_call_expressiongl]
mov qword [rax+56], rcx
mov rcx, [print_call_expressiongr]
mov qword [rax+64], rcx
mov rcx, [print_call_expressioncall_exp]
mov qword [rax+72], rcx
mov rcx, [print_call_expressionf1055]
mov qword [rax+80], rcx
mov qword [rax], 10
push rax
pop qword [print_call_expressionf2655]
push qword [print_call_expressionf2655]
jmp f1075_end
print_call_expressionf1075: dq 0
f1075_end:
jmp f0155_end
f0155ret: dq 0
f0155fl: dq 0
f0155fr: dq 0
f0155old_context: dq 0
f0155ids: dq 0
f0155gl: dq 0
f0155gr: dq 0
f0155call_exp: dq 0
f0155f1055: dq 0
f0155texp: dq 0
f0155f1155: dq 0
f0155:
pop qword [f0155ret]
pop qword [f0155fl]
pop qword [f0155fr]
pop qword [f0155old_context]
pop qword [f0155ids]
pop qword [f0155gl]
pop qword [f0155gr]
pop qword [f0155call_exp]
pop qword [f0155f1055]
pop qword [f0155texp]
push qword [f0155ret]
push qword [f0155fl]
push qword [f0155fr]
push qword [f0155old_context]
push qword [f0155ids]
push qword [f0155gl]
push qword [f0155gr]
push qword [f0155call_exp]
push qword [f0155f1055]
push qword [f0155texp]
jmp f2075_end
f0155f2075: dq 0
f2075_end:
push qword [f0155texp]
pop qword [f0155f2075]
push qword [f0155f2075]
jmp f3075_end
f0155f3075: dq 0
f3075_end:
push qword [f0155gr]
pop qword [f0155f3075]
push qword [f0155f3075]
jmp f4075_end
f0155f4075: dq 0
f4075_end:
push qword [f0155gl]
pop qword [f0155f4075]
push qword [f0155f4075]
jmp f5075_end
f0155f5075: dq 0
f5075_end:
push qword [f0155ids]
pop qword [f0155f5075]
push qword [f0155f5075]
jmp f6075_end
f0155f6075: dq 0
f6075_end:
push qword [f0155old_context]
pop qword [f0155f6075]
push qword [f0155f6075]
jmp f7075_end
f0155f7075: dq 0
f7075_end:
push qword [f0155fr]
pop qword [f0155f7075]
push qword [f0155f7075]
jmp f0175_end
f0155f0175: dq 0
f0175_end:
push qword [f0155fl]
pop qword [f0155f0175]
push qword [f0155f0175]
call print_texp
push rax
pop qword [f0155f1155]
pop qword [f0155texp]
pop qword [f0155f1055]
pop qword [f0155call_exp]
pop qword [f0155gr]
pop qword [f0155gl]
pop qword [f0155ids]
pop qword [f0155old_context]
pop qword [f0155fr]
pop qword [f0155fl]
pop qword [f0155ret]
jmp f1175_end
f0155f1175: dq 0
f1175_end:
push 0
pop qword [f0155f1175]
push qword [f0155f1175]
jmp f2175_end
f0155f2175: dq 0
f2175_end:
push qword [f0155ret]
pop qword [f0155f2175]
push qword [f0155f2175]
jmp return
f0155_end:
mov rdi, 88
call malloc
mov qword [rax+8], f0155
mov rcx, [print_call_expressionret]
mov qword [rax+16], rcx
mov rcx, [print_call_expressionfl]
mov qword [rax+24], rcx
mov rcx, [print_call_expressionfr]
mov qword [rax+32], rcx
mov rcx, [print_call_expressionold_context]
mov qword [rax+40], rcx
mov rcx, [print_call_expressionids]
mov qword [rax+48], rcx
mov rcx, [print_call_expressiongl]
mov qword [rax+56], rcx
mov rcx, [print_call_expressiongr]
mov qword [rax+64], rcx
mov rcx, [print_call_expressioncall_exp]
mov qword [rax+72], rcx
mov rcx, [print_call_expressionf1055]
mov qword [rax+80], rcx
mov qword [rax], 10
push rax
pop qword [print_call_expressionf1075]
push qword [print_call_expressionf1075]
push qword [print_call_expressioncall_exp]
jmp runtime_call
print_call_expression_end:
jmp call_expression_to_function_end
call_expression_to_functionret: dq 0
call_expression_to_functioncall_exp: dq 0
call_expression_to_function:
pop qword [call_expression_to_functionret]
pop qword [call_expression_to_functioncall_exp]
jmp f2375_end
call_expression_to_functionf2375: dq 0
f2375_end:
jmp f6275_end
f6275ret: dq 0
f6275call_exp: dq 0
f6275texp: dq 0
f6275op_list: dq 0
f6275:
pop qword [f6275ret]
pop qword [f6275call_exp]
pop qword [f6275texp]
pop qword [f6275op_list]
jmp f3375_end
f6275f3375: dq 0
f3375_end:
push 0
pop qword [f6275f3375]
push qword [f6275f3375]
jmp f4375_end
f6275f4375: dq 0
f4375_end:
push qword [f6275ret]
pop qword [f6275f4375]
push qword [f6275f4375]
jmp return
f6275_end:
mov rdi, 32
call malloc
mov qword [rax+8], f6275
mov rcx, [call_expression_to_functionret]
mov qword [rax+16], rcx
mov rcx, [call_expression_to_functioncall_exp]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [call_expression_to_functionf2375]
push qword [call_expression_to_functionf2375]
jmp f5375_end
call_expression_to_functionf5375: dq 0
f5375_end:
jmp f3275_end
f3275ret: dq 0
f3275call_exp: dq 0
f3275texp: dq 0
f3275res: dq 0
f3275:
pop qword [f3275ret]
pop qword [f3275call_exp]
pop qword [f3275texp]
push qword [f3275ret]
push qword [f3275call_exp]
push qword [f3275texp]
jmp f6375_end
f3275f6375: dq 0
f6375_end:
push qword [f3275texp]
pop qword [f3275f6375]
push qword [f3275f6375]
call texp_to_function
push rax
pop qword [f3275res]
pop qword [f3275texp]
pop qword [f3275call_exp]
pop qword [f3275ret]
jmp f7375_end
f3275f7375: dq 0
f7375_end:
push qword [f3275res]
pop qword [f3275f7375]
push qword [f3275f7375]
jmp f0475_end
f3275f0475: dq 0
f0475_end:
push qword [f3275ret]
pop qword [f3275f0475]
push qword [f3275f0475]
jmp return
f3275_end:
mov rdi, 32
call malloc
mov qword [rax+8], f3275
mov rcx, [call_expression_to_functionret]
mov qword [rax+16], rcx
mov rcx, [call_expression_to_functioncall_exp]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [call_expression_to_functionf5375]
push qword [call_expression_to_functionf5375]
push qword [call_expression_to_functioncall_exp]
jmp runtime_call
call_expression_to_function_end:
jmp read_func_appl_args_end
read_func_appl_argsret: dq 0
read_func_appl_argsl: dq 0
read_func_appl_argsr: dq 0
read_func_appl_argsnl: dq 0
read_func_appl_argsnr: dq 0
read_func_appl_argsop_list: dq 0
read_func_appl_argsf2475: dq 0
read_func_appl_args:
pop qword [read_func_appl_argsret]
pop qword [read_func_appl_argsl]
pop qword [read_func_appl_argsr]
push qword [read_func_appl_argsret]
push qword [read_func_appl_argsl]
push qword [read_func_appl_argsr]
jmp f4575_end
read_func_appl_argsf4575: dq 0
f4575_end:
push qword [read_func_appl_argsr]
pop qword [read_func_appl_argsf4575]
push qword [read_func_appl_argsf4575]
jmp f5575_end
read_func_appl_argsf5575: dq 0
f5575_end:
push qword [read_func_appl_argsl]
pop qword [read_func_appl_argsf5575]
push qword [read_func_appl_argsf5575]
call read_call_expression_args
push rax
pop qword [read_func_appl_argsnl]
pop qword [read_func_appl_argsnr]
pop qword [read_func_appl_argsop_list]
pop qword [read_func_appl_argsr]
pop qword [read_func_appl_argsl]
pop qword [read_func_appl_argsret]
jmp f6575_end
read_func_appl_argsf6575: dq 0
f6575_end:
jmp f6475_end
f6475ret: dq 0
f6475l: dq 0
f6475r: dq 0
f6475nl: dq 0
f6475nr: dq 0
f6475op_list: dq 0
f6475break: dq 0
f6475:
pop qword [f6475ret]
pop qword [f6475l]
pop qword [f6475r]
pop qword [f6475nl]
pop qword [f6475nr]
pop qword [f6475op_list]
pop qword [f6475break]
jmp f7575_end
f6475f7575: dq 0
f7575_end:
push qword [f6475op_list]
pop qword [f6475f7575]
push qword [f6475f7575]
jmp f0675_end
f6475f0675: dq 0
f0675_end:
push qword [f6475nr]
pop qword [f6475f0675]
push qword [f6475f0675]
jmp f1675_end
f6475f1675: dq 0
f1675_end:
push qword [f6475nl]
pop qword [f6475f1675]
push qword [f6475f1675]
jmp f2675_end
f6475f2675: dq 0
f2675_end:
push qword [f6475ret]
pop qword [f6475f2675]
push qword [f6475f2675]
jmp return
f6475_end:
mov rdi, 64
call malloc
mov qword [rax+8], f6475
mov rcx, [read_func_appl_argsret]
mov qword [rax+16], rcx
mov rcx, [read_func_appl_argsl]
mov qword [rax+24], rcx
mov rcx, [read_func_appl_argsr]
mov qword [rax+32], rcx
mov rcx, [read_func_appl_argsnl]
mov qword [rax+40], rcx
mov rcx, [read_func_appl_argsnr]
mov qword [rax+48], rcx
mov rcx, [read_func_appl_argsop_list]
mov qword [rax+56], rcx
mov qword [rax], 7
push rax
pop qword [read_func_appl_argsf6575]
push qword [read_func_appl_argsf6575]
jmp f3675_end
read_func_appl_argsf3675: dq 0
f3675_end:
jmp f4675_end
read_func_appl_argsf4675: dq 0
f4675_end:
push 0
pop qword [read_func_appl_argsf4675]
push qword [read_func_appl_argsf4675]
jmp f5675_end
read_func_appl_argsf5675: dq 0
f5675_end:
push qword [read_func_appl_argsop_list]
pop qword [read_func_appl_argsf5675]
push qword [read_func_appl_argsf5675]
call ne
push rax
pop qword [read_func_appl_argsf3675]
push qword [read_func_appl_argsf3675]
call if
push rax
pop qword [read_func_appl_argsf2475]
push qword [read_func_appl_argsret]
push qword [read_func_appl_argsnl]
push qword [read_func_appl_argsnr]
push qword [read_func_appl_argsf2475]
jmp f6675_end
read_func_appl_argsf6675: dq 0
f6675_end:
push qword [read_func_appl_argsr]
pop qword [read_func_appl_argsf6675]
push qword [read_func_appl_argsf6675]
jmp f7675_end
read_func_appl_argsf7675: dq 0
f7675_end:
push qword [read_func_appl_argsl]
pop qword [read_func_appl_argsf7675]
push qword [read_func_appl_argsf7675]
call read_call_exp_list
push rax
pop qword [read_func_appl_argsl]
pop qword [read_func_appl_argsr]
pop qword [read_func_appl_argsop_list]
pop qword [read_func_appl_argsf2475]
pop qword [read_func_appl_argsnr]
pop qword [read_func_appl_argsnl]
pop qword [read_func_appl_argsret]
jmp f0775_end
read_func_appl_argsf0775: dq 0
f0775_end:
push qword [read_func_appl_argsop_list]
pop qword [read_func_appl_argsf0775]
push qword [read_func_appl_argsf0775]
jmp f1775_end
read_func_appl_argsf1775: dq 0
f1775_end:
push qword [read_func_appl_argsr]
pop qword [read_func_appl_argsf1775]
push qword [read_func_appl_argsf1775]
jmp f2775_end
read_func_appl_argsf2775: dq 0
f2775_end:
push qword [read_func_appl_argsl]
pop qword [read_func_appl_argsf2775]
push qword [read_func_appl_argsf2775]
jmp f3775_end
read_func_appl_argsf3775: dq 0
f3775_end:
push qword [read_func_appl_argsret]
pop qword [read_func_appl_argsf3775]
push qword [read_func_appl_argsf3775]
jmp return
read_func_appl_args_end:
jmp aexp_to_range_end
aexp_to_rangeaexp: dq 0
aexp_to_rangef5775: dq 0
aexp_to_rangel: dq 0
aexp_to_ranger: dq 0
aexp_to_rangef1006: dq 0
aexp_to_range:
pop rax
pop qword [aexp_to_rangeaexp]
push rax
mov [aexp_to_rangef1006], rsp
push qword [aexp_to_rangeaexp]
push qword [aexp_to_rangef1006]
jmp f2006_end
aexp_to_rangef2006: dq 0
f2006_end:
jmp f6775_end
f6775aexp: dq 0
f6775f1006: dq 0
f6775break: dq 0
f6775:
pop qword [f6775aexp]
pop qword [f6775f1006]
pop qword [f6775break]
mov rsp, [f6775f1006]
jmp f3006_end
f6775f3006: dq 0
f3006_end:
push 0
pop qword [f6775f3006]
pop rax
push qword [f6775f3006]
push rax
jmp f4006_end
f6775f4006: dq 0
f4006_end:
push 0
pop qword [f6775f4006]
pop rax
push qword [f6775f4006]
push rax
pop rcx
pop rax
jmp rcx
f6775_end:
mov rdi, 32
call malloc
mov qword [rax+8], f6775
mov rcx, [aexp_to_rangeaexp]
mov qword [rax+16], rcx
mov rcx, [aexp_to_rangef1006]
mov qword [rax+24], rcx
mov qword [rax], 3
push rax
pop qword [aexp_to_rangef2006]
push qword [aexp_to_rangef2006]
jmp f5006_end
aexp_to_rangef5006: dq 0
f5006_end:
push qword [aexp_to_rangeaexp]
push qword [aexp_to_rangef1006]
jmp f6006_end
aexp_to_rangef6006: dq 0
f6006_end:
push 0
pop qword [aexp_to_rangef6006]
push qword [aexp_to_rangef6006]
jmp f7006_end
aexp_to_rangef7006: dq 0
f7006_end:
push qword [aexp_to_rangeaexp]
pop qword [aexp_to_rangef7006]
push qword [aexp_to_rangef7006]
call eq
push rax
pop qword [aexp_to_rangef5006]
pop qword [aexp_to_rangef1006]
pop qword [aexp_to_rangeaexp]
push qword [aexp_to_rangef5006]
call if
push rax
pop qword [aexp_to_rangef5775]
pop qword [aexp_to_rangef1006]
pop qword [aexp_to_rangeaexp]
push qword [aexp_to_rangeaexp]
push qword [aexp_to_rangef1006]
push qword [aexp_to_rangef5775]
push qword [aexp_to_rangeaexp]
call runtime_call_ret
push rax
pop qword [aexp_to_rangel]
pop qword [aexp_to_ranger]
pop qword [aexp_to_rangef5775]
pop qword [aexp_to_rangef1006]
pop qword [aexp_to_rangeaexp]
mov rsp, [aexp_to_rangef1006]
jmp f0106_end
aexp_to_rangef0106: dq 0
f0106_end:
push qword [aexp_to_ranger]
pop qword [aexp_to_rangef0106]
pop rax
push qword [aexp_to_rangef0106]
push rax
jmp f1106_end
aexp_to_rangef1106: dq 0
f1106_end:
push qword [aexp_to_rangel]
pop qword [aexp_to_rangef1106]
pop rax
push qword [aexp_to_rangef1106]
push rax
pop rcx
pop rax
jmp rcx
ret
aexp_to_range_end:
jmp read_function_application_end
read_function_applicationorig_l: dq 0
read_function_applicationr: dq 0
read_function_applicationl: dq 0
read_function_applicationtexp: dq 0
read_function_applicationf3106: dq 0
read_function_applicationop_list: dq 0
read_function_applicationf1206: dq 0
read_function_application:
pop rax
pop qword [read_function_applicationorig_l]
pop qword [read_function_applicationr]
push rax
mov [read_function_applicationf1206], rsp
push qword [read_function_applicationorig_l]
pop qword [read_function_applicationl]
push qword [read_function_applicationorig_l]
push qword [read_function_applicationf1206]
jmp f2206_end
read_function_applicationf2206: dq 0
f2206_end:
push qword [read_function_applicationr]
pop qword [read_function_applicationf2206]
push qword [read_function_applicationf2206]
jmp f3206_end
read_function_applicationf3206: dq 0
f3206_end:
push qword [read_function_applicationl]
pop qword [read_function_applicationf3206]
push qword [read_function_applicationf3206]
call read_texp
push rax
pop qword [read_function_applicationl]
pop qword [read_function_applicationr]
pop qword [read_function_applicationtexp]
pop qword [read_function_applicationf1206]
pop qword [read_function_applicationorig_l]
push qword [read_function_applicationorig_l]
push qword [read_function_applicationf1206]
push qword [read_function_applicationl]
push qword [read_function_applicationr]
push qword [read_function_applicationtexp]
jmp f4206_end
read_function_applicationf4206: dq 0
f4206_end:
jmp f4106_end
f4106orig_l: dq 0
f4106f1206: dq 0
f4106l: dq 0
f4106r: dq 0
f4106texp: dq 0
f4106break: dq 0
f4106:
pop qword [f4106orig_l]
pop qword [f4106f1206]
pop qword [f4106l]
pop qword [f4106r]
pop qword [f4106texp]
pop qword [f4106break]
mov rsp, [f4106f1206]
jmp f5206_end
f4106f5206: dq 0
f5206_end:
push 0
pop qword [f4106f5206]
pop rax
push qword [f4106f5206]
push rax
jmp f6206_end
f4106f6206: dq 0
f6206_end:
push qword [f4106r]
pop qword [f4106f6206]
pop rax
push qword [f4106f6206]
push rax
jmp f7206_end
f4106f7206: dq 0
f7206_end:
push qword [f4106orig_l]
pop qword [f4106f7206]
pop rax
push qword [f4106f7206]
push rax
pop rcx
pop rax
jmp rcx
f4106_end:
mov rdi, 56
call malloc
mov qword [rax+8], f4106
mov rcx, [read_function_applicationorig_l]
mov qword [rax+16], rcx
mov rcx, [read_function_applicationf1206]
mov qword [rax+24], rcx
mov rcx, [read_function_applicationl]
mov qword [rax+32], rcx
mov rcx, [read_function_applicationr]
mov qword [rax+40], rcx
mov rcx, [read_function_applicationtexp]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [read_function_applicationf4206]
push qword [read_function_applicationf4206]
jmp f0306_end
read_function_applicationf0306: dq 0
f0306_end:
push qword [read_function_applicationorig_l]
push qword [read_function_applicationf1206]
push qword [read_function_applicationl]
push qword [read_function_applicationr]
push qword [read_function_applicationtexp]
jmp f1306_end
read_function_applicationf1306: dq 0
f1306_end:
push 0
pop qword [read_function_applicationf1306]
push qword [read_function_applicationf1306]
jmp f2306_end
read_function_applicationf2306: dq 0
f2306_end:
push qword [read_function_applicationtexp]
pop qword [read_function_applicationf2306]
push qword [read_function_applicationf2306]
call eq
push rax
pop qword [read_function_applicationf0306]
pop qword [read_function_applicationtexp]
pop qword [read_function_applicationr]
pop qword [read_function_applicationl]
pop qword [read_function_applicationf1206]
pop qword [read_function_applicationorig_l]
push qword [read_function_applicationf0306]
call if
push rax
pop qword [read_function_applicationf3106]
pop qword [read_function_applicationtexp]
pop qword [read_function_applicationr]
pop qword [read_function_applicationl]
pop qword [read_function_applicationf1206]
pop qword [read_function_applicationorig_l]
push qword [read_function_applicationorig_l]
push qword [read_function_applicationf1206]
push qword [read_function_applicationtexp]
push qword [read_function_applicationf3106]
jmp f3306_end
read_function_applicationf3306: dq 0
f3306_end:
push qword [read_function_applicationr]
pop qword [read_function_applicationf3306]
push qword [read_function_applicationf3306]
jmp f4306_end
read_function_applicationf4306: dq 0
f4306_end:
push qword [read_function_applicationl]
pop qword [read_function_applicationf4306]
push qword [read_function_applicationf4306]
call read_func_appl_args
push rax
pop qword [read_function_applicationl]
pop qword [read_function_applicationr]
pop qword [read_function_applicationop_list]
pop qword [read_function_applicationf3106]
pop qword [read_function_applicationtexp]
pop qword [read_function_applicationf1206]
pop qword [read_function_applicationorig_l]
mov rsp, [read_function_applicationf1206]
jmp f5306_end
read_function_applicationf5306: dq 0
f5306_end:
jmp f6106_end
f6106orig_l: dq 0
f6106f1206: dq 0
f6106texp: dq 0
f6106f3106: dq 0
f6106l: dq 0
f6106r: dq 0
f6106op_list: dq 0
f6106f6306: dq 0
f6106:
pop rax
pop qword [f6106orig_l]
pop qword [f6106f1206]
pop qword [f6106texp]
pop qword [f6106f3106]
pop qword [f6106l]
pop qword [f6106r]
pop qword [f6106op_list]
push rax
mov [f6106f6306], rsp
mov rsp, [f6106f6306]
jmp f7306_end
f6106f7306: dq 0
f7306_end:
push qword [f6106texp]
pop qword [f6106f7306]
pop rax
push qword [f6106f7306]
push rax
jmp f0406_end
f6106f0406: dq 0
f0406_end:
push qword [f6106op_list]
pop qword [f6106f0406]
pop rax
push qword [f6106f0406]
push rax
pop rcx
pop rax
jmp rcx
ret
f6106_end:
mov rdi, 72
call malloc
mov qword [rax+8], f6106
mov rcx, [read_function_applicationorig_l]
mov qword [rax+16], rcx
mov rcx, [read_function_applicationf1206]
mov qword [rax+24], rcx
mov rcx, [read_function_applicationtexp]
mov qword [rax+32], rcx
mov rcx, [read_function_applicationf3106]
mov qword [rax+40], rcx
mov rcx, [read_function_applicationl]
mov qword [rax+48], rcx
mov rcx, [read_function_applicationr]
mov qword [rax+56], rcx
mov rcx, [read_function_applicationop_list]
mov qword [rax+64], rcx
mov qword [rax], 8
push rax
pop qword [read_function_applicationf5306]
pop rax
push qword [read_function_applicationf5306]
push rax
jmp f1406_end
read_function_applicationf1406: dq 0
f1406_end:
push qword [read_function_applicationr]
pop qword [read_function_applicationf1406]
pop rax
push qword [read_function_applicationf1406]
push rax
jmp f2406_end
read_function_applicationf2406: dq 0
f2406_end:
push qword [read_function_applicationl]
pop qword [read_function_applicationf2406]
pop rax
push qword [read_function_applicationf2406]
push rax
pop rcx
pop rax
jmp rcx
ret
read_function_application_end:
jmp print_function_application_end
print_function_applicationfl: dq 0
print_function_applicationfr: dq 0
print_function_applicationcontext: dq 0
print_function_applicationis_returning: dq 0
print_function_applicationgl: dq 0
print_function_applicationgr: dq 0
print_function_applicationappl: dq 0
print_function_applicationop_list: dq 0
print_function_applicationtexp: dq 0
print_function_applicational: dq 0
print_function_applicationar: dq 0
print_function_applicationf4406: dq 0
print_function_applicationf5406: dq 0
print_function_applicationf0706: dq 0
print_function_application:
pop rax
pop qword [print_function_applicationfl]
pop qword [print_function_applicationfr]
pop qword [print_function_applicationcontext]
pop qword [print_function_applicationis_returning]
pop qword [print_function_applicationgl]
pop qword [print_function_applicationgr]
pop qword [print_function_applicationappl]
push rax
mov [print_function_applicationf0706], rsp
push qword [print_function_applicationfl]
push qword [print_function_applicationfr]
push qword [print_function_applicationcontext]
push qword [print_function_applicationis_returning]
push qword [print_function_applicationgl]
push qword [print_function_applicationgr]
push qword [print_function_applicationappl]
push qword [print_function_applicationf0706]
push qword [print_function_applicationappl]
call runtime_call_ret
push rax
pop qword [print_function_applicationop_list]
pop qword [print_function_applicationtexp]
pop qword [print_function_applicationf0706]
pop qword [print_function_applicationappl]
pop qword [print_function_applicationgr]
pop qword [print_function_applicationgl]
pop qword [print_function_applicationis_returning]
pop qword [print_function_applicationcontext]
pop qword [print_function_applicationfr]
pop qword [print_function_applicationfl]
push qword [print_function_applicationfl]
push qword [print_function_applicationfr]
push qword [print_function_applicationcontext]
push qword [print_function_applicationis_returning]
push qword [print_function_applicationgl]
push qword [print_function_applicationgr]
push qword [print_function_applicationappl]
push qword [print_function_applicationf0706]
push qword [print_function_applicationop_list]
push qword [print_function_applicationtexp]
jmp f1706_end
print_function_applicationf1706: dq 0
f1706_end:
push qword [print_function_applicationfl]
push qword [print_function_applicationfr]
push qword [print_function_applicationcontext]
push qword [print_function_applicationis_returning]
push qword [print_function_applicationgl]
push qword [print_function_applicationgr]
push qword [print_function_applicationappl]
push qword [print_function_applicationf0706]
push qword [print_function_applicationop_list]
push qword [print_function_applicationtexp]
jmp f2706_end
print_function_applicationf2706: dq 0
f2706_end:
push qword [print_function_applicationtexp]
pop qword [print_function_applicationf2706]
push qword [print_function_applicationf2706]
call get_aexp_from_texp
push rax
pop qword [print_function_applicationf1706]
pop qword [print_function_applicationtexp]
pop qword [print_function_applicationop_list]
pop qword [print_function_applicationf0706]
pop qword [print_function_applicationappl]
pop qword [print_function_applicationgr]
pop qword [print_function_applicationgl]
pop qword [print_function_applicationis_returning]
pop qword [print_function_applicationcontext]
pop qword [print_function_applicationfr]
pop qword [print_function_applicationfl]
push qword [print_function_applicationf1706]
call aexp_to_range
push rax
pop qword [print_function_applicational]
pop qword [print_function_applicationar]
pop qword [print_function_applicationtexp]
pop qword [print_function_applicationop_list]
pop qword [print_function_applicationf0706]
pop qword [print_function_applicationappl]
pop qword [print_function_applicationgr]
pop qword [print_function_applicationgl]
pop qword [print_function_applicationis_returning]
pop qword [print_function_applicationcontext]
pop qword [print_function_applicationfr]
pop qword [print_function_applicationfl]
push qword [print_function_applicationfl]
push qword [print_function_applicationfr]
push qword [print_function_applicationcontext]
push qword [print_function_applicationis_returning]
push qword [print_function_applicationgl]
push qword [print_function_applicationgr]
push qword [print_function_applicationappl]
push qword [print_function_applicationf0706]
push qword [print_function_applicationop_list]
push qword [print_function_applicationtexp]
push qword [print_function_applicational]
push qword [print_function_applicationar]
jmp f3706_end
print_function_applicationf3706: dq 0
f3706_end:
push qword [print_function_applicationop_list]
pop qword [print_function_applicationf3706]
push qword [print_function_applicationf3706]
jmp f4706_end
print_function_applicationf4706: dq 0
f4706_end:
push qword [print_function_applicationgr]
pop qword [print_function_applicationf4706]
push qword [print_function_applicationf4706]
jmp f5706_end
print_function_applicationf5706: dq 0
f5706_end:
push qword [print_function_applicationgl]
pop qword [print_function_applicationf5706]
push qword [print_function_applicationf5706]
jmp f6706_end
print_function_applicationf6706: dq 0
f6706_end:
push qword [print_function_applicationcontext]
pop qword [print_function_applicationf6706]
push qword [print_function_applicationf6706]
jmp f7706_end
print_function_applicationf7706: dq 0
f7706_end:
push qword [print_function_applicationfr]
pop qword [print_function_applicationf7706]
push qword [print_function_applicationf7706]
jmp f0016_end
print_function_applicationf0016: dq 0
f0016_end:
push qword [print_function_applicationfl]
pop qword [print_function_applicationf0016]
push qword [print_function_applicationf0016]
call print_call_exp_args
push rax
pop qword [print_function_applicationf4406]
pop qword [print_function_applicationar]
pop qword [print_function_applicational]
pop qword [print_function_applicationtexp]
pop qword [print_function_applicationop_list]
pop qword [print_function_applicationf0706]
pop qword [print_function_applicationappl]
pop qword [print_function_applicationgr]
pop qword [print_function_applicationgl]
pop qword [print_function_applicationis_returning]
pop qword [print_function_applicationcontext]
pop qword [print_function_applicationfr]
pop qword [print_function_applicationfl]
push qword [print_function_applicationfl]
push qword [print_function_applicationfr]
push qword [print_function_applicationcontext]
push qword [print_function_applicationis_returning]
push qword [print_function_applicationgl]
push qword [print_function_applicationgr]
push qword [print_function_applicationappl]
push qword [print_function_applicationf0706]
push qword [print_function_applicationop_list]
push qword [print_function_applicationtexp]
push qword [print_function_applicational]
push qword [print_function_applicationar]
push qword [print_function_applicationf4406]
jmp f1016_end
print_function_applicationf1016: dq 0
f1016_end:
jmp f7506_end
f7506fl: dq 0
f7506fr: dq 0
f7506context: dq 0
f7506is_returning: dq 0
f7506gl: dq 0
f7506gr: dq 0
f7506appl: dq 0
f7506f0706: dq 0
f7506op_list: dq 0
f7506texp: dq 0
f7506al: dq 0
f7506ar: dq 0
f7506f4406: dq 0
f7506break: dq 0
f7506f0606: dq 0
f7506:
pop qword [f7506fl]
pop qword [f7506fr]
pop qword [f7506context]
pop qword [f7506is_returning]
pop qword [f7506gl]
pop qword [f7506gr]
pop qword [f7506appl]
pop qword [f7506f0706]
pop qword [f7506op_list]
pop qword [f7506texp]
pop qword [f7506al]
pop qword [f7506ar]
pop qword [f7506f4406]
pop qword [f7506break]
push qword [f7506fl]
push qword [f7506fr]
push qword [f7506context]
push qword [f7506is_returning]
push qword [f7506gl]
push qword [f7506gr]
push qword [f7506appl]
push qword [f7506f0706]
push qword [f7506op_list]
push qword [f7506texp]
push qword [f7506al]
push qword [f7506ar]
push qword [f7506f4406]
push qword [f7506break]
jmp f2016_end
f7506f2016: dq 0
f2016_end:
jmp f3606_end
f3606fl: dq 0
f3606fr: dq 0
f3606context: dq 0
f3606is_returning: dq 0
f3606gl: dq 0
f3606gr: dq 0
f3606appl: dq 0
f3606f0706: dq 0
f3606op_list: dq 0
f3606texp: dq 0
f3606al: dq 0
f3606ar: dq 0
f3606f4406: dq 0
f3606break: dq 0
f3606f3016: dq 0
f3606:
pop rax
pop qword [f3606fl]
pop qword [f3606fr]
pop qword [f3606context]
pop qword [f3606is_returning]
pop qword [f3606gl]
pop qword [f3606gr]
pop qword [f3606appl]
pop qword [f3606f0706]
pop qword [f3606op_list]
pop qword [f3606texp]
pop qword [f3606al]
pop qword [f3606ar]
pop qword [f3606f4406]
pop qword [f3606break]
push rax
mov [f3606f3016], rsp
mov rsp, [f3606f3016]
jmp f4016_end
f3606f4016: dq 0
f4016_end:
push qword [f3606fl]
push qword [f3606fr]
push qword [f3606context]
push qword [f3606is_returning]
push qword [f3606gl]
push qword [f3606gr]
push qword [f3606appl]
push qword [f3606f0706]
push qword [f3606op_list]
push qword [f3606texp]
push qword [f3606al]
push qword [f3606ar]
push qword [f3606f4406]
push qword [f3606break]
push qword [f3606f3016]
jmp f5016_end
f3606f5016: dq 0
f5016_end:
push qword [f3606ar]
pop qword [f3606f5016]
push qword [f3606f5016]
jmp f6016_end
f3606f6016: dq 0
f6016_end:
push qword [f3606al]
pop qword [f3606f6016]
push qword [f3606f6016]
jmp f7016_end
f3606f7016: dq 0
f7016_end:
jmp f0116_end
f0116: db `jmp {}\n`
db 0
f0116_end: push f0116
pop qword [f3606f7016]
push qword [f3606f7016]
call printf
push rax
pop qword [f3606f4016]
pop qword [f3606f3016]
pop qword [f3606break]
pop qword [f3606f4406]
pop qword [f3606ar]
pop qword [f3606al]
pop qword [f3606texp]
pop qword [f3606op_list]
pop qword [f3606f0706]
pop qword [f3606appl]
pop qword [f3606gr]
pop qword [f3606gl]
pop qword [f3606is_returning]
pop qword [f3606context]
pop qword [f3606fr]
pop qword [f3606fl]
pop rax
push qword [f3606f4016]
push rax
pop rcx
pop rax
jmp rcx
ret
f3606_end:
mov rdi, 128
call malloc
mov qword [rax+8], f3606
mov rcx, [f7506fl]
mov qword [rax+16], rcx
mov rcx, [f7506fr]
mov qword [rax+24], rcx
mov rcx, [f7506context]
mov qword [rax+32], rcx
mov rcx, [f7506is_returning]
mov qword [rax+40], rcx
mov rcx, [f7506gl]
mov qword [rax+48], rcx
mov rcx, [f7506gr]
mov qword [rax+56], rcx
mov rcx, [f7506appl]
mov qword [rax+64], rcx
mov rcx, [f7506f0706]
mov qword [rax+72], rcx
mov rcx, [f7506op_list]
mov qword [rax+80], rcx
mov rcx, [f7506texp]
mov qword [rax+88], rcx
mov rcx, [f7506al]
mov qword [rax+96], rcx
mov rcx, [f7506ar]
mov qword [rax+104], rcx
mov rcx, [f7506f4406]
mov qword [rax+112], rcx
mov rcx, [f7506break]
mov qword [rax+120], rcx
mov qword [rax], 15
push rax
pop qword [f7506f2016]
push qword [f7506f2016]
jmp f1116_end
f7506f1116: dq 0
f1116_end:
jmp f1606_end
f1606fl: dq 0
f1606fr: dq 0
f1606context: dq 0
f1606is_returning: dq 0
f1606gl: dq 0
f1606gr: dq 0
f1606appl: dq 0
f1606f0706: dq 0
f1606op_list: dq 0
f1606texp: dq 0
f1606al: dq 0
f1606ar: dq 0
f1606f4406: dq 0
f1606break: dq 0
f1606f2116: dq 0
f1606:
pop rax
pop qword [f1606fl]
pop qword [f1606fr]
pop qword [f1606context]
pop qword [f1606is_returning]
pop qword [f1606gl]
pop qword [f1606gr]
pop qword [f1606appl]
pop qword [f1606f0706]
pop qword [f1606op_list]
pop qword [f1606texp]
pop qword [f1606al]
pop qword [f1606ar]
pop qword [f1606f4406]
pop qword [f1606break]
push rax
mov [f1606f2116], rsp
mov rsp, [f1606f2116]
jmp f3116_end
f1606f3116: dq 0
f3116_end:
push qword [f1606fl]
push qword [f1606fr]
push qword [f1606context]
push qword [f1606is_returning]
push qword [f1606gl]
push qword [f1606gr]
push qword [f1606appl]
push qword [f1606f0706]
push qword [f1606op_list]
push qword [f1606texp]
push qword [f1606al]
push qword [f1606ar]
push qword [f1606f4406]
push qword [f1606break]
push qword [f1606f2116]
jmp f4116_end
f1606f4116: dq 0
f4116_end:
push qword [f1606ar]
pop qword [f1606f4116]
push qword [f1606f4116]
jmp f5116_end
f1606f5116: dq 0
f5116_end:
push qword [f1606al]
pop qword [f1606f5116]
push qword [f1606f5116]
jmp f6116_end
f1606f6116: dq 0
f6116_end:
jmp f7116_end
f7116: db `call {}\n`
db 0
f7116_end: push f7116
pop qword [f1606f6116]
push qword [f1606f6116]
call printf
push rax
pop qword [f1606f3116]
pop qword [f1606f2116]
pop qword [f1606break]
pop qword [f1606f4406]
pop qword [f1606ar]
pop qword [f1606al]
pop qword [f1606texp]
pop qword [f1606op_list]
pop qword [f1606f0706]
pop qword [f1606appl]
pop qword [f1606gr]
pop qword [f1606gl]
pop qword [f1606is_returning]
pop qword [f1606context]
pop qword [f1606fr]
pop qword [f1606fl]
pop rax
push qword [f1606f3116]
push rax
pop rcx
pop rax
jmp rcx
ret
f1606_end:
mov rdi, 128
call malloc
mov qword [rax+8], f1606
mov rcx, [f7506fl]
mov qword [rax+16], rcx
mov rcx, [f7506fr]
mov qword [rax+24], rcx
mov rcx, [f7506context]
mov qword [rax+32], rcx
mov rcx, [f7506is_returning]
mov qword [rax+40], rcx
mov rcx, [f7506gl]
mov qword [rax+48], rcx
mov rcx, [f7506gr]
mov qword [rax+56], rcx
mov rcx, [f7506appl]
mov qword [rax+64], rcx
mov rcx, [f7506f0706]
mov qword [rax+72], rcx
mov rcx, [f7506op_list]
mov qword [rax+80], rcx
mov rcx, [f7506texp]
mov qword [rax+88], rcx
mov rcx, [f7506al]
mov qword [rax+96], rcx
mov rcx, [f7506ar]
mov qword [rax+104], rcx
mov rcx, [f7506f4406]
mov qword [rax+112], rcx
mov rcx, [f7506break]
mov qword [rax+120], rcx
mov qword [rax], 15
push rax
pop qword [f7506f1116]
push qword [f7506f1116]
jmp f0216_end
f7506f0216: dq 0
f0216_end:
push qword [f7506is_returning]
pop qword [f7506f0216]
push qword [f7506f0216]
call if_else_ret
push rax
pop qword [f7506f0606]
pop qword [f7506break]
pop qword [f7506f4406]
pop qword [f7506ar]
pop qword [f7506al]
pop qword [f7506texp]
pop qword [f7506op_list]
pop qword [f7506f0706]
pop qword [f7506appl]
pop qword [f7506gr]
pop qword [f7506gl]
pop qword [f7506is_returning]
pop qword [f7506context]
pop qword [f7506fr]
pop qword [f7506fl]
push qword [f7506break]
jmp runtime_call
f7506_end:
mov rdi, 120
call malloc
mov qword [rax+8], f7506
mov rcx, [print_function_applicationfl]
mov qword [rax+16], rcx
mov rcx, [print_function_applicationfr]
mov qword [rax+24], rcx
mov rcx, [print_function_applicationcontext]
mov qword [rax+32], rcx
mov rcx, [print_function_applicationis_returning]
mov qword [rax+40], rcx
mov rcx, [print_function_applicationgl]
mov qword [rax+48], rcx
mov rcx, [print_function_applicationgr]
mov qword [rax+56], rcx
mov rcx, [print_function_applicationappl]
mov qword [rax+64], rcx
mov rcx, [print_function_applicationf0706]
mov qword [rax+72], rcx
mov rcx, [print_function_applicationop_list]
mov qword [rax+80], rcx
mov rcx, [print_function_applicationtexp]
mov qword [rax+88], rcx
mov rcx, [print_function_applicational]
mov qword [rax+96], rcx
mov rcx, [print_function_applicationar]
mov qword [rax+104], rcx
mov rcx, [print_function_applicationf4406]
mov qword [rax+112], rcx
mov qword [rax], 14
push rax
pop qword [print_function_applicationf1016]
push qword [print_function_applicationf1016]
jmp f1216_end
print_function_applicationf1216: dq 0
f1216_end:
jmp f6406_end
f6406fl: dq 0
f6406fr: dq 0
f6406context: dq 0
f6406is_returning: dq 0
f6406gl: dq 0
f6406gr: dq 0
f6406appl: dq 0
f6406f0706: dq 0
f6406op_list: dq 0
f6406texp: dq 0
f6406al: dq 0
f6406ar: dq 0
f6406f4406: dq 0
f6406break: dq 0
f6406f7406: dq 0
f6406f0506: dq 0
f6406:
pop qword [f6406fl]
pop qword [f6406fr]
pop qword [f6406context]
pop qword [f6406is_returning]
pop qword [f6406gl]
pop qword [f6406gr]
pop qword [f6406appl]
pop qword [f6406f0706]
pop qword [f6406op_list]
pop qword [f6406texp]
pop qword [f6406al]
pop qword [f6406ar]
pop qword [f6406f4406]
pop qword [f6406break]
push qword [f6406fl]
push qword [f6406fr]
push qword [f6406context]
push qword [f6406is_returning]
push qword [f6406gl]
push qword [f6406gr]
push qword [f6406appl]
push qword [f6406f0706]
push qword [f6406op_list]
push qword [f6406texp]
push qword [f6406al]
push qword [f6406ar]
push qword [f6406f4406]
push qword [f6406break]
jmp f2216_end
f6406f2216: dq 0
f2216_end:
push qword [f6406texp]
pop qword [f6406f2216]
push qword [f6406f2216]
jmp f3216_end
f6406f3216: dq 0
f3216_end:
push qword [f6406gr]
pop qword [f6406f3216]
push qword [f6406f3216]
jmp f4216_end
f6406f4216: dq 0
f4216_end:
push qword [f6406gl]
pop qword [f6406f4216]
push qword [f6406f4216]
jmp f5216_end
f6406f5216: dq 0
f5216_end:
push qword [f6406fl]
push qword [f6406fr]
push qword [f6406context]
push qword [f6406is_returning]
push qword [f6406gl]
push qword [f6406gr]
push qword [f6406appl]
push qword [f6406f0706]
push qword [f6406op_list]
push qword [f6406texp]
push qword [f6406al]
push qword [f6406ar]
push qword [f6406f4406]
push qword [f6406break]
call make_nil
push rax
pop qword [f6406f5216]
pop qword [f6406break]
pop qword [f6406f4406]
pop qword [f6406ar]
pop qword [f6406al]
pop qword [f6406texp]
pop qword [f6406op_list]
pop qword [f6406f0706]
pop qword [f6406appl]
pop qword [f6406gr]
pop qword [f6406gl]
pop qword [f6406is_returning]
pop qword [f6406context]
pop qword [f6406fr]
pop qword [f6406fl]
push qword [f6406f5216]
jmp f6216_end
f6406f6216: dq 0
f6216_end:
push qword [f6406context]
pop qword [f6406f6216]
push qword [f6406f6216]
jmp f7216_end
f6406f7216: dq 0
f7216_end:
push qword [f6406fr]
pop qword [f6406f7216]
push qword [f6406f7216]
jmp f0316_end
f6406f0316: dq 0
f0316_end:
push qword [f6406fl]
pop qword [f6406f0316]
push qword [f6406f0316]
call print_texp
push rax
pop qword [f6406f7406]
pop qword [f6406break]
pop qword [f6406f4406]
pop qword [f6406ar]
pop qword [f6406al]
pop qword [f6406texp]
pop qword [f6406op_list]
pop qword [f6406f0706]
pop qword [f6406appl]
pop qword [f6406gr]
pop qword [f6406gl]
pop qword [f6406is_returning]
pop qword [f6406context]
pop qword [f6406fr]
pop qword [f6406fl]
push qword [f6406fl]
push qword [f6406fr]
push qword [f6406context]
push qword [f6406is_returning]
push qword [f6406gl]
push qword [f6406gr]
push qword [f6406appl]
push qword [f6406f0706]
push qword [f6406op_list]
push qword [f6406texp]
push qword [f6406al]
push qword [f6406ar]
push qword [f6406f4406]
push qword [f6406break]
push qword [f6406f7406]
jmp f1316_end
f6406f1316: dq 0
f1316_end:
jmp f3506_end
f3506fl: dq 0
f3506fr: dq 0
f3506context: dq 0
f3506is_returning: dq 0
f3506gl: dq 0
f3506gr: dq 0
f3506appl: dq 0
f3506f0706: dq 0
f3506op_list: dq 0
f3506texp: dq 0
f3506al: dq 0
f3506ar: dq 0
f3506f4406: dq 0
f3506break: dq 0
f3506f7406: dq 0
f3506f2316: dq 0
f3506:
pop rax
pop qword [f3506fl]
pop qword [f3506fr]
pop qword [f3506context]
pop qword [f3506is_returning]
pop qword [f3506gl]
pop qword [f3506gr]
pop qword [f3506appl]
pop qword [f3506f0706]
pop qword [f3506op_list]
pop qword [f3506texp]
pop qword [f3506al]
pop qword [f3506ar]
pop qword [f3506f4406]
pop qword [f3506break]
pop qword [f3506f7406]
push rax
mov [f3506f2316], rsp
mov rsp, [f3506f2316]
jmp f3316_end
f3506f3316: dq 0
f3316_end:
push qword [f3506fl]
push qword [f3506fr]
push qword [f3506context]
push qword [f3506is_returning]
push qword [f3506gl]
push qword [f3506gr]
push qword [f3506appl]
push qword [f3506f0706]
push qword [f3506op_list]
push qword [f3506texp]
push qword [f3506al]
push qword [f3506ar]
push qword [f3506f4406]
push qword [f3506break]
push qword [f3506f7406]
push qword [f3506f2316]
jmp f4316_end
f3506f4316: dq 0
f4316_end:
jmp f5316_end
f5316: db `jmp runtime_call\n`
db 0
f5316_end: push f5316
pop qword [f3506f4316]
push qword [f3506f4316]
call printf
push rax
pop qword [f3506f3316]
pop qword [f3506f2316]
pop qword [f3506f7406]
pop qword [f3506break]
pop qword [f3506f4406]
pop qword [f3506ar]
pop qword [f3506al]
pop qword [f3506texp]
pop qword [f3506op_list]
pop qword [f3506f0706]
pop qword [f3506appl]
pop qword [f3506gr]
pop qword [f3506gl]
pop qword [f3506is_returning]
pop qword [f3506context]
pop qword [f3506fr]
pop qword [f3506fl]
pop rax
push qword [f3506f3316]
push rax
pop rcx
pop rax
jmp rcx
ret
f3506_end:
mov rdi, 136
call malloc
mov qword [rax+8], f3506
mov rcx, [f6406fl]
mov qword [rax+16], rcx
mov rcx, [f6406fr]
mov qword [rax+24], rcx
mov rcx, [f6406context]
mov qword [rax+32], rcx
mov rcx, [f6406is_returning]
mov qword [rax+40], rcx
mov rcx, [f6406gl]
mov qword [rax+48], rcx
mov rcx, [f6406gr]
mov qword [rax+56], rcx
mov rcx, [f6406appl]
mov qword [rax+64], rcx
mov rcx, [f6406f0706]
mov qword [rax+72], rcx
mov rcx, [f6406op_list]
mov qword [rax+80], rcx
mov rcx, [f6406texp]
mov qword [rax+88], rcx
mov rcx, [f6406al]
mov qword [rax+96], rcx
mov rcx, [f6406ar]
mov qword [rax+104], rcx
mov rcx, [f6406f4406]
mov qword [rax+112], rcx
mov rcx, [f6406break]
mov qword [rax+120], rcx
mov rcx, [f6406f7406]
mov qword [rax+128], rcx
mov qword [rax], 16
push rax
pop qword [f6406f1316]
push qword [f6406f1316]
jmp f6316_end
f6406f6316: dq 0
f6316_end:
jmp f1506_end
f1506fl: dq 0
f1506fr: dq 0
f1506context: dq 0
f1506is_returning: dq 0
f1506gl: dq 0
f1506gr: dq 0
f1506appl: dq 0
f1506f0706: dq 0
f1506op_list: dq 0
f1506texp: dq 0
f1506al: dq 0
f1506ar: dq 0
f1506f4406: dq 0
f1506break: dq 0
f1506f7406: dq 0
f1506f7316: dq 0
f1506:
pop rax
pop qword [f1506fl]
pop qword [f1506fr]
pop qword [f1506context]
pop qword [f1506is_returning]
pop qword [f1506gl]
pop qword [f1506gr]
pop qword [f1506appl]
pop qword [f1506f0706]
pop qword [f1506op_list]
pop qword [f1506texp]
pop qword [f1506al]
pop qword [f1506ar]
pop qword [f1506f4406]
pop qword [f1506break]
pop qword [f1506f7406]
push rax
mov [f1506f7316], rsp
mov rsp, [f1506f7316]
jmp f0416_end
f1506f0416: dq 0
f0416_end:
push qword [f1506fl]
push qword [f1506fr]
push qword [f1506context]
push qword [f1506is_returning]
push qword [f1506gl]
push qword [f1506gr]
push qword [f1506appl]
push qword [f1506f0706]
push qword [f1506op_list]
push qword [f1506texp]
push qword [f1506al]
push qword [f1506ar]
push qword [f1506f4406]
push qword [f1506break]
push qword [f1506f7406]
push qword [f1506f7316]
jmp f1416_end
f1506f1416: dq 0
f1416_end:
jmp f2416_end
f2416: db `call runtime_call_ret\n`
db 0
f2416_end: push f2416
pop qword [f1506f1416]
push qword [f1506f1416]
call printf
push rax
pop qword [f1506f0416]
pop qword [f1506f7316]
pop qword [f1506f7406]
pop qword [f1506break]
pop qword [f1506f4406]
pop qword [f1506ar]
pop qword [f1506al]
pop qword [f1506texp]
pop qword [f1506op_list]
pop qword [f1506f0706]
pop qword [f1506appl]
pop qword [f1506gr]
pop qword [f1506gl]
pop qword [f1506is_returning]
pop qword [f1506context]
pop qword [f1506fr]
pop qword [f1506fl]
pop rax
push qword [f1506f0416]
push rax
pop rcx
pop rax
jmp rcx
ret
f1506_end:
mov rdi, 136
call malloc
mov qword [rax+8], f1506
mov rcx, [f6406fl]
mov qword [rax+16], rcx
mov rcx, [f6406fr]
mov qword [rax+24], rcx
mov rcx, [f6406context]
mov qword [rax+32], rcx
mov rcx, [f6406is_returning]
mov qword [rax+40], rcx
mov rcx, [f6406gl]
mov qword [rax+48], rcx
mov rcx, [f6406gr]
mov qword [rax+56], rcx
mov rcx, [f6406appl]
mov qword [rax+64], rcx
mov rcx, [f6406f0706]
mov qword [rax+72], rcx
mov rcx, [f6406op_list]
mov qword [rax+80], rcx
mov rcx, [f6406texp]
mov qword [rax+88], rcx
mov rcx, [f6406al]
mov qword [rax+96], rcx
mov rcx, [f6406ar]
mov qword [rax+104], rcx
mov rcx, [f6406f4406]
mov qword [rax+112], rcx
mov rcx, [f6406break]
mov qword [rax+120], rcx
mov rcx, [f6406f7406]
mov qword [rax+128], rcx
mov qword [rax], 16
push rax
pop qword [f6406f6316]
push qword [f6406f6316]
jmp f3416_end
f6406f3416: dq 0
f3416_end:
push qword [f6406is_returning]
pop qword [f6406f3416]
push qword [f6406f3416]
call if_else_ret
push rax
pop qword [f6406f0506]
pop qword [f6406f7406]
pop qword [f6406break]
pop qword [f6406f4406]
pop qword [f6406ar]
pop qword [f6406al]
pop qword [f6406texp]
pop qword [f6406op_list]
pop qword [f6406f0706]
pop qword [f6406appl]
pop qword [f6406gr]
pop qword [f6406gl]
pop qword [f6406is_returning]
pop qword [f6406context]
pop qword [f6406fr]
pop qword [f6406fl]
push qword [f6406break]
jmp runtime_call
f6406_end:
mov rdi, 120
call malloc
mov qword [rax+8], f6406
mov rcx, [print_function_applicationfl]
mov qword [rax+16], rcx
mov rcx, [print_function_applicationfr]
mov qword [rax+24], rcx
mov rcx, [print_function_applicationcontext]
mov qword [rax+32], rcx
mov rcx, [print_function_applicationis_returning]
mov qword [rax+40], rcx
mov rcx, [print_function_applicationgl]
mov qword [rax+48], rcx
mov rcx, [print_function_applicationgr]
mov qword [rax+56], rcx
mov rcx, [print_function_applicationappl]
mov qword [rax+64], rcx
mov rcx, [print_function_applicationf0706]
mov qword [rax+72], rcx
mov rcx, [print_function_applicationop_list]
mov qword [rax+80], rcx
mov rcx, [print_function_applicationtexp]
mov qword [rax+88], rcx
mov rcx, [print_function_applicational]
mov qword [rax+96], rcx
mov rcx, [print_function_applicationar]
mov qword [rax+104], rcx
mov rcx, [print_function_applicationf4406]
mov qword [rax+112], rcx
mov qword [rax], 14
push rax
pop qword [print_function_applicationf1216]
push qword [print_function_applicationf1216]
jmp f4416_end
print_function_applicationf4416: dq 0
f4416_end:
push qword [print_function_applicationfl]
push qword [print_function_applicationfr]
push qword [print_function_applicationcontext]
push qword [print_function_applicationis_returning]
push qword [print_function_applicationgl]
push qword [print_function_applicationgr]
push qword [print_function_applicationappl]
push qword [print_function_applicationf0706]
push qword [print_function_applicationop_list]
push qword [print_function_applicationtexp]
push qword [print_function_applicational]
push qword [print_function_applicationar]
push qword [print_function_applicationf4406]
jmp f5416_end
print_function_applicationf5416: dq 0
f5416_end:
push qword [print_function_applicationfl]
push qword [print_function_applicationfr]
push qword [print_function_applicationcontext]
push qword [print_function_applicationis_returning]
push qword [print_function_applicationgl]
push qword [print_function_applicationgr]
push qword [print_function_applicationappl]
push qword [print_function_applicationf0706]
push qword [print_function_applicationop_list]
push qword [print_function_applicationtexp]
push qword [print_function_applicational]
push qword [print_function_applicationar]
push qword [print_function_applicationf4406]
jmp f6416_end
print_function_applicationf6416: dq 0
f6416_end:
push qword [print_function_applicationar]
pop qword [print_function_applicationf6416]
push qword [print_function_applicationf6416]
jmp f7416_end
print_function_applicationf7416: dq 0
f7416_end:
push qword [print_function_applicational]
pop qword [print_function_applicationf7416]
push qword [print_function_applicationf7416]
jmp f0516_end
print_function_applicationf0516: dq 0
f0516_end:
push qword [print_function_applicationcontext]
pop qword [print_function_applicationf0516]
push qword [print_function_applicationf0516]
call search_tree
push rax
pop qword [print_function_applicationf5416]
pop qword [print_function_applicationf4406]
pop qword [print_function_applicationar]
pop qword [print_function_applicational]
pop qword [print_function_applicationtexp]
pop qword [print_function_applicationop_list]
pop qword [print_function_applicationf0706]
pop qword [print_function_applicationappl]
pop qword [print_function_applicationgr]
pop qword [print_function_applicationgl]
pop qword [print_function_applicationis_returning]
pop qword [print_function_applicationcontext]
pop qword [print_function_applicationfr]
pop qword [print_function_applicationfl]
push qword [print_function_applicationf5416]
jmp f1516_end
print_function_applicationf1516: dq 0
f1516_end:
push qword [print_function_applicationfl]
push qword [print_function_applicationfr]
push qword [print_function_applicationcontext]
push qword [print_function_applicationis_returning]
push qword [print_function_applicationgl]
push qword [print_function_applicationgr]
push qword [print_function_applicationappl]
push qword [print_function_applicationf0706]
push qword [print_function_applicationop_list]
push qword [print_function_applicationtexp]
push qword [print_function_applicational]
push qword [print_function_applicationar]
push qword [print_function_applicationf4406]
jmp f2516_end
print_function_applicationf2516: dq 0
f2516_end:
push qword [print_function_applicationar]
pop qword [print_function_applicationf2516]
push qword [print_function_applicationf2516]
jmp f3516_end
print_function_applicationf3516: dq 0
f3516_end:
push qword [print_function_applicational]
pop qword [print_function_applicationf3516]
push qword [print_function_applicationf3516]
call eq
push rax
pop qword [print_function_applicationf1516]
pop qword [print_function_applicationf4406]
pop qword [print_function_applicationar]
pop qword [print_function_applicational]
pop qword [print_function_applicationtexp]
pop qword [print_function_applicationop_list]
pop qword [print_function_applicationf0706]
pop qword [print_function_applicationappl]
pop qword [print_function_applicationgr]
pop qword [print_function_applicationgl]
pop qword [print_function_applicationis_returning]
pop qword [print_function_applicationcontext]
pop qword [print_function_applicationfr]
pop qword [print_function_applicationfl]
push qword [print_function_applicationf1516]
call or
push rax
pop qword [print_function_applicationf4416]
pop qword [print_function_applicationf4406]
pop qword [print_function_applicationar]
pop qword [print_function_applicational]
pop qword [print_function_applicationtexp]
pop qword [print_function_applicationop_list]
pop qword [print_function_applicationf0706]
pop qword [print_function_applicationappl]
pop qword [print_function_applicationgr]
pop qword [print_function_applicationgl]
pop qword [print_function_applicationis_returning]
pop qword [print_function_applicationcontext]
pop qword [print_function_applicationfr]
pop qword [print_function_applicationfl]
push qword [print_function_applicationf4416]
call if_else
push rax
pop qword [print_function_applicationf5406]
pop qword [print_function_applicationf4406]
pop qword [print_function_applicationar]
pop qword [print_function_applicational]
pop qword [print_function_applicationtexp]
pop qword [print_function_applicationop_list]
pop qword [print_function_applicationf0706]
pop qword [print_function_applicationappl]
pop qword [print_function_applicationgr]
pop qword [print_function_applicationgl]
pop qword [print_function_applicationis_returning]
pop qword [print_function_applicationcontext]
pop qword [print_function_applicationfr]
pop qword [print_function_applicationfl]
ret
print_function_application_end:
jmp main_start_end
main_startret: dq 0
main_startlo: dq 0
main_starthi: dq 0
main_startf5516: dq 0
main_start:
pop qword [main_startret]
pop qword [main_startlo]
pop qword [main_starthi]
push qword [main_startret]
push qword [main_startlo]
push qword [main_starthi]
jmp f0616_end
main_startf0616: dq 0
f0616_end:
jmp f1616_end
f1616: db `section .rwx progbits alloc exec write align=16\nglobal _start\n_start:\n`
db 0
f1616_end: push f1616
pop qword [main_startf0616]
push qword [main_startf0616]
call printf
push rax
pop qword [main_startf5516]
pop qword [main_starthi]
pop qword [main_startlo]
pop qword [main_startret]
jmp f2616_end
main_startf2616: dq 0
f2616_end:
push qword [main_starthi]
pop qword [main_startf2616]
push qword [main_startf2616]
jmp f3616_end
main_startf3616: dq 0
f3616_end:
push qword [main_startlo]
pop qword [main_startf3616]
push qword [main_startf3616]
jmp f4616_end
main_startf4616: dq 0
f4616_end:
push qword [main_startret]
push qword [main_startlo]
push qword [main_starthi]
push qword [main_startf5516]
call make_nil
push rax
pop qword [main_startf4616]
pop qword [main_startf5516]
pop qword [main_starthi]
pop qword [main_startlo]
pop qword [main_startret]
push qword [main_startf4616]
jmp main_loop
main_start_end:
jmp main_loop_end
main_loopcontext: dq 0
main_loopl: dq 0
main_loopr: dq 0
main_loopf6616: dq 0
main_loopc: dq 0
main_loopf2716: dq 0
main_loopf7626: dq 0
main_loopmid: dq 0
main_loopf3726: dq 0
main_loop:
pop qword [main_loopcontext]
pop qword [main_loopl]
pop qword [main_loopr]
push qword [main_loopcontext]
push qword [main_loopl]
push qword [main_loopr]
jmp f6726_end
main_loopf6726: dq 0
f6726_end:
jmp f7616_end
f7616context: dq 0
f7616l: dq 0
f7616r: dq 0
f7616break: dq 0
f7616:
pop qword [f7616context]
pop qword [f7616l]
pop qword [f7616r]
pop qword [f7616break]
jmp exit
f7616_end:
mov rdi, 40
call malloc
mov qword [rax+8], f7616
mov rcx, [main_loopcontext]
mov qword [rax+16], rcx
mov rcx, [main_loopl]
mov qword [rax+24], rcx
mov rcx, [main_loopr]
mov qword [rax+32], rcx
mov qword [rax], 4
push rax
pop qword [main_loopf6726]
push qword [main_loopf6726]
jmp f7726_end
main_loopf7726: dq 0
f7726_end:
push qword [main_loopcontext]
push qword [main_loopl]
push qword [main_loopr]
jmp f0036_end
main_loopf0036: dq 0
f0036_end:
push qword [main_loopr]
pop qword [main_loopf0036]
push qword [main_loopf0036]
jmp f1036_end
main_loopf1036: dq 0
f1036_end:
push qword [main_loopl]
pop qword [main_loopf1036]
push qword [main_loopf1036]
call eq
push rax
pop qword [main_loopf7726]
pop qword [main_loopr]
pop qword [main_loopl]
pop qword [main_loopcontext]
push qword [main_loopf7726]
call if
push rax
pop qword [main_loopf6616]
pop qword [main_loopr]
pop qword [main_loopl]
pop qword [main_loopcontext]
push qword [main_loopcontext]
push qword [main_loopl]
push qword [main_loopr]
push qword [main_loopf6616]
jmp f2036_end
main_loopf2036: dq 0
f2036_end:
push qword [main_loopl]
pop qword [main_loopf2036]
push qword [main_loopf2036]
call deref_byte
push rax
pop qword [main_loopc]
pop qword [main_loopf6616]
pop qword [main_loopr]
pop qword [main_loopl]
pop qword [main_loopcontext]
jmp f3036_end
main_loopf3036: dq 0
f3036_end:
jmp f0026_end
f0026context: dq 0
f0026l: dq 0
f0026r: dq 0
f0026f6616: dq 0
f0026c: dq 0
f0026break: dq 0
f0026assign: dq 0
f0026tokenizer: dq 0
f0026rr: dq 0
f0026id_func: dq 0
f0026f1026: dq 0
f0026f0226: dq 0
f0026:
pop qword [f0026context]
pop qword [f0026l]
pop qword [f0026r]
pop qword [f0026f6616]
pop qword [f0026c]
pop qword [f0026break]
push qword [f0026context]
push qword [f0026l]
push qword [f0026r]
push qword [f0026f6616]
push qword [f0026c]
push qword [f0026break]
jmp f4036_end
f0026f4036: dq 0
f4036_end:
push qword [f0026context]
push qword [f0026l]
push qword [f0026r]
push qword [f0026f6616]
push qword [f0026c]
push qword [f0026break]
jmp f5036_end
f0026f5036: dq 0
f5036_end:
push qword [f0026r]
pop qword [f0026f5036]
push qword [f0026f5036]
jmp f6036_end
f0026f6036: dq 0
f6036_end:
push qword [f0026context]
push qword [f0026l]
push qword [f0026r]
push qword [f0026f6616]
push qword [f0026c]
push qword [f0026break]
jmp f7036_end
f0026f7036: dq 0
f7036_end:
push 1
pop qword [f0026f7036]
push qword [f0026f7036]
jmp f0136_end
f0026f0136: dq 0
f0136_end:
push qword [f0026l]
pop qword [f0026f0136]
push qword [f0026f0136]
call add
push rax
pop qword [f0026f6036]
pop qword [f0026break]
pop qword [f0026c]
pop qword [f0026f6616]
pop qword [f0026r]
pop qword [f0026l]
pop qword [f0026context]
push qword [f0026f6036]
call make_tokenizer
push rax
pop qword [f0026f4036]
pop qword [f0026break]
pop qword [f0026c]
pop qword [f0026f6616]
pop qword [f0026r]
pop qword [f0026l]
pop qword [f0026context]
push qword [f0026f4036]
call read_assignment
push rax
pop qword [f0026assign]
pop qword [f0026tokenizer]
pop qword [f0026break]
pop qword [f0026c]
pop qword [f0026f6616]
pop qword [f0026r]
pop qword [f0026l]
pop qword [f0026context]
push qword [f0026context]
push qword [f0026r]
push qword [f0026f6616]
push qword [f0026c]
push qword [f0026break]
push qword [f0026assign]
push qword [f0026tokenizer]
jmp f1136_end
f0026f1136: dq 0
f1136_end:
push qword [f0026tokenizer]
pop qword [f0026f1136]
push qword [f0026f1136]
call tokenizer_to_lr
push rax
pop qword [f0026l]
pop qword [f0026rr]
pop qword [f0026tokenizer]
pop qword [f0026assign]
pop qword [f0026break]
pop qword [f0026c]
pop qword [f0026f6616]
pop qword [f0026r]
pop qword [f0026context]
push qword [f0026context]
push qword [f0026r]
push qword [f0026f6616]
push qword [f0026c]
push qword [f0026break]
push qword [f0026assign]
push qword [f0026tokenizer]
push qword [f0026l]
push qword [f0026rr]
jmp f2136_end
f0026f2136: dq 0
f2136_end:
push qword [f0026assign]
pop qword [f0026f2136]
push qword [f0026f2136]
call assign_to_function
push rax
pop qword [f0026id_func]
pop qword [f0026rr]
pop qword [f0026l]
pop qword [f0026tokenizer]
pop qword [f0026assign]
pop qword [f0026break]
pop qword [f0026c]
pop qword [f0026f6616]
pop qword [f0026r]
pop qword [f0026context]
jmp f3136_end
f0026f3136: dq 0
f3136_end:
jmp f5026_end
f5026context: dq 0
f5026r: dq 0
f5026f6616: dq 0
f5026c: dq 0
f5026assign: dq 0
f5026tokenizer: dq 0
f5026l: dq 0
f5026rr: dq 0
f5026id_func: dq 0
f5026break: dq 0
f5026ids: dq 0
f5026f6026: dq 0
f5026f1126: dq 0
f5026:
pop qword [f5026context]
pop qword [f5026r]
pop qword [f5026f6616]
pop qword [f5026c]
pop qword [f5026assign]
pop qword [f5026tokenizer]
pop qword [f5026l]
pop qword [f5026rr]
pop qword [f5026id_func]
pop qword [f5026break]
push qword [f5026context]
push qword [f5026r]
push qword [f5026f6616]
push qword [f5026c]
push qword [f5026assign]
push qword [f5026tokenizer]
push qword [f5026l]
push qword [f5026rr]
push qword [f5026id_func]
push qword [f5026break]
jmp f4136_end
f5026f4136: dq 0
f4136_end:
push qword [f5026context]
pop qword [f5026f4136]
push qword [f5026f4136]
jmp f5136_end
f5026f5136: dq 0
f5136_end:
push qword [f5026context]
push qword [f5026r]
push qword [f5026f6616]
push qword [f5026c]
push qword [f5026assign]
push qword [f5026tokenizer]
push qword [f5026l]
push qword [f5026rr]
push qword [f5026id_func]
push qword [f5026break]
jmp f6136_end
f5026f6136: dq 0
f6136_end:
push qword [f5026assign]
pop qword [f5026f6136]
push qword [f5026f6136]
call get_assignment_vars
push rax
pop qword [f5026f5136]
pop qword [f5026break]
pop qword [f5026id_func]
pop qword [f5026rr]
pop qword [f5026l]
pop qword [f5026tokenizer]
pop qword [f5026assign]
pop qword [f5026c]
pop qword [f5026f6616]
pop qword [f5026r]
pop qword [f5026context]
push qword [f5026f5136]
call filter_context
push rax
pop qword [f5026ids]
pop qword [f5026break]
pop qword [f5026id_func]
pop qword [f5026rr]
pop qword [f5026l]
pop qword [f5026tokenizer]
pop qword [f5026assign]
pop qword [f5026c]
pop qword [f5026f6616]
pop qword [f5026r]
pop qword [f5026context]
push qword [f5026context]
push qword [f5026r]
push qword [f5026f6616]
push qword [f5026c]
push qword [f5026assign]
push qword [f5026tokenizer]
push qword [f5026l]
push qword [f5026rr]
push qword [f5026id_func]
push qword [f5026break]
push qword [f5026ids]
jmp f7136_end
f5026f7136: dq 0
f7136_end:
jmp f7026_end
f7026context: dq 0
f7026f6616: dq 0
f7026c: dq 0
f7026assign: dq 0
f7026tokenizer: dq 0
f7026rr: dq 0
f7026id_func: dq 0
f7026break: dq 0
f7026ids: dq 0
f7026l: dq 0
f7026r: dq 0
f7026f0236: dq 0
f7026:
pop rax
pop qword [f7026context]
pop qword [f7026f6616]
pop qword [f7026c]
pop qword [f7026assign]
pop qword [f7026tokenizer]
pop qword [f7026rr]
pop qword [f7026id_func]
pop qword [f7026break]
pop qword [f7026ids]
pop qword [f7026l]
pop qword [f7026r]
push rax
mov [f7026f0236], rsp
mov rsp, [f7026f0236]
jmp f1236_end
f7026f1236: dq 0
f1236_end:
push qword [f7026context]
push qword [f7026f6616]
push qword [f7026c]
push qword [f7026assign]
push qword [f7026tokenizer]
push qword [f7026rr]
push qword [f7026id_func]
push qword [f7026break]
push qword [f7026ids]
push qword [f7026l]
push qword [f7026r]
push qword [f7026f0236]
jmp f2236_end
f7026f2236: dq 0
f2236_end:
push qword [f7026r]
pop qword [f7026f2236]
push qword [f7026f2236]
jmp f3236_end
f7026f3236: dq 0
f3236_end:
push qword [f7026l]
pop qword [f7026f3236]
push qword [f7026f3236]
jmp f4236_end
f7026f4236: dq 0
f4236_end:
push qword [f7026r]
pop qword [f7026f4236]
push qword [f7026f4236]
jmp f5236_end
f7026f5236: dq 0
f5236_end:
push qword [f7026l]
pop qword [f7026f5236]
push qword [f7026f5236]
jmp f6236_end
f7026f6236: dq 0
f6236_end:
push qword [f7026r]
pop qword [f7026f6236]
push qword [f7026f6236]
jmp f7236_end
f7026f7236: dq 0
f7236_end:
push qword [f7026l]
pop qword [f7026f7236]
push qword [f7026f7236]
jmp f0336_end
f7026f0336: dq 0
f0336_end:
jmp f1336_end
f1336: db `jmp {}_end\n{}: dq 0\n{}_end:\n`
db 0
f1336_end: push f1336
pop qword [f7026f0336]
push qword [f7026f0336]
call printf
push rax
pop qword [f7026f1236]
pop qword [f7026f0236]
pop qword [f7026r]
pop qword [f7026l]
pop qword [f7026ids]
pop qword [f7026break]
pop qword [f7026id_func]
pop qword [f7026rr]
pop qword [f7026tokenizer]
pop qword [f7026assign]
pop qword [f7026c]
pop qword [f7026f6616]
pop qword [f7026context]
pop rax
push qword [f7026f1236]
push rax
pop rcx
pop rax
jmp rcx
ret
f7026_end:
mov rdi, 88
call malloc
mov qword [rax+8], f7026
mov rcx, [f5026context]
mov qword [rax+16], rcx
mov rcx, [f5026f6616]
mov qword [rax+24], rcx
mov rcx, [f5026c]
mov qword [rax+32], rcx
mov rcx, [f5026assign]
mov qword [rax+40], rcx
mov rcx, [f5026tokenizer]
mov qword [rax+48], rcx
mov rcx, [f5026rr]
mov qword [rax+56], rcx
mov rcx, [f5026id_func]
mov qword [rax+64], rcx
mov rcx, [f5026break]
mov qword [rax+72], rcx
mov rcx, [f5026ids]
mov qword [rax+80], rcx
mov qword [rax], 10
push rax
pop qword [f5026f7136]
push qword [f5026f7136]
jmp f2336_end
f5026f2336: dq 0
f2336_end:
push qword [f5026ids]
pop qword [f5026f2336]
push qword [f5026f2336]
call map_tree
push rax
pop qword [f5026f6026]
pop qword [f5026ids]
pop qword [f5026break]
pop qword [f5026id_func]
pop qword [f5026rr]
pop qword [f5026l]
pop qword [f5026tokenizer]
pop qword [f5026assign]
pop qword [f5026c]
pop qword [f5026f6616]
pop qword [f5026r]
pop qword [f5026context]
push qword [f5026context]
push qword [f5026r]
push qword [f5026f6616]
push qword [f5026c]
push qword [f5026assign]
push qword [f5026tokenizer]
push qword [f5026l]
push qword [f5026rr]
push qword [f5026id_func]
push qword [f5026break]
push qword [f5026ids]
push qword [f5026f6026]
jmp f3336_end
f5026f3336: dq 0
f3336_end:
push qword [f5026assign]
pop qword [f5026f3336]
push qword [f5026f3336]
jmp f4336_end
f5026f4336: dq 0
f4336_end:
push 0
pop qword [f5026f4336]
push qword [f5026f4336]
jmp f5336_end
f5026f5336: dq 0
f5336_end:
push 0
pop qword [f5026f5336]
push qword [f5026f5336]
jmp f6336_end
f5026f6336: dq 0
f6336_end:
jmp f2126_end
f2126context: dq 0
f2126r: dq 0
f2126f6616: dq 0
f2126c: dq 0
f2126assign: dq 0
f2126tokenizer: dq 0
f2126l: dq 0
f2126rr: dq 0
f2126id_func: dq 0
f2126break: dq 0
f2126ids: dq 0
f2126f6026: dq 0
f2126a: dq 0
f2126b: dq 0
f2126:
pop qword [f2126context]
pop qword [f2126r]
pop qword [f2126f6616]
pop qword [f2126c]
pop qword [f2126assign]
pop qword [f2126tokenizer]
pop qword [f2126l]
pop qword [f2126rr]
pop qword [f2126id_func]
pop qword [f2126break]
pop qword [f2126ids]
pop qword [f2126f6026]
pop qword [f2126a]
pop qword [f2126b]
push qword [f2126a]
jmp runtime_call
f2126_end:
mov rdi, 112
call malloc
mov qword [rax+8], f2126
mov rcx, [f5026context]
mov qword [rax+16], rcx
mov rcx, [f5026r]
mov qword [rax+24], rcx
mov rcx, [f5026f6616]
mov qword [rax+32], rcx
mov rcx, [f5026c]
mov qword [rax+40], rcx
mov rcx, [f5026assign]
mov qword [rax+48], rcx
mov rcx, [f5026tokenizer]
mov qword [rax+56], rcx
mov rcx, [f5026l]
mov qword [rax+64], rcx
mov rcx, [f5026rr]
mov qword [rax+72], rcx
mov rcx, [f5026id_func]
mov qword [rax+80], rcx
mov rcx, [f5026break]
mov qword [rax+88], rcx
mov rcx, [f5026ids]
mov qword [rax+96], rcx
mov rcx, [f5026f6026]
mov qword [rax+104], rcx
mov qword [rax], 13
push rax
pop qword [f5026f6336]
push qword [f5026f6336]
jmp f7336_end
f5026f7336: dq 0
f7336_end:
push qword [f5026context]
push qword [f5026r]
push qword [f5026f6616]
push qword [f5026c]
push qword [f5026assign]
push qword [f5026tokenizer]
push qword [f5026l]
push qword [f5026rr]
push qword [f5026id_func]
push qword [f5026break]
push qword [f5026ids]
push qword [f5026f6026]
call make_nil
push rax
pop qword [f5026f7336]
pop qword [f5026f6026]
pop qword [f5026ids]
pop qword [f5026break]
pop qword [f5026id_func]
pop qword [f5026rr]
pop qword [f5026l]
pop qword [f5026tokenizer]
pop qword [f5026assign]
pop qword [f5026c]
pop qword [f5026f6616]
pop qword [f5026r]
pop qword [f5026context]
push qword [f5026f7336]
jmp f0436_end
f5026f0436: dq 0
f0436_end:
push 0
pop qword [f5026f0436]
push qword [f5026f0436]
jmp f1436_end
f5026f1436: dq 0
f1436_end:
push 0
pop qword [f5026f1436]
push qword [f5026f1436]
call print_assignment
push rax
pop qword [f5026f1126]
pop qword [f5026f6026]
pop qword [f5026ids]
pop qword [f5026break]
pop qword [f5026id_func]
pop qword [f5026rr]
pop qword [f5026l]
pop qword [f5026tokenizer]
pop qword [f5026assign]
pop qword [f5026c]
pop qword [f5026f6616]
pop qword [f5026r]
pop qword [f5026context]
jmp f2436_end
f5026f2436: dq 0
f2436_end:
push qword [f5026r]
pop qword [f5026f2436]
push qword [f5026f2436]
jmp f3436_end
f5026f3436: dq 0
f3436_end:
push qword [f5026l]
pop qword [f5026f3436]
push qword [f5026f3436]
jmp f4436_end
f5026f4436: dq 0
f4436_end:
push qword [f5026context]
push qword [f5026r]
push qword [f5026f6616]
push qword [f5026c]
push qword [f5026assign]
push qword [f5026tokenizer]
push qword [f5026l]
push qword [f5026rr]
push qword [f5026id_func]
push qword [f5026break]
push qword [f5026ids]
push qword [f5026f6026]
push qword [f5026f1126]
jmp f5436_end
f5026f5436: dq 0
f5436_end:
push qword [f5026ids]
pop qword [f5026f5436]
push qword [f5026f5436]
jmp f6436_end
f5026f6436: dq 0
f6436_end:
push qword [f5026context]
pop qword [f5026f6436]
push qword [f5026f6436]
call make_internal
push rax
pop qword [f5026f4436]
pop qword [f5026f1126]
pop qword [f5026f6026]
pop qword [f5026ids]
pop qword [f5026break]
pop qword [f5026id_func]
pop qword [f5026rr]
pop qword [f5026l]
pop qword [f5026tokenizer]
pop qword [f5026assign]
pop qword [f5026c]
pop qword [f5026f6616]
pop qword [f5026r]
pop qword [f5026context]
push qword [f5026f4436]
jmp main_loop
f5026_end:
mov rdi, 88
call malloc
mov qword [rax+8], f5026
mov rcx, [f0026context]
mov qword [rax+16], rcx
mov rcx, [f0026r]
mov qword [rax+24], rcx
mov rcx, [f0026f6616]
mov qword [rax+32], rcx
mov rcx, [f0026c]
mov qword [rax+40], rcx
mov rcx, [f0026assign]
mov qword [rax+48], rcx
mov rcx, [f0026tokenizer]
mov qword [rax+56], rcx
mov rcx, [f0026l]
mov qword [rax+64], rcx
mov rcx, [f0026rr]
mov qword [rax+72], rcx
mov rcx, [f0026id_func]
mov qword [rax+80], rcx
mov qword [rax], 10
push rax
pop qword [f0026f3136]
push qword [f0026f3136]
jmp f7436_end
f0026f7436: dq 0
f7436_end:
jmp f0536_end
f0026f0536: dq 0
f0536_end:
push 0
pop qword [f0026f0536]
push qword [f0026f0536]
jmp f1536_end
f0026f1536: dq 0
f1536_end:
push qword [f0026id_func]
pop qword [f0026f1536]
push qword [f0026f1536]
call eq
push rax
pop qword [f0026f7436]
push qword [f0026f7436]
call if
push rax
pop qword [f0026f1026]
jmp f2536_end
f0026f2536: dq 0
f2536_end:
jmp f4226_end
f4226context: dq 0
f4226r: dq 0
f4226f6616: dq 0
f4226c: dq 0
f4226assign: dq 0
f4226tokenizer: dq 0
f4226l: dq 0
f4226rr: dq 0
f4226id_func: dq 0
f4226f1026: dq 0
f4226break: dq 0
f4226ids: dq 0
f4226func: dq 0
f4226fname: dq 0
f4226fname_l: dq 0
f4226fname_r: dq 0
f4226func_args: dq 0
f4226is_returning: dq 0
f4226cexp: dq 0
f4226:
pop qword [f4226context]
pop qword [f4226r]
pop qword [f4226f6616]
pop qword [f4226c]
pop qword [f4226assign]
pop qword [f4226tokenizer]
pop qword [f4226l]
pop qword [f4226rr]
pop qword [f4226id_func]
pop qword [f4226f1026]
pop qword [f4226break]
push qword [f4226context]
push qword [f4226r]
push qword [f4226f6616]
push qword [f4226c]
push qword [f4226assign]
push qword [f4226tokenizer]
push qword [f4226l]
push qword [f4226rr]
push qword [f4226id_func]
push qword [f4226f1026]
push qword [f4226break]
push qword [f4226id_func]
call runtime_call_ret
push rax
pop qword [f4226ids]
pop qword [f4226func]
pop qword [f4226break]
pop qword [f4226f1026]
pop qword [f4226id_func]
pop qword [f4226rr]
pop qword [f4226l]
pop qword [f4226tokenizer]
pop qword [f4226assign]
pop qword [f4226c]
pop qword [f4226f6616]
pop qword [f4226r]
pop qword [f4226context]
push qword [f4226context]
push qword [f4226r]
push qword [f4226f6616]
push qword [f4226c]
push qword [f4226assign]
push qword [f4226tokenizer]
push qword [f4226l]
push qword [f4226rr]
push qword [f4226id_func]
push qword [f4226f1026]
push qword [f4226break]
push qword [f4226ids]
push qword [f4226func]
jmp f3536_end
f4226f3536: dq 0
f3536_end:
push qword [f4226ids]
pop qword [f4226f3536]
push qword [f4226f3536]
call first_leaf
push rax
pop qword [f4226fname]
pop qword [f4226func]
pop qword [f4226ids]
pop qword [f4226break]
pop qword [f4226f1026]
pop qword [f4226id_func]
pop qword [f4226rr]
pop qword [f4226l]
pop qword [f4226tokenizer]
pop qword [f4226assign]
pop qword [f4226c]
pop qword [f4226f6616]
pop qword [f4226r]
pop qword [f4226context]
push qword [f4226context]
push qword [f4226r]
push qword [f4226f6616]
push qword [f4226c]
push qword [f4226assign]
push qword [f4226tokenizer]
push qword [f4226l]
push qword [f4226rr]
push qword [f4226id_func]
push qword [f4226f1026]
push qword [f4226break]
push qword [f4226ids]
push qword [f4226func]
push qword [f4226fname]
push qword [f4226func]
call runtime_call_ret
push rax
pop qword [f4226fname_l]
pop qword [f4226fname_r]
pop qword [f4226func_args]
pop qword [f4226is_returning]
pop qword [f4226cexp]
pop qword [f4226fname]
pop qword [f4226func]
pop qword [f4226ids]
pop qword [f4226break]
pop qword [f4226f1026]
pop qword [f4226id_func]
pop qword [f4226rr]
pop qword [f4226l]
pop qword [f4226tokenizer]
pop qword [f4226assign]
pop qword [f4226c]
pop qword [f4226f6616]
pop qword [f4226r]
pop qword [f4226context]
jmp f4536_end
f4226f4536: dq 0
f4536_end:
jmp f7526_end
f7526context: dq 0
f7526r: dq 0
f7526f6616: dq 0
f7526c: dq 0
f7526assign: dq 0
f7526tokenizer: dq 0
f7526l: dq 0
f7526rr: dq 0
f7526id_func: dq 0
f7526f1026: dq 0
f7526break: dq 0
f7526ids: dq 0
f7526func: dq 0
f7526fname: dq 0
f7526fname_l: dq 0
f7526fname_r: dq 0
f7526func_args: dq 0
f7526is_returning: dq 0
f7526cexp: dq 0
f7526a: dq 0
f7526b: dq 0
f7526:
pop qword [f7526context]
pop qword [f7526r]
pop qword [f7526f6616]
pop qword [f7526c]
pop qword [f7526assign]
pop qword [f7526tokenizer]
pop qword [f7526l]
pop qword [f7526rr]
pop qword [f7526id_func]
pop qword [f7526f1026]
pop qword [f7526break]
pop qword [f7526ids]
pop qword [f7526func]
pop qword [f7526fname]
pop qword [f7526fname_l]
pop qword [f7526fname_r]
pop qword [f7526func_args]
pop qword [f7526is_returning]
pop qword [f7526cexp]
pop qword [f7526a]
pop qword [f7526b]
push qword [f7526break]
jmp runtime_call
f7526_end:
mov rdi, 168
call malloc
mov qword [rax+8], f7526
mov rcx, [f4226context]
mov qword [rax+16], rcx
mov rcx, [f4226r]
mov qword [rax+24], rcx
mov rcx, [f4226f6616]
mov qword [rax+32], rcx
mov rcx, [f4226c]
mov qword [rax+40], rcx
mov rcx, [f4226assign]
mov qword [rax+48], rcx
mov rcx, [f4226tokenizer]
mov qword [rax+56], rcx
mov rcx, [f4226l]
mov qword [rax+64], rcx
mov rcx, [f4226rr]
mov qword [rax+72], rcx
mov rcx, [f4226id_func]
mov qword [rax+80], rcx
mov rcx, [f4226f1026]
mov qword [rax+88], rcx
mov rcx, [f4226break]
mov qword [rax+96], rcx
mov rcx, [f4226ids]
mov qword [rax+104], rcx
mov rcx, [f4226func]
mov qword [rax+112], rcx
mov rcx, [f4226fname]
mov qword [rax+120], rcx
mov rcx, [f4226fname_l]
mov qword [rax+128], rcx
mov rcx, [f4226fname_r]
mov qword [rax+136], rcx
mov rcx, [f4226func_args]
mov qword [rax+144], rcx
mov rcx, [f4226is_returning]
mov qword [rax+152], rcx
mov rcx, [f4226cexp]
mov qword [rax+160], rcx
mov qword [rax], 20
push rax
pop qword [f4226f4536]
push qword [f4226f4536]
jmp f5536_end
f4226f5536: dq 0
f5536_end:
jmp f7426_end
f7426context: dq 0
f7426f6616: dq 0
f7426c: dq 0
f7426assign: dq 0
f7426tokenizer: dq 0
f7426rr: dq 0
f7426id_func: dq 0
f7426f1026: dq 0
f7426break: dq 0
f7426ids: dq 0
f7426func: dq 0
f7426fname: dq 0
f7426fname_l: dq 0
f7426fname_r: dq 0
f7426func_args: dq 0
f7426is_returning: dq 0
f7426cexp: dq 0
f7426l: dq 0
f7426r: dq 0
f7426f2526: dq 0
f7426:
pop qword [f7426context]
pop qword [f7426f6616]
pop qword [f7426c]
pop qword [f7426assign]
pop qword [f7426tokenizer]
pop qword [f7426rr]
pop qword [f7426id_func]
pop qword [f7426f1026]
pop qword [f7426break]
pop qword [f7426ids]
pop qword [f7426func]
pop qword [f7426fname]
pop qword [f7426fname_l]
pop qword [f7426fname_r]
pop qword [f7426func_args]
pop qword [f7426is_returning]
pop qword [f7426cexp]
pop qword [f7426l]
pop qword [f7426r]
jmp f0526_end
f0526context: dq 0
f0526f6616: dq 0
f0526c: dq 0
f0526assign: dq 0
f0526tokenizer: dq 0
f0526rr: dq 0
f0526id_func: dq 0
f0526f1026: dq 0
f0526break: dq 0
f0526ids: dq 0
f0526func: dq 0
f0526fname: dq 0
f0526fname_l: dq 0
f0526fname_r: dq 0
f0526func_args: dq 0
f0526is_returning: dq 0
f0526cexp: dq 0
f0526l: dq 0
f0526r: dq 0
f0526f6536: dq 0
f0526:
pop rax
pop qword [f0526context]
pop qword [f0526f6616]
pop qword [f0526c]
pop qword [f0526assign]
pop qword [f0526tokenizer]
pop qword [f0526rr]
pop qword [f0526id_func]
pop qword [f0526f1026]
pop qword [f0526break]
pop qword [f0526ids]
pop qword [f0526func]
pop qword [f0526fname]
pop qword [f0526fname_l]
pop qword [f0526fname_r]
pop qword [f0526func_args]
pop qword [f0526is_returning]
pop qword [f0526cexp]
pop qword [f0526l]
pop qword [f0526r]
push rax
mov [f0526f6536], rsp
mov rsp, [f0526f6536]
jmp f7536_end
f0526f7536: dq 0
f7536_end:
push qword [f0526cexp]
pop qword [f0526f7536]
pop rax
push qword [f0526f7536]
push rax
jmp f0636_end
f0526f0636: dq 0
f0636_end:
push qword [f0526is_returning]
pop qword [f0526f0636]
pop rax
push qword [f0526f0636]
push rax
jmp f1636_end
f0526f1636: dq 0
f1636_end:
push qword [f0526func_args]
pop qword [f0526f1636]
pop rax
push qword [f0526f1636]
push rax
jmp f2636_end
f0526f2636: dq 0
f2636_end:
push qword [f0526r]
pop qword [f0526f2636]
pop rax
push qword [f0526f2636]
push rax
jmp f3636_end
f0526f3636: dq 0
f3636_end:
push qword [f0526l]
pop qword [f0526f3636]
pop rax
push qword [f0526f3636]
push rax
pop rcx
pop rax
jmp rcx
ret
f0526_end:
mov rdi, 168
call malloc
mov qword [rax+8], f0526
mov rcx, [f7426context]
mov qword [rax+16], rcx
mov rcx, [f7426f6616]
mov qword [rax+24], rcx
mov rcx, [f7426c]
mov qword [rax+32], rcx
mov rcx, [f7426assign]
mov qword [rax+40], rcx
mov rcx, [f7426tokenizer]
mov qword [rax+48], rcx
mov rcx, [f7426rr]
mov qword [rax+56], rcx
mov rcx, [f7426id_func]
mov qword [rax+64], rcx
mov rcx, [f7426f1026]
mov qword [rax+72], rcx
mov rcx, [f7426break]
mov qword [rax+80], rcx
mov rcx, [f7426ids]
mov qword [rax+88], rcx
mov rcx, [f7426func]
mov qword [rax+96], rcx
mov rcx, [f7426fname]
mov qword [rax+104], rcx
mov rcx, [f7426fname_l]
mov qword [rax+112], rcx
mov rcx, [f7426fname_r]
mov qword [rax+120], rcx
mov rcx, [f7426func_args]
mov qword [rax+128], rcx
mov rcx, [f7426is_returning]
mov qword [rax+136], rcx
mov rcx, [f7426cexp]
mov qword [rax+144], rcx
mov rcx, [f7426l]
mov qword [rax+152], rcx
mov rcx, [f7426r]
mov qword [rax+160], rcx
mov qword [rax], 20
push rax
pop qword [f7426func]
jmp f4636_end
f7426f4636: dq 0
f4636_end:
push qword [f7426func]
pop qword [f7426f4636]
push qword [f7426f4636]
jmp f5636_end
f7426f5636: dq 0
f5636_end:
push 0
pop qword [f7426f5636]
push qword [f7426f5636]
jmp f6636_end
f7426f6636: dq 0
f6636_end:
push 0
pop qword [f7426f6636]
push qword [f7426f6636]
jmp f7636_end
f7426f7636: dq 0
f7636_end:
push qword [f7426context]
push qword [f7426f6616]
push qword [f7426c]
push qword [f7426assign]
push qword [f7426tokenizer]
push qword [f7426rr]
push qword [f7426id_func]
push qword [f7426f1026]
push qword [f7426break]
push qword [f7426ids]
push qword [f7426fname]
push qword [f7426fname_l]
push qword [f7426fname_r]
push qword [f7426func_args]
push qword [f7426is_returning]
push qword [f7426cexp]
push qword [f7426l]
push qword [f7426r]
push qword [f7426func]
call make_nil
push rax
pop qword [f7426f7636]
pop qword [f7426func]
pop qword [f7426r]
pop qword [f7426l]
pop qword [f7426cexp]
pop qword [f7426is_returning]
pop qword [f7426func_args]
pop qword [f7426fname_r]
pop qword [f7426fname_l]
pop qword [f7426fname]
pop qword [f7426ids]
pop qword [f7426break]
pop qword [f7426f1026]
pop qword [f7426id_func]
pop qword [f7426rr]
pop qword [f7426tokenizer]
pop qword [f7426assign]
pop qword [f7426c]
pop qword [f7426f6616]
pop qword [f7426context]
push qword [f7426f7636]
call print_function
push rax
pop qword [f7426f2526]
push qword [f7426break]
jmp runtime_call
f7426_end:
mov rdi, 152
call malloc
mov qword [rax+8], f7426
mov rcx, [f4226context]
mov qword [rax+16], rcx
mov rcx, [f4226f6616]
mov qword [rax+24], rcx
mov rcx, [f4226c]
mov qword [rax+32], rcx
mov rcx, [f4226assign]
mov qword [rax+40], rcx
mov rcx, [f4226tokenizer]
mov qword [rax+48], rcx
mov rcx, [f4226rr]
mov qword [rax+56], rcx
mov rcx, [f4226id_func]
mov qword [rax+64], rcx
mov rcx, [f4226f1026]
mov qword [rax+72], rcx
mov rcx, [f4226break]
mov qword [rax+80], rcx
mov rcx, [f4226ids]
mov qword [rax+88], rcx
mov rcx, [f4226func]
mov qword [rax+96], rcx
mov rcx, [f4226fname]
mov qword [rax+104], rcx
mov rcx, [f4226fname_l]
mov qword [rax+112], rcx
mov rcx, [f4226fname_r]
mov qword [rax+120], rcx
mov rcx, [f4226func_args]
mov qword [rax+128], rcx
mov rcx, [f4226is_returning]
mov qword [rax+136], rcx
mov rcx, [f4226cexp]
mov qword [rax+144], rcx
mov qword [rax], 18
push rax
pop qword [f4226f5536]
push qword [f4226f5536]
jmp f0736_end
f4226f0736: dq 0
f0736_end:
jmp f4426_end
f4426context: dq 0
f4426r: dq 0
f4426f6616: dq 0
f4426c: dq 0
f4426assign: dq 0
f4426tokenizer: dq 0
f4426l: dq 0
f4426rr: dq 0
f4426id_func: dq 0
f4426f1026: dq 0
f4426break: dq 0
f4426ids: dq 0
f4426func: dq 0
f4426fname: dq 0
f4426fname_l: dq 0
f4426fname_r: dq 0
f4426func_args: dq 0
f4426is_returning: dq 0
f4426cexp: dq 0
f4426:
pop qword [f4426context]
pop qword [f4426r]
pop qword [f4426f6616]
pop qword [f4426c]
pop qword [f4426assign]
pop qword [f4426tokenizer]
pop qword [f4426l]
pop qword [f4426rr]
pop qword [f4426id_func]
pop qword [f4426f1026]
pop qword [f4426break]
pop qword [f4426ids]
pop qword [f4426func]
pop qword [f4426fname]
pop qword [f4426fname_l]
pop qword [f4426fname_r]
pop qword [f4426func_args]
pop qword [f4426is_returning]
pop qword [f4426cexp]
push qword [f4426break]
jmp runtime_call
f4426_end:
mov rdi, 168
call malloc
mov qword [rax+8], f4426
mov rcx, [f4226context]
mov qword [rax+16], rcx
mov rcx, [f4226r]
mov qword [rax+24], rcx
mov rcx, [f4226f6616]
mov qword [rax+32], rcx
mov rcx, [f4226c]
mov qword [rax+40], rcx
mov rcx, [f4226assign]
mov qword [rax+48], rcx
mov rcx, [f4226tokenizer]
mov qword [rax+56], rcx
mov rcx, [f4226l]
mov qword [rax+64], rcx
mov rcx, [f4226rr]
mov qword [rax+72], rcx
mov rcx, [f4226id_func]
mov qword [rax+80], rcx
mov rcx, [f4226f1026]
mov qword [rax+88], rcx
mov rcx, [f4226break]
mov qword [rax+96], rcx
mov rcx, [f4226ids]
mov qword [rax+104], rcx
mov rcx, [f4226func]
mov qword [rax+112], rcx
mov rcx, [f4226fname]
mov qword [rax+120], rcx
mov rcx, [f4226fname_l]
mov qword [rax+128], rcx
mov rcx, [f4226fname_r]
mov qword [rax+136], rcx
mov rcx, [f4226func_args]
mov qword [rax+144], rcx
mov rcx, [f4226is_returning]
mov qword [rax+152], rcx
mov rcx, [f4226cexp]
mov qword [rax+160], rcx
mov qword [rax], 20
push rax
pop qword [f4226f0736]
push qword [f4226f0736]
push qword [f4226fname]
jmp runtime_call
f4226_end:
mov rdi, 96
call malloc
mov qword [rax+8], f4226
mov rcx, [f0026context]
mov qword [rax+16], rcx
mov rcx, [f0026r]
mov qword [rax+24], rcx
mov rcx, [f0026f6616]
mov qword [rax+32], rcx
mov rcx, [f0026c]
mov qword [rax+40], rcx
mov rcx, [f0026assign]
mov qword [rax+48], rcx
mov rcx, [f0026tokenizer]
mov qword [rax+56], rcx
mov rcx, [f0026l]
mov qword [rax+64], rcx
mov rcx, [f0026rr]
mov qword [rax+72], rcx
mov rcx, [f0026id_func]
mov qword [rax+80], rcx
mov rcx, [f0026f1026]
mov qword [rax+88], rcx
mov qword [rax], 11
push rax
pop qword [f0026f2536]
push qword [f0026f2536]
jmp f1736_end
f0026f1736: dq 0
f1736_end:
jmp f2736_end
f0026f2736: dq 0
f2736_end:
push 0
pop qword [f0026f2736]
push qword [f0026f2736]
jmp f3736_end
f0026f3736: dq 0
f3736_end:
push qword [f0026id_func]
pop qword [f0026f3736]
push qword [f0026f3736]
call ne
push rax
pop qword [f0026f1736]
push qword [f0026f1736]
call if
push rax
pop qword [f0026f0226]
jmp f4736_end
f0026f4736: dq 0
f4736_end:
push qword [f0026r]
pop qword [f0026f4736]
push qword [f0026f4736]
jmp f5736_end
f0026f5736: dq 0
f5736_end:
push qword [f0026l]
pop qword [f0026f5736]
push qword [f0026f5736]
jmp f6736_end
f0026f6736: dq 0
f6736_end:
push qword [f0026context]
pop qword [f0026f6736]
push qword [f0026f6736]
jmp main_loop
f0026_end:
mov rdi, 56
call malloc
mov qword [rax+8], f0026
mov rcx, [main_loopcontext]
mov qword [rax+16], rcx
mov rcx, [main_loopl]
mov qword [rax+24], rcx
mov rcx, [main_loopr]
mov qword [rax+32], rcx
mov rcx, [main_loopf6616]
mov qword [rax+40], rcx
mov rcx, [main_loopc]
mov qword [rax+48], rcx
mov qword [rax], 6
push rax
pop qword [main_loopf3036]
push qword [main_loopf3036]
jmp f7736_end
main_loopf7736: dq 0
f7736_end:
jmp f0046_end
main_loopf0046: dq 0
f0046_end:
jmp f1046_end
main_loopf1046: dq 0
f1046_end:
jmp f2046_end
f2046: db `$`
db 0
f2046_end: push f2046
pop qword [main_loopf1046]
push qword [main_loopf1046]
call deref_byte
push rax
pop qword [main_loopf0046]
push qword [main_loopf0046]
jmp f3046_end
main_loopf3046: dq 0
f3046_end:
push qword [main_loopc]
pop qword [main_loopf3046]
push qword [main_loopf3046]
call eq
push rax
pop qword [main_loopf7736]
push qword [main_loopf7736]
call if
push rax
pop qword [main_loopf2716]
push qword [main_loopcontext]
push qword [main_loopl]
push qword [main_loopr]
push qword [main_loopf6616]
push qword [main_loopc]
push qword [main_loopf2716]
jmp f4046_end
main_loopf4046: dq 0
f4046_end:
jmp f0726_end
f0726context: dq 0
f0726l: dq 0
f0726r: dq 0
f0726f6616: dq 0
f0726c: dq 0
f0726f2716: dq 0
f0726break: dq 0
f0726:
pop qword [f0726context]
pop qword [f0726l]
pop qword [f0726r]
pop qword [f0726f6616]
pop qword [f0726c]
pop qword [f0726f2716]
pop qword [f0726break]
push qword [f0726context]
push qword [f0726f6616]
push qword [f0726c]
push qword [f0726f2716]
push qword [f0726break]
jmp f5046_end
f0726f5046: dq 0
f5046_end:
push qword [f0726r]
pop qword [f0726f5046]
push qword [f0726f5046]
jmp f6046_end
f0726f6046: dq 0
f6046_end:
push qword [f0726l]
pop qword [f0726f6046]
push qword [f0726f6046]
jmp f7046_end
f0726f7046: dq 0
f7046_end:
push qword [f0726context]
push qword [f0726l]
push qword [f0726r]
push qword [f0726f6616]
push qword [f0726c]
push qword [f0726f2716]
push qword [f0726break]
jmp f0146_end
f0726f0146: dq 0
f0146_end:
jmp f1146_end
f1146: db `\n`
db 0
f1146_end: push f1146
pop qword [f0726f0146]
push qword [f0726f0146]
call deref_byte
push rax
pop qword [f0726f7046]
pop qword [f0726break]
pop qword [f0726f2716]
pop qword [f0726c]
pop qword [f0726f6616]
pop qword [f0726r]
pop qword [f0726l]
pop qword [f0726context]
push qword [f0726f7046]
call read_until
push rax
pop qword [f0726l]
pop qword [f0726r]
pop qword [f0726break]
pop qword [f0726f2716]
pop qword [f0726c]
pop qword [f0726f6616]
pop qword [f0726context]
jmp f2146_end
f0726f2146: dq 0
f2146_end:
push qword [f0726r]
pop qword [f0726f2146]
push qword [f0726f2146]
jmp f3146_end
f0726f3146: dq 0
f3146_end:
push qword [f0726l]
pop qword [f0726f3146]
push qword [f0726f3146]
jmp f4146_end
f0726f4146: dq 0
f4146_end:
push qword [f0726context]
pop qword [f0726f4146]
push qword [f0726f4146]
jmp main_loop
f0726_end:
mov rdi, 64
call malloc
mov qword [rax+8], f0726
mov rcx, [main_loopcontext]
mov qword [rax+16], rcx
mov rcx, [main_loopl]
mov qword [rax+24], rcx
mov rcx, [main_loopr]
mov qword [rax+32], rcx
mov rcx, [main_loopf6616]
mov qword [rax+40], rcx
mov rcx, [main_loopc]
mov qword [rax+48], rcx
mov rcx, [main_loopf2716]
mov qword [rax+56], rcx
mov qword [rax], 7
push rax
pop qword [main_loopf4046]
push qword [main_loopf4046]
jmp f5146_end
main_loopf5146: dq 0
f5146_end:
push qword [main_loopcontext]
push qword [main_loopl]
push qword [main_loopr]
push qword [main_loopf6616]
push qword [main_loopc]
push qword [main_loopf2716]
jmp f6146_end
main_loopf6146: dq 0
f6146_end:
push 59
pop qword [main_loopf6146]
push qword [main_loopf6146]
jmp f7146_end
main_loopf7146: dq 0
f7146_end:
push qword [main_loopc]
pop qword [main_loopf7146]
push qword [main_loopf7146]
call eq
push rax
pop qword [main_loopf5146]
pop qword [main_loopf2716]
pop qword [main_loopc]
pop qword [main_loopf6616]
pop qword [main_loopr]
pop qword [main_loopl]
pop qword [main_loopcontext]
push qword [main_loopf5146]
call if
push rax
pop qword [main_loopf7626]
pop qword [main_loopf2716]
pop qword [main_loopc]
pop qword [main_loopf6616]
pop qword [main_loopr]
pop qword [main_loopl]
pop qword [main_loopcontext]
push qword [main_loopcontext]
push qword [main_loopl]
push qword [main_loopr]
push qword [main_loopf6616]
push qword [main_loopc]
push qword [main_loopf2716]
push qword [main_loopf7626]
jmp f0246_end
main_loopf0246: dq 0
f0246_end:
push 1
pop qword [main_loopf0246]
push qword [main_loopf0246]
jmp f1246_end
main_loopf1246: dq 0
f1246_end:
push qword [main_loopl]
pop qword [main_loopf1246]
push qword [main_loopf1246]
call add
push rax
pop qword [main_loopmid]
pop qword [main_loopf7626]
pop qword [main_loopf2716]
pop qword [main_loopc]
pop qword [main_loopf6616]
pop qword [main_loopr]
pop qword [main_loopl]
pop qword [main_loopcontext]
push qword [main_loopcontext]
push qword [main_loopl]
push qword [main_loopr]
push qword [main_loopf6616]
push qword [main_loopc]
push qword [main_loopf2716]
push qword [main_loopf7626]
push qword [main_loopmid]
jmp f2246_end
main_loopf2246: dq 0
f2246_end:
push qword [main_loopmid]
pop qword [main_loopf2246]
push qword [main_loopf2246]
jmp f3246_end
main_loopf3246: dq 0
f3246_end:
push qword [main_loopl]
pop qword [main_loopf3246]
push qword [main_loopf3246]
call print_range
push rax
pop qword [main_loopf3726]
pop qword [main_loopmid]
pop qword [main_loopf7626]
pop qword [main_loopf2716]
pop qword [main_loopc]
pop qword [main_loopf6616]
pop qword [main_loopr]
pop qword [main_loopl]
pop qword [main_loopcontext]
jmp f4246_end
main_loopf4246: dq 0
f4246_end:
push qword [main_loopr]
pop qword [main_loopf4246]
push qword [main_loopf4246]
jmp f5246_end
main_loopf5246: dq 0
f5246_end:
push qword [main_loopmid]
pop qword [main_loopf5246]
push qword [main_loopf5246]
jmp f6246_end
main_loopf6246: dq 0
f6246_end:
push qword [main_loopcontext]
pop qword [main_loopf6246]
push qword [main_loopf6246]
jmp main_loop
main_loop_end:
jmp inpf_name_end
inpf_name: dq 0
inpf_name_end:
jmp outf_name_end
outf_name: dq 0
outf_name_end:
jmp f7246_end
f7246argc: dq 0
f7246argv1: dq 0
f7246inpf: dq 0
f7246outf: dq 0
f7246f1346: dq 0
f7246:
pop rax
pop qword [f7246argc]
pop qword [f7246argv1]
pop qword [f7246inpf]
pop qword [f7246outf]
push rax
mov [f7246f1346], rsp
mov rsp, [f7246f1346]
jmp f2346_end
f7246f2346: dq 0
f2346_end:
push qword [f7246outf]
pop qword [f7246f2346]
pop rax
push qword [f7246f2346]
push rax
jmp f3346_end
f7246f3346: dq 0
f3346_end:
push qword [f7246inpf]
pop qword [f7246f3346]
pop rax
push qword [f7246f3346]
push rax
pop rcx
pop rax
jmp rcx
ret
f7246_end:
mov rdi, 16
call malloc
mov qword [rax+8], f7246
mov qword [rax], 1
push rax
call runtime_call_ret
push rax
pop qword [inpf_name]
pop qword [outf_name]
jmp inpf_end
inpf: dq 0
inpf_end:
jmp f4346_end
f4346: dq 0
f4346_end:
push 0
pop qword [f4346]
push qword [f4346]
jmp f5346_end
f5346: dq 0
f5346_end:
push 0
pop qword [f5346]
push qword [f5346]
jmp f6346_end
f6346: dq 0
f6346_end:
push 0
pop qword [f6346]
push qword [f6346]
jmp f7346_end
f7346: dq 0
f7346_end:
push 65535
pop qword [f7346]
push qword [f7346]
jmp f0446_end
f0446: dq 0
f0446_end:
push 0
pop qword [f0446]
push qword [f0446]
jmp f1446_end
f1446: dq 0
f1446_end:
push qword [inpf_name]
pop qword [f1446]
push qword [f1446]
jmp f2446_end
f2446: dq 0
f2446_end:
push 2
pop qword [f2446]
push qword [f2446]
call sysc
push rax
pop qword [inpf]
jmp outf_end
outf: dq 0
outf_end:
jmp f3446_end
f3446: dq 0
f3446_end:
push 0
pop qword [f3446]
push qword [f3446]
jmp f4446_end
f4446: dq 0
f4446_end:
push 0
pop qword [f4446]
push qword [f4446]
jmp f5446_end
f5446: dq 0
f5446_end:
push 0
pop qword [f5446]
push qword [f5446]
jmp f6446_end
f6446: dq 0
f6446_end:
push 65535
pop qword [f6446]
push qword [f6446]
jmp f7446_end
f7446: dq 0
f7446_end:
push 578
pop qword [f7446]
push qword [f7446]
jmp f0546_end
f0546: dq 0
f0546_end:
push qword [outf_name]
pop qword [f0546]
push qword [f0546]
jmp f1546_end
f1546: dq 0
f1546_end:
push 2
pop qword [f1546]
push qword [f1546]
call sysc
push rax
pop qword [outf]

jmp flen_end
flen: dq 0
flen_end:
jmp f2546_end
f2546buff: dq 0
f2546f3546: dq 0
f2546f7546: dq 0
f2546:
pop rax
push rax
mov [f2546f7546], rsp
push qword [f2546f7546]
jmp f0646_end
f2546f0646: dq 0
f0646_end:
push 192
pop qword [f2546f0646]
push qword [f2546f0646]
call malloc_func
push rax
pop qword [f2546buff]
pop qword [f2546f7546]
jmp f1646_end
f2546f1646: dq 0
f1646_end:
push 0
pop qword [f2546f1646]
push qword [f2546f1646]
jmp f2646_end
f2546f2646: dq 0
f2646_end:
push 0
pop qword [f2546f2646]
push qword [f2546f2646]
jmp f3646_end
f2546f3646: dq 0
f3646_end:
push 0
pop qword [f2546f3646]
push qword [f2546f3646]
jmp f4646_end
f2546f4646: dq 0
f4646_end:
push 0
pop qword [f2546f4646]
push qword [f2546f4646]
jmp f5646_end
f2546f5646: dq 0
f5646_end:
push qword [f2546buff]
pop qword [f2546f5646]
push qword [f2546f5646]
jmp f6646_end
f2546f6646: dq 0
f6646_end:
push qword [inpf]
pop qword [f2546f6646]
push qword [f2546f6646]
jmp f7646_end
f2546f7646: dq 0
f7646_end:
push 5
pop qword [f2546f7646]
push qword [f2546f7646]
call sysc
push rax
pop qword [f2546f3546]
mov rsp, [f2546f7546]
jmp f0746_end
f2546f0746: dq 0
f0746_end:
push qword [f2546f7546]
push qword [f2546buff]
push qword [f2546f3546]
jmp f1746_end
f2546f1746: dq 0
f1746_end:
push qword [f2546f7546]
push qword [f2546buff]
push qword [f2546f3546]
jmp f2746_end
f2546f2746: dq 0
f2746_end:
push 48
pop qword [f2546f2746]
push qword [f2546f2746]
jmp f3746_end
f2546f3746: dq 0
f3746_end:
push qword [f2546buff]
pop qword [f2546f3746]
push qword [f2546f3746]
call add
push rax
pop qword [f2546f1746]
pop qword [f2546f3546]
pop qword [f2546buff]
pop qword [f2546f7546]
push qword [f2546f1746]
call deref
push rax
pop qword [f2546f0746]
pop qword [f2546f3546]
pop qword [f2546buff]
pop qword [f2546f7546]
pop rax
push qword [f2546f0746]
push rax
pop rcx
pop rax
jmp rcx
ret
f2546_end:
mov rdi, 16
call malloc
mov qword [rax+8], f2546
mov qword [rax], 1
push rax
call runtime_call_ret
push rax
pop qword [flen]

jmp input_end
input: dq 0
input_end:
jmp f4746_end
f4746: dq 0
f4746_end:
push 0
pop qword [f4746]
push qword [f4746]
jmp f5746_end
f5746: dq 0
f5746_end:
push qword [inpf]
pop qword [f5746]
push qword [f5746]
jmp f6746_end
f6746: dq 0
f6746_end:
push 2
pop qword [f6746]
push qword [f6746]
jmp f7746_end
f7746: dq 0
f7746_end:
push 3
pop qword [f7746]
push qword [f7746]
jmp f0056_end
f0056: dq 0
f0056_end:
push qword [flen]
pop qword [f0056]
push qword [f0056]
jmp f1056_end
f1056: dq 0
f1056_end:
push 0
pop qword [f1056]
push qword [f1056]
jmp f2056_end
f2056: dq 0
f2056_end:
push 9
pop qword [f2056]
push qword [f2056]
call sysc
push rax
pop qword [input]
jmp f3056_end
f3056: dq 0
f3056_end:
push qword [input]
pop qword [f3056]
push qword [f3056]
jmp f4056_end
f4056: dq 0
f4056_end:
push qword [flen]
pop qword [f4056]
push qword [f4056]
call add
push rax
pop qword [flen]
jmp buffer_end
buffer: dq 0
buffer_end:
jmp f5056_end
f5056: dq 0
f5056_end:
push 4096
pop qword [f5056]
push qword [f5056]
call malloc_func
push rax
pop qword [buffer]
jmp f6056_end
f6056: dq 0
f6056_end:
jmp f7056_end
f7056: dq 0
f7056_end:
jmp f0156_end
f0156: db `add:\npop rbx\npop rax\npop rcx\npush rbx\nadd rax, rcx\nret\n`
db 0
f0156_end: push f0156
pop qword [f7056]
push qword [f7056]
call printf
push rax
pop qword [f6056]
jmp f1156_end
f1156: dq 0
f1156_end:
jmp f2156_end
f2156: dq 0
f2156_end:
jmp f3156_end
f3156: db `sysc:\npop rcx\npop rax\npop rdi\npop rsi\npop rdx\npop r10\npop r8\npop r9\npush rcx\nsyscall\nret\n`
db 0
f3156_end: push f3156
pop qword [f2156]
push qword [f2156]
call printf
push rax
pop qword [f1156]
jmp f4156_end
f4156: dq 0
f4156_end:
jmp f5156_end
f5156: dq 0
f5156_end:
jmp f6156_end
f6156: db `deref:\npop rdx\npop rax\npush rdx\nmov rax, [rax]\nret\n`
db 0
f6156_end: push f6156
pop qword [f5156]
push qword [f5156]
call printf
push rax
pop qword [f4156]
jmp f7156_end
f7156: dq 0
f7156_end:
jmp f0256_end
f0256: dq 0
f0256_end:
jmp f1256_end
f1256: db `deref_byte:\npop rdx\npop rax\npush rdx\nmov al, [rax]\nand rax, 0xFF\nret\n`
db 0
f1256_end: push f1256
pop qword [f0256]
push qword [f0256]
call printf
push rax
pop qword [f7156]
jmp f2256_end
f2256: dq 0
f2256_end:
jmp f3256_end
f3256: dq 0
f3256_end:
jmp f4256_end
f4256: db `return:\npop rcx\npop rax\npush rcx\nret\n`
db 0
f4256_end: push f4256
pop qword [f3256]
push qword [f3256]
call printf
push rax
pop qword [f2256]
jmp f5256_end
f5256: dq 0
f5256_end:
jmp f6256_end
f6256: dq 0
f6256_end:
jmp f7256_end
f7256: db `mul:\npop rcx\npop rax\npop rdx\nmul rdx\njmp rcx\n`
db 0
f7256_end: push f7256
pop qword [f6256]
push qword [f6256]
call printf
push rax
pop qword [f5256]
jmp f0356_end
f0356: dq 0
f0356_end:
jmp f1356_end
f1356: dq 0
f1356_end:
jmp f2356_end
f2356: db `div:\npop rcx\npop rax\nmov rdx, 0\npop rdi\nidiv rdi\njmp rcx\n`
db 0
f2356_end: push f2356
pop qword [f1356]
push qword [f1356]
call printf
push rax
pop qword [f0356]
jmp f3356_end
f3356: dq 0
f3356_end:
jmp f4356_end
f4356: dq 0
f4356_end:
jmp f5356_end
f5356: db `mod:\npop rcx\npop rax\nmov rdx, 0\npop rdi\nidiv rdi\nmov rax, rdx\njmp rcx\n`
db 0
f5356_end: push f5356
pop qword [f4356]
push qword [f4356]
call printf
push rax
pop qword [f3356]
jmp f6356_end
f6356: dq 0
f6356_end:
jmp f7356_end
f7356: dq 0
f7356_end:
jmp f0456_end
f0456: db `is_digit:\npop rax\npop rdi\npush rax\ncmp rdi, 48\njl not_digit\ncmp rdi, 57\njg not_digit\nyes_digit:\nmov rax, 1\nret\nnot_digit:\nmov rax, 0\nret\n`
db 0
f0456_end: push f0456
pop qword [f7356]
push qword [f7356]
call printf
push rax
pop qword [f6356]
jmp res_end
res: dq 0
res_end:
jmp f1456_end
f1456: dq 0
f1456_end:
push qword [flen]
pop qword [f1456]
push qword [f1456]
jmp f2456_end
f2456: dq 0
f2456_end:
push qword [input]
pop qword [f2456]
push qword [f2456]
call main_start
push rax
pop qword [res]

